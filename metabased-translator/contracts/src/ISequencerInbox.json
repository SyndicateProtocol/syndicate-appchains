{"abi":[{"type":"function","name":"BROTLI_MESSAGE_HEADER_FLAG","inputs":[],"outputs":[{"name":"","type":"bytes1","internalType":"bytes1"}],"stateMutability":"view"},{"type":"function","name":"DAS_MESSAGE_HEADER_FLAG","inputs":[],"outputs":[{"name":"","type":"bytes1","internalType":"bytes1"}],"stateMutability":"view"},{"type":"function","name":"DATA_AUTHENTICATED_FLAG","inputs":[],"outputs":[{"name":"","type":"bytes1","internalType":"bytes1"}],"stateMutability":"view"},{"type":"function","name":"DATA_BLOB_HEADER_FLAG","inputs":[],"outputs":[{"name":"","type":"bytes1","internalType":"bytes1"}],"stateMutability":"view"},{"type":"function","name":"HEADER_LENGTH","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"TREE_DAS_MESSAGE_HEADER_FLAG","inputs":[],"outputs":[{"name":"","type":"bytes1","internalType":"bytes1"}],"stateMutability":"view"},{"type":"function","name":"ZERO_HEAVY_MESSAGE_HEADER_FLAG","inputs":[],"outputs":[{"name":"","type":"bytes1","internalType":"bytes1"}],"stateMutability":"view"},{"type":"function","name":"addSequencerL2Batch","inputs":[{"name":"sequenceNumber","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"afterDelayedMessagesRead","type":"uint256","internalType":"uint256"},{"name":"gasRefunder","type":"address","internalType":"contract IGasRefunder"},{"name":"prevMessageCount","type":"uint256","internalType":"uint256"},{"name":"newMessageCount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addSequencerL2BatchDelayProof","inputs":[{"name":"sequenceNumber","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"afterDelayedMessagesRead","type":"uint256","internalType":"uint256"},{"name":"gasRefunder","type":"address","internalType":"contract IGasRefunder"},{"name":"prevMessageCount","type":"uint256","internalType":"uint256"},{"name":"newMessageCount","type":"uint256","internalType":"uint256"},{"name":"delayProof","type":"tuple","internalType":"struct DelayProof","components":[{"name":"beforeDelayedAcc","type":"bytes32","internalType":"bytes32"},{"name":"delayedMessage","type":"tuple","internalType":"struct Messages.Message","components":[{"name":"kind","type":"uint8","internalType":"uint8"},{"name":"sender","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"timestamp","type":"uint64","internalType":"uint64"},{"name":"inboxSeqNum","type":"uint256","internalType":"uint256"},{"name":"baseFeeL1","type":"uint256","internalType":"uint256"},{"name":"messageDataHash","type":"bytes32","internalType":"bytes32"}]}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addSequencerL2BatchFromBlobs","inputs":[{"name":"sequenceNumber","type":"uint256","internalType":"uint256"},{"name":"afterDelayedMessagesRead","type":"uint256","internalType":"uint256"},{"name":"gasRefunder","type":"address","internalType":"contract IGasRefunder"},{"name":"prevMessageCount","type":"uint256","internalType":"uint256"},{"name":"newMessageCount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addSequencerL2BatchFromBlobsDelayProof","inputs":[{"name":"sequenceNumber","type":"uint256","internalType":"uint256"},{"name":"afterDelayedMessagesRead","type":"uint256","internalType":"uint256"},{"name":"gasRefunder","type":"address","internalType":"contract IGasRefunder"},{"name":"prevMessageCount","type":"uint256","internalType":"uint256"},{"name":"newMessageCount","type":"uint256","internalType":"uint256"},{"name":"delayProof","type":"tuple","internalType":"struct DelayProof","components":[{"name":"beforeDelayedAcc","type":"bytes32","internalType":"bytes32"},{"name":"delayedMessage","type":"tuple","internalType":"struct Messages.Message","components":[{"name":"kind","type":"uint8","internalType":"uint8"},{"name":"sender","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"timestamp","type":"uint64","internalType":"uint64"},{"name":"inboxSeqNum","type":"uint256","internalType":"uint256"},{"name":"baseFeeL1","type":"uint256","internalType":"uint256"},{"name":"messageDataHash","type":"bytes32","internalType":"bytes32"}]}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addSequencerL2BatchFromOrigin","inputs":[{"name":"sequenceNumber","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"afterDelayedMessagesRead","type":"uint256","internalType":"uint256"},{"name":"gasRefunder","type":"address","internalType":"contract IGasRefunder"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addSequencerL2BatchFromOrigin","inputs":[{"name":"sequenceNumber","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"afterDelayedMessagesRead","type":"uint256","internalType":"uint256"},{"name":"gasRefunder","type":"address","internalType":"contract IGasRefunder"},{"name":"prevMessageCount","type":"uint256","internalType":"uint256"},{"name":"newMessageCount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addSequencerL2BatchFromOriginDelayProof","inputs":[{"name":"sequenceNumber","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"afterDelayedMessagesRead","type":"uint256","internalType":"uint256"},{"name":"gasRefunder","type":"address","internalType":"contract IGasRefunder"},{"name":"prevMessageCount","type":"uint256","internalType":"uint256"},{"name":"newMessageCount","type":"uint256","internalType":"uint256"},{"name":"delayProof","type":"tuple","internalType":"struct DelayProof","components":[{"name":"beforeDelayedAcc","type":"bytes32","internalType":"bytes32"},{"name":"delayedMessage","type":"tuple","internalType":"struct Messages.Message","components":[{"name":"kind","type":"uint8","internalType":"uint8"},{"name":"sender","type":"address","internalType":"address"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"timestamp","type":"uint64","internalType":"uint64"},{"name":"inboxSeqNum","type":"uint256","internalType":"uint256"},{"name":"baseFeeL1","type":"uint256","internalType":"uint256"},{"name":"messageDataHash","type":"bytes32","internalType":"bytes32"}]}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"batchCount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"batchPosterManager","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"bridge","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IBridge"}],"stateMutability":"view"},{"type":"function","name":"dasKeySetInfo","inputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"},{"name":"","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"forceInclusion","inputs":[{"name":"_totalDelayedMessagesRead","type":"uint256","internalType":"uint256"},{"name":"kind","type":"uint8","internalType":"uint8"},{"name":"l1BlockAndTime","type":"uint64[2]","internalType":"uint64[2]"},{"name":"baseFeeL1","type":"uint256","internalType":"uint256"},{"name":"sender","type":"address","internalType":"address"},{"name":"messageDataHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"forceInclusionDeadline","inputs":[{"name":"blockNumber","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"blockNumberDeadline","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getKeysetCreationBlock","inputs":[{"name":"ksHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"inboxAccs","inputs":[{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"bridge_","type":"address","internalType":"contract IBridge"},{"name":"maxTimeVariation_","type":"tuple","internalType":"struct ISequencerInbox.MaxTimeVariation","components":[{"name":"delayBlocks","type":"uint256","internalType":"uint256"},{"name":"futureBlocks","type":"uint256","internalType":"uint256"},{"name":"delaySeconds","type":"uint256","internalType":"uint256"},{"name":"futureSeconds","type":"uint256","internalType":"uint256"}]},{"name":"bufferConfig_","type":"tuple","internalType":"struct BufferConfig","components":[{"name":"threshold","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"},{"name":"replenishRateInBasis","type":"uint64","internalType":"uint64"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"invalidateKeysetHash","inputs":[{"name":"ksHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isBatchPoster","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDelayBufferable","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isSequencer","inputs":[{"name":"","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isValidKeysetHash","inputs":[{"name":"ksHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"maxDataSize","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"maxTimeVariation","inputs":[],"outputs":[{"name":"delayBlocks","type":"uint256","internalType":"uint256"},{"name":"futureBlocks","type":"uint256","internalType":"uint256"},{"name":"delaySeconds","type":"uint256","internalType":"uint256"},{"name":"futureSeconds","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"removeDelayAfterFork","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollup","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IOwnable"}],"stateMutability":"view"},{"type":"function","name":"setBatchPosterManager","inputs":[{"name":"newBatchPosterManager","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setIsBatchPoster","inputs":[{"name":"addr","type":"address","internalType":"address"},{"name":"isBatchPoster_","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setIsSequencer","inputs":[{"name":"addr","type":"address","internalType":"address"},{"name":"isSequencer_","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setMaxTimeVariation","inputs":[{"name":"maxTimeVariation_","type":"tuple","internalType":"struct ISequencerInbox.MaxTimeVariation","components":[{"name":"delayBlocks","type":"uint256","internalType":"uint256"},{"name":"futureBlocks","type":"uint256","internalType":"uint256"},{"name":"delaySeconds","type":"uint256","internalType":"uint256"},{"name":"futureSeconds","type":"uint256","internalType":"uint256"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setValidKeyset","inputs":[{"name":"keysetBytes","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"totalDelayedMessagesRead","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"updateRollupAddress","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"BatchPosterManagerSet","inputs":[{"name":"newBatchPosterManager","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"BatchPosterSet","inputs":[{"name":"batchPoster","type":"address","indexed":false,"internalType":"address"},{"name":"isBatchPoster","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"BufferConfigSet","inputs":[{"name":"bufferConfig","type":"tuple","indexed":false,"internalType":"struct BufferConfig","components":[{"name":"threshold","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"},{"name":"replenishRateInBasis","type":"uint64","internalType":"uint64"}]}],"anonymous":false},{"type":"event","name":"InboxMessageDelivered","inputs":[{"name":"messageNum","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"InboxMessageDeliveredFromOrigin","inputs":[{"name":"messageNum","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"InvalidateKeyset","inputs":[{"name":"keysetHash","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"MaxTimeVariationSet","inputs":[{"name":"maxTimeVariation","type":"tuple","indexed":false,"internalType":"struct ISequencerInbox.MaxTimeVariation","components":[{"name":"delayBlocks","type":"uint256","internalType":"uint256"},{"name":"futureBlocks","type":"uint256","internalType":"uint256"},{"name":"delaySeconds","type":"uint256","internalType":"uint256"},{"name":"futureSeconds","type":"uint256","internalType":"uint256"}]}],"anonymous":false},{"type":"event","name":"OwnerFunctionCalled","inputs":[{"name":"id","type":"uint256","indexed":true,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"SequencerBatchData","inputs":[{"name":"batchSequenceNumber","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"data","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"SequencerBatchDelivered","inputs":[{"name":"batchSequenceNumber","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"beforeAcc","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"afterAcc","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"delayedAcc","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"afterDelayedMessagesRead","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"timeBounds","type":"tuple","indexed":false,"internalType":"struct IBridge.TimeBounds","components":[{"name":"minTimestamp","type":"uint64","internalType":"uint64"},{"name":"maxTimestamp","type":"uint64","internalType":"uint64"},{"name":"minBlockNumber","type":"uint64","internalType":"uint64"},{"name":"maxBlockNumber","type":"uint64","internalType":"uint64"}]},{"name":"dataLocation","type":"uint8","indexed":false,"internalType":"enum IBridge.BatchDataLocation"}],"anonymous":false},{"type":"event","name":"SequencerSet","inputs":[{"name":"addr","type":"address","indexed":false,"internalType":"address"},{"name":"isSequencer","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"SetValidKeyset","inputs":[{"name":"keysetHash","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"keysetBytes","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"BROTLI_MESSAGE_HEADER_FLAG()":"16af91a7","DAS_MESSAGE_HEADER_FLAG()":"f60a5091","DATA_AUTHENTICATED_FLAG()":"e5a358c8","DATA_BLOB_HEADER_FLAG()":"2cbf74e5","HEADER_LENGTH()":"27957a49","TREE_DAS_MESSAGE_HEADER_FLAG()":"6c890450","ZERO_HEAVY_MESSAGE_HEADER_FLAG()":"02c99275","addSequencerL2Batch(uint256,bytes,uint256,address,uint256,uint256)":"e0bc9729","addSequencerL2BatchDelayProof(uint256,bytes,uint256,address,uint256,uint256,(bytes32,(uint8,address,uint64,uint64,uint256,uint256,bytes32)))":"6e620055","addSequencerL2BatchFromBlobs(uint256,uint256,address,uint256,uint256)":"3e5aa082","addSequencerL2BatchFromBlobsDelayProof(uint256,uint256,address,uint256,uint256,(bytes32,(uint8,address,uint64,uint64,uint256,uint256,bytes32)))":"917cf8ac","addSequencerL2BatchFromOrigin(uint256,bytes,uint256,address)":"6f12b0c9","addSequencerL2BatchFromOrigin(uint256,bytes,uint256,address,uint256,uint256)":"8f111f3c","addSequencerL2BatchFromOriginDelayProof(uint256,bytes,uint256,address,uint256,uint256,(bytes32,(uint8,address,uint64,uint64,uint256,uint256,bytes32)))":"69cacded","batchCount()":"06f13056","batchPosterManager()":"cc2a1a0c","bridge()":"e78cea92","dasKeySetInfo(bytes32)":"715ea34b","forceInclusion(uint256,uint8,uint64[2],uint256,address,bytes32)":"f1981578","forceInclusionDeadline(uint64)":"dd44e6e0","getKeysetCreationBlock(bytes32)":"258f0495","inboxAccs(uint256)":"d9dd67ab","initialize(address,(uint256,uint256,uint256,uint256),(uint64,uint64,uint64))":"1ad87e45","invalidateKeysetHash(bytes32)":"84420860","isBatchPoster(address)":"71c3e6fe","isDelayBufferable()":"4b678a66","isSequencer(address)":"6d46e987","isValidKeysetHash(bytes32)":"1637be48","maxDataSize()":"e8eb1dc3","maxTimeVariation()":"ebea461d","removeDelayAfterFork()":"96cc5c78","rollup()":"cb23bcb5","setBatchPosterManager(address)":"1ff64790","setIsBatchPoster(address,bool)":"6e7df3e7","setIsSequencer(address,bool)":"1f956632","setMaxTimeVariation((uint256,uint256,uint256,uint256))":"b31761f8","setValidKeyset(bytes)":"d1ce8da8","totalDelayedMessagesRead()":"7fa3a40e","updateRollupAddress()":"6ae71f12"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newBatchPosterManager\",\"type\":\"address\"}],\"name\":\"BatchPosterManagerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"batchPoster\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBatchPoster\",\"type\":\"bool\"}],\"name\":\"BatchPosterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"threshold\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"replenishRateInBasis\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct BufferConfig\",\"name\":\"bufferConfig\",\"type\":\"tuple\"}],\"name\":\"BufferConfigSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"messageNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"InboxMessageDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"messageNum\",\"type\":\"uint256\"}],\"name\":\"InboxMessageDeliveredFromOrigin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"keysetHash\",\"type\":\"bytes32\"}],\"name\":\"InvalidateKeyset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"delayBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"futureBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delaySeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"futureSeconds\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct ISequencerInbox.MaxTimeVariation\",\"name\":\"maxTimeVariation\",\"type\":\"tuple\"}],\"name\":\"MaxTimeVariationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"OwnerFunctionCalled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchSequenceNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"SequencerBatchData\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchSequenceNumber\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"beforeAcc\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"afterAcc\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"delayedAcc\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"afterDelayedMessagesRead\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"minTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"minBlockNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxBlockNumber\",\"type\":\"uint64\"}],\"indexed\":false,\"internalType\":\"struct IBridge.TimeBounds\",\"name\":\"timeBounds\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"enum IBridge.BatchDataLocation\",\"name\":\"dataLocation\",\"type\":\"uint8\"}],\"name\":\"SequencerBatchDelivered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isSequencer\",\"type\":\"bool\"}],\"name\":\"SequencerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"keysetHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"keysetBytes\",\"type\":\"bytes\"}],\"name\":\"SetValidKeyset\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BROTLI_MESSAGE_HEADER_FLAG\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"\",\"type\":\"bytes1\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DAS_MESSAGE_HEADER_FLAG\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"\",\"type\":\"bytes1\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DATA_AUTHENTICATED_FLAG\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"\",\"type\":\"bytes1\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DATA_BLOB_HEADER_FLAG\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"\",\"type\":\"bytes1\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HEADER_LENGTH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREE_DAS_MESSAGE_HEADER_FLAG\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"\",\"type\":\"bytes1\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO_HEAVY_MESSAGE_HEADER_FLAG\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"\",\"type\":\"bytes1\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sequenceNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"afterDelayedMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"contract IGasRefunder\",\"name\":\"gasRefunder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"prevMessageCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newMessageCount\",\"type\":\"uint256\"}],\"name\":\"addSequencerL2Batch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sequenceNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"afterDelayedMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"contract IGasRefunder\",\"name\":\"gasRefunder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"prevMessageCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newMessageCount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"beforeDelayedAcc\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"inboxSeqNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseFeeL1\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"messageDataHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct Messages.Message\",\"name\":\"delayedMessage\",\"type\":\"tuple\"}],\"internalType\":\"struct DelayProof\",\"name\":\"delayProof\",\"type\":\"tuple\"}],\"name\":\"addSequencerL2BatchDelayProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sequenceNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"afterDelayedMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"contract IGasRefunder\",\"name\":\"gasRefunder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"prevMessageCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newMessageCount\",\"type\":\"uint256\"}],\"name\":\"addSequencerL2BatchFromBlobs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sequenceNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"afterDelayedMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"contract IGasRefunder\",\"name\":\"gasRefunder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"prevMessageCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newMessageCount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"beforeDelayedAcc\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"inboxSeqNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseFeeL1\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"messageDataHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct Messages.Message\",\"name\":\"delayedMessage\",\"type\":\"tuple\"}],\"internalType\":\"struct DelayProof\",\"name\":\"delayProof\",\"type\":\"tuple\"}],\"name\":\"addSequencerL2BatchFromBlobsDelayProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sequenceNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"afterDelayedMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"contract IGasRefunder\",\"name\":\"gasRefunder\",\"type\":\"address\"}],\"name\":\"addSequencerL2BatchFromOrigin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sequenceNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"afterDelayedMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"contract IGasRefunder\",\"name\":\"gasRefunder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"prevMessageCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newMessageCount\",\"type\":\"uint256\"}],\"name\":\"addSequencerL2BatchFromOrigin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sequenceNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"afterDelayedMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"contract IGasRefunder\",\"name\":\"gasRefunder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"prevMessageCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newMessageCount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"beforeDelayedAcc\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"inboxSeqNum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseFeeL1\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"messageDataHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct Messages.Message\",\"name\":\"delayedMessage\",\"type\":\"tuple\"}],\"internalType\":\"struct DelayProof\",\"name\":\"delayProof\",\"type\":\"tuple\"}],\"name\":\"addSequencerL2BatchFromOriginDelayProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"batchCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"batchPosterManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bridge\",\"outputs\":[{\"internalType\":\"contract IBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"dasKeySetInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalDelayedMessagesRead\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"uint64[2]\",\"name\":\"l1BlockAndTime\",\"type\":\"uint64[2]\"},{\"internalType\":\"uint256\",\"name\":\"baseFeeL1\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"messageDataHash\",\"type\":\"bytes32\"}],\"name\":\"forceInclusion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"}],\"name\":\"forceInclusionDeadline\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"blockNumberDeadline\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ksHash\",\"type\":\"bytes32\"}],\"name\":\"getKeysetCreationBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"inboxAccs\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IBridge\",\"name\":\"bridge_\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"delayBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"futureBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delaySeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"futureSeconds\",\"type\":\"uint256\"}],\"internalType\":\"struct ISequencerInbox.MaxTimeVariation\",\"name\":\"maxTimeVariation_\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"threshold\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"replenishRateInBasis\",\"type\":\"uint64\"}],\"internalType\":\"struct BufferConfig\",\"name\":\"bufferConfig_\",\"type\":\"tuple\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ksHash\",\"type\":\"bytes32\"}],\"name\":\"invalidateKeysetHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isBatchPoster\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isDelayBufferable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isSequencer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"ksHash\",\"type\":\"bytes32\"}],\"name\":\"isValidKeysetHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxDataSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTimeVariation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"delayBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"futureBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delaySeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"futureSeconds\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removeDelayAfterFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rollup\",\"outputs\":[{\"internalType\":\"contract IOwnable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newBatchPosterManager\",\"type\":\"address\"}],\"name\":\"setBatchPosterManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isBatchPoster_\",\"type\":\"bool\"}],\"name\":\"setIsBatchPoster\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isSequencer_\",\"type\":\"bool\"}],\"name\":\"setIsSequencer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"delayBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"futureBlocks\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delaySeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"futureSeconds\",\"type\":\"uint256\"}],\"internalType\":\"struct ISequencerInbox.MaxTimeVariation\",\"name\":\"maxTimeVariation_\",\"type\":\"tuple\"}],\"name\":\"setMaxTimeVariation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"keysetBytes\",\"type\":\"bytes\"}],\"name\":\"setValidKeyset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDelayedMessagesRead\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateRollupAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BatchPosterManagerSet(address)\":{\"details\":\"Owner set the batch poster manager.      This event may have been introduced in an upgrade and therefore might not give the full history.      To get the full history, search for `OwnerFunctionCalled(5)` events.\"},\"BatchPosterSet(address,bool)\":{\"details\":\"Owner set a batch poster.      This event may have been introduced in an upgrade and therefore might not give the full history.      To get the full history, search for `OwnerFunctionCalled(1)` events.\"},\"BufferConfigSet((uint64,uint64,uint64))\":{\"details\":\"Owner set the buffer config.\"},\"InboxMessageDelivered(uint256,bytes)\":{\"details\":\"event emitted when a inbox message is added to the Bridge's delayed accumulator\"},\"InboxMessageDeliveredFromOrigin(uint256)\":{\"details\":\"event emitted when a inbox message is added to the Bridge's delayed accumulator same as InboxMessageDelivered but the batch data is available in tx.input\"},\"InvalidateKeyset(bytes32)\":{\"details\":\"a keyset was invalidated\"},\"MaxTimeVariationSet((uint256,uint256,uint256,uint256))\":{\"details\":\"Owner set max time variation.      This event may have been introduced in an upgrade and therefore might not give the full history.      To get the full history, search for `OwnerFunctionCalled(0)` events.\"},\"SequencerBatchData(uint256,bytes)\":{\"details\":\"a separate event that emits batch data when this isn't easily accessible in the tx.input\"},\"SequencerSet(address,bool)\":{\"details\":\"Owner or batch poster manager set a sequencer.      This event may have been introduced in an upgrade and therefore might not give the full history.      To get the full history, search for `OwnerFunctionCalled(4)` events.\"},\"SetValidKeyset(bytes32,bytes)\":{\"details\":\"a valid keyset was added\"}},\"kind\":\"dev\",\"methods\":{\"BROTLI_MESSAGE_HEADER_FLAG()\":{\"details\":\"If the first data byte after the header has this bit set,      then the batch data has been brotli compressed      See: https://github.com/OffchainLabs/nitro/blob/69de0603abf6f900a4128cab7933df60cad54ded/arbstate/das_reader.go\"},\"DAS_MESSAGE_HEADER_FLAG()\":{\"details\":\"If the first data byte after the header has this bit set,      then the batch data is a das message      See: https://github.com/OffchainLabs/nitro/blob/69de0603abf6f900a4128cab7933df60cad54ded/arbstate/das_reader.go\"},\"DATA_AUTHENTICATED_FLAG()\":{\"details\":\"If the first batch data byte after the header has this bit set,      the sequencer inbox has authenticated the data. Currently only used for 4844 blob support.      See: https://github.com/OffchainLabs/nitro/blob/69de0603abf6f900a4128cab7933df60cad54ded/arbstate/das_reader.go\"},\"DATA_BLOB_HEADER_FLAG()\":{\"details\":\"If the first data byte after the header has this bit set,      then the batch data is to be found in 4844 data blobs      See: https://github.com/OffchainLabs/nitro/blob/69de0603abf6f900a4128cab7933df60cad54ded/arbstate/das_reader.go\"},\"HEADER_LENGTH()\":{\"details\":\"The size of the batch header\"},\"TREE_DAS_MESSAGE_HEADER_FLAG()\":{\"details\":\"If the first data byte after the header has this bit set,      then the batch data is a das message that employs a merklesization strategy      See: https://github.com/OffchainLabs/nitro/blob/69de0603abf6f900a4128cab7933df60cad54ded/arbstate/das_reader.go\"},\"ZERO_HEAVY_MESSAGE_HEADER_FLAG()\":{\"details\":\"If the first data byte after the header has this bit set,      then the batch data uses a zero heavy encoding      See: https://github.com/OffchainLabs/nitro/blob/69de0603abf6f900a4128cab7933df60cad54ded/arbstate/das_reader.go\"},\"addSequencerL2BatchDelayProof(uint256,bytes,uint256,address,uint256,uint256,(bytes32,(uint8,address,uint64,uint64,uint256,uint256,bytes32)))\":{\"details\":\"Proves message delays, updates delay buffers, and posts an L2 batch with calldata.         delayProof is used to prove the delay of the message and syncs the delay buffer.\"},\"addSequencerL2BatchFromBlobsDelayProof(uint256,uint256,address,uint256,uint256,(bytes32,(uint8,address,uint64,uint64,uint256,uint256,bytes32)))\":{\"details\":\"Proves message delays, updates delay buffers, and posts an L2 batch with blob data.         DelayProof proves the delay of the message and syncs the delay buffer.\"},\"addSequencerL2BatchFromOrigin(uint256,bytes,uint256,address)\":{\"details\":\"Deprecated, kept for abi generation and will be removed in the future\"},\"addSequencerL2BatchFromOrigin(uint256,bytes,uint256,address,uint256,uint256)\":{\"details\":\"Will be deprecated due to EIP-3074, use `addSequencerL2Batch` instead\"},\"addSequencerL2BatchFromOriginDelayProof(uint256,bytes,uint256,address,uint256,uint256,(bytes32,(uint8,address,uint64,uint64,uint256,uint256,bytes32)))\":{\"details\":\"Proves message delays, updates delay buffers, and posts an L2 batch with calldata posted from an EOA.         DelayProof proves the delay of the message and syncs the delay buffer.         Will be deprecated due to EIP-3074, use `addSequencerL2BatchDelayProof` instead\"},\"forceInclusion(uint256,uint8,uint64[2],uint256,address,bytes32)\":{\"params\":{\"_totalDelayedMessagesRead\":\"The total number of messages to read up to\",\"baseFeeL1\":\"The l1 gas price of the last message to be included\",\"kind\":\"The kind of the last message to be included\",\"l1BlockAndTime\":\"The l1 block and the l1 timestamp of the last message to be included\",\"messageDataHash\":\"The messageDataHash of the last message to be included\",\"sender\":\"The sender of the last message to be included\"}},\"forceInclusionDeadline(uint64)\":{\"details\":\"The delay buffer can change due to pending depletion/replenishment.         This function applies pending buffer changes to proactively calculate the force inclusion deadline.         This is only relevant when the buffer is less than the delayBlocks (unhappy case), otherwise force inclusion deadline is fixed at delayBlocks.\",\"params\":{\"blockNumber\":\"The block number when a delayed message was created\"},\"returns\":{\"blockNumberDeadline\":\"The block number at when the message can be force included\"}},\"invalidateKeysetHash(bytes32)\":{\"params\":{\"ksHash\":\"hash of the keyset\"}},\"maxTimeVariation()\":{\"details\":\"returns 4 uint256 to be compatible with older version\"},\"setBatchPosterManager(address)\":{\"params\":{\"newBatchPosterManager\":\"The new batch poster manager to be set\"}},\"setIsBatchPoster(address,bool)\":{\"params\":{\"addr\":\"the address\",\"isBatchPoster_\":\"if the specified address should be authorized as a batch poster\"}},\"setIsSequencer(address,bool)\":{\"details\":\"The IsSequencer information is used only off-chain by the nitro node to validate sequencer feed signer.\",\"params\":{\"addr\":\"the address\",\"isSequencer_\":\"if the specified address should be authorized as a sequencer\"}},\"setMaxTimeVariation((uint256,uint256,uint256,uint256))\":{\"params\":{\"maxTimeVariation_\":\"the maximum time variation parameters\"}},\"setValidKeyset(bytes)\":{\"params\":{\"keysetBytes\":\"bytes of the serialized keyset\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchPosterManager()\":{\"notice\":\"The batch poster manager has the ability to change the batch poster addresses         This enables the batch poster to do key rotation\"},\"forceInclusion(uint256,uint8,uint64[2],uint256,address,bytes32)\":{\"notice\":\"Force messages from the delayed inbox to be included in the chain         Callable by any address, but message can only be force-included after maxTimeVariation.delayBlocks         has elapsed. As part of normal behaviour the sequencer will include these         messages so it's only necessary to call this if the sequencer is down, or not including any delayed messages.\"},\"forceInclusionDeadline(uint64)\":{\"notice\":\"Calculates the upper bounds of the delay buffer\"},\"getKeysetCreationBlock(bytes32)\":{\"notice\":\"the creation block is intended to still be available after a keyset is deleted\"},\"invalidateKeysetHash(bytes32)\":{\"notice\":\"Invalidates a Data Availability Service keyset\"},\"isDelayBufferable()\":{\"notice\":\"True is the sequencer inbox is delay bufferable\"},\"removeDelayAfterFork()\":{\"notice\":\"Remove force inclusion delay after a L1 chainId fork\"},\"setBatchPosterManager(address)\":{\"notice\":\"Updates the batch poster manager, the address which has the ability to rotate batch poster keys\"},\"setIsBatchPoster(address,bool)\":{\"notice\":\"Updates whether an address is authorized to be a batch poster at the sequencer inbox\"},\"setIsSequencer(address,bool)\":{\"notice\":\"Updates whether an address is authorized to be a sequencer.\"},\"setMaxTimeVariation((uint256,uint256,uint256,uint256))\":{\"notice\":\"Set max delay for sequencer inbox\"},\"setValidKeyset(bytes)\":{\"notice\":\"Makes Data Availability Service keyset valid\"},\"updateRollupAddress()\":{\"notice\":\"Allows the rollup owner to sync the rollup address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/bridge/ISequencerInbox.sol\":\"ISequencerInbox\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[\":@ethereum-waffle/=node_modules/@ethereum-waffle/\",\":@offchainlabs/upgrade-executor/=node_modules/@offchainlabs/upgrade-executor/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solady/=node_modules/solady/\"]},\"sources\":{\"src/bridge/DelayBufferTypes.sol\":{\"keccak256\":\"0x1ad1d78baed19ceb435d9d73a0890ae753a0246ed3085bde8ac942df8cd37c6f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://83fbf63f2fa1fb4deb9e76edc1e1f6b4bae05bf5b8676423f6251d5a2b33ed78\",\"dweb:/ipfs/QmaccnTmiwQF57AcBXCdLZp7QWjjNgb3PV3USSeFye5TaS\"]},\"src/bridge/IBridge.sol\":{\"keccak256\":\"0xc5f1c2ea4cb8a1da4c0fd900a32dc6a8bdfac6f8288bf9a6eb886a7485e2c4a0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2ec09214cca8b097550cd6beac7f6b81ac5f598998d372aec6cede08cfc0cefd\",\"dweb:/ipfs/QmTLi7EgZvX3VqemmxV61cgWGsDanRqSvef19djGg6BysX\"]},\"src/bridge/IDelayedMessageProvider.sol\":{\"keccak256\":\"0x1f216daf990c329310f44818e1c05d81c07fe875a5a07dd379d2c8fac921f208\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d6ccdab97fb5c8b7d9a80b713dc6bd9bc0e71e9d41900ac5c7cf96cb2643aad6\",\"dweb:/ipfs/QmeypCFXVXbTu3RehtFti4PMfuTCyzVKDwfGiZ2PeewRSG\"]},\"src/bridge/IOwnable.sol\":{\"keccak256\":\"0x0ce0ccc2cd25968ab37aef146be9c9a615c3f2ad239fa759d1745190666729fd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://6516e1a94fdc9530b90ceb408e3083ecc7e844afd4fc34a7ccab89a191c3b88f\",\"dweb:/ipfs/QmZ4UwQe1pgTJxx1XqzcAKTgu9Wo6qZA5WSCPHygFJSdi8\"]},\"src/bridge/ISequencerInbox.sol\":{\"keccak256\":\"0x56ccda31c61ea4f821d2828499b4edb6e50bf830ce0c1cf08844d4554c110545\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f10930056d5da365f7629ddc3991681d2f3cbc7a19f0debb7e600d70d85dd172\",\"dweb:/ipfs/QmV2aSnufxEnJjeCoD6BEJrdxpnekUwQTRf1FxMqe4BvJh\"]},\"src/bridge/Messages.sol\":{\"keccak256\":\"0x002a404b3da98b6dd5c0366c086e49a28b5f4158f61a386c9799cd4f616214b6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://266d13b0d88a7ff4a66cbbb84828087d92536b7bb1a964df7abcb97973bb11e6\",\"dweb:/ipfs/QmanoAuyENGCUS2PvijcgBxGYpW4NjsGD9nVZ6mSynSS1r\"]},\"src/libraries/IGasRefunder.sol\":{\"keccak256\":\"0x35d07855184f8d31087ad0b67d1a8ccd0653a3a6c59c02513eb9c53b3371a385\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://20eec9a16fa9003971a1ac5f5f7a3b7c558c57cba01f98c50959b5c93786f639\",\"dweb:/ipfs/QmaRQpgwZVQYe2EsFS4UrvrnFabJLQwUaBXm14C8V4rhBM\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"newBatchPosterManager","type":"address","indexed":false}],"type":"event","name":"BatchPosterManagerSet","anonymous":false},{"inputs":[{"internalType":"address","name":"batchPoster","type":"address","indexed":false},{"internalType":"bool","name":"isBatchPoster","type":"bool","indexed":false}],"type":"event","name":"BatchPosterSet","anonymous":false},{"inputs":[{"internalType":"struct BufferConfig","name":"bufferConfig","type":"tuple","components":[{"internalType":"uint64","name":"threshold","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"},{"internalType":"uint64","name":"replenishRateInBasis","type":"uint64"}],"indexed":false}],"type":"event","name":"BufferConfigSet","anonymous":false},{"inputs":[{"internalType":"uint256","name":"messageNum","type":"uint256","indexed":true},{"internalType":"bytes","name":"data","type":"bytes","indexed":false}],"type":"event","name":"InboxMessageDelivered","anonymous":false},{"inputs":[{"internalType":"uint256","name":"messageNum","type":"uint256","indexed":true}],"type":"event","name":"InboxMessageDeliveredFromOrigin","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"keysetHash","type":"bytes32","indexed":true}],"type":"event","name":"InvalidateKeyset","anonymous":false},{"inputs":[{"internalType":"struct ISequencerInbox.MaxTimeVariation","name":"maxTimeVariation","type":"tuple","components":[{"internalType":"uint256","name":"delayBlocks","type":"uint256"},{"internalType":"uint256","name":"futureBlocks","type":"uint256"},{"internalType":"uint256","name":"delaySeconds","type":"uint256"},{"internalType":"uint256","name":"futureSeconds","type":"uint256"}],"indexed":false}],"type":"event","name":"MaxTimeVariationSet","anonymous":false},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256","indexed":true}],"type":"event","name":"OwnerFunctionCalled","anonymous":false},{"inputs":[{"internalType":"uint256","name":"batchSequenceNumber","type":"uint256","indexed":true},{"internalType":"bytes","name":"data","type":"bytes","indexed":false}],"type":"event","name":"SequencerBatchData","anonymous":false},{"inputs":[{"internalType":"uint256","name":"batchSequenceNumber","type":"uint256","indexed":true},{"internalType":"bytes32","name":"beforeAcc","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"afterAcc","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"delayedAcc","type":"bytes32","indexed":false},{"internalType":"uint256","name":"afterDelayedMessagesRead","type":"uint256","indexed":false},{"internalType":"struct IBridge.TimeBounds","name":"timeBounds","type":"tuple","components":[{"internalType":"uint64","name":"minTimestamp","type":"uint64"},{"internalType":"uint64","name":"maxTimestamp","type":"uint64"},{"internalType":"uint64","name":"minBlockNumber","type":"uint64"},{"internalType":"uint64","name":"maxBlockNumber","type":"uint64"}],"indexed":false},{"internalType":"enum IBridge.BatchDataLocation","name":"dataLocation","type":"uint8","indexed":false}],"type":"event","name":"SequencerBatchDelivered","anonymous":false},{"inputs":[{"internalType":"address","name":"addr","type":"address","indexed":false},{"internalType":"bool","name":"isSequencer","type":"bool","indexed":false}],"type":"event","name":"SequencerSet","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"keysetHash","type":"bytes32","indexed":true},{"internalType":"bytes","name":"keysetBytes","type":"bytes","indexed":false}],"type":"event","name":"SetValidKeyset","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"BROTLI_MESSAGE_HEADER_FLAG","outputs":[{"internalType":"bytes1","name":"","type":"bytes1"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"DAS_MESSAGE_HEADER_FLAG","outputs":[{"internalType":"bytes1","name":"","type":"bytes1"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"DATA_AUTHENTICATED_FLAG","outputs":[{"internalType":"bytes1","name":"","type":"bytes1"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"DATA_BLOB_HEADER_FLAG","outputs":[{"internalType":"bytes1","name":"","type":"bytes1"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"HEADER_LENGTH","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"TREE_DAS_MESSAGE_HEADER_FLAG","outputs":[{"internalType":"bytes1","name":"","type":"bytes1"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"ZERO_HEAVY_MESSAGE_HEADER_FLAG","outputs":[{"internalType":"bytes1","name":"","type":"bytes1"}]},{"inputs":[{"internalType":"uint256","name":"sequenceNumber","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"afterDelayedMessagesRead","type":"uint256"},{"internalType":"contract IGasRefunder","name":"gasRefunder","type":"address"},{"internalType":"uint256","name":"prevMessageCount","type":"uint256"},{"internalType":"uint256","name":"newMessageCount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"addSequencerL2Batch"},{"inputs":[{"internalType":"uint256","name":"sequenceNumber","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"afterDelayedMessagesRead","type":"uint256"},{"internalType":"contract IGasRefunder","name":"gasRefunder","type":"address"},{"internalType":"uint256","name":"prevMessageCount","type":"uint256"},{"internalType":"uint256","name":"newMessageCount","type":"uint256"},{"internalType":"struct DelayProof","name":"delayProof","type":"tuple","components":[{"internalType":"bytes32","name":"beforeDelayedAcc","type":"bytes32"},{"internalType":"struct Messages.Message","name":"delayedMessage","type":"tuple","components":[{"internalType":"uint8","name":"kind","type":"uint8"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"uint64","name":"timestamp","type":"uint64"},{"internalType":"uint256","name":"inboxSeqNum","type":"uint256"},{"internalType":"uint256","name":"baseFeeL1","type":"uint256"},{"internalType":"bytes32","name":"messageDataHash","type":"bytes32"}]}]}],"stateMutability":"nonpayable","type":"function","name":"addSequencerL2BatchDelayProof"},{"inputs":[{"internalType":"uint256","name":"sequenceNumber","type":"uint256"},{"internalType":"uint256","name":"afterDelayedMessagesRead","type":"uint256"},{"internalType":"contract IGasRefunder","name":"gasRefunder","type":"address"},{"internalType":"uint256","name":"prevMessageCount","type":"uint256"},{"internalType":"uint256","name":"newMessageCount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"addSequencerL2BatchFromBlobs"},{"inputs":[{"internalType":"uint256","name":"sequenceNumber","type":"uint256"},{"internalType":"uint256","name":"afterDelayedMessagesRead","type":"uint256"},{"internalType":"contract IGasRefunder","name":"gasRefunder","type":"address"},{"internalType":"uint256","name":"prevMessageCount","type":"uint256"},{"internalType":"uint256","name":"newMessageCount","type":"uint256"},{"internalType":"struct DelayProof","name":"delayProof","type":"tuple","components":[{"internalType":"bytes32","name":"beforeDelayedAcc","type":"bytes32"},{"internalType":"struct Messages.Message","name":"delayedMessage","type":"tuple","components":[{"internalType":"uint8","name":"kind","type":"uint8"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"uint64","name":"timestamp","type":"uint64"},{"internalType":"uint256","name":"inboxSeqNum","type":"uint256"},{"internalType":"uint256","name":"baseFeeL1","type":"uint256"},{"internalType":"bytes32","name":"messageDataHash","type":"bytes32"}]}]}],"stateMutability":"nonpayable","type":"function","name":"addSequencerL2BatchFromBlobsDelayProof"},{"inputs":[{"internalType":"uint256","name":"sequenceNumber","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"afterDelayedMessagesRead","type":"uint256"},{"internalType":"contract IGasRefunder","name":"gasRefunder","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addSequencerL2BatchFromOrigin"},{"inputs":[{"internalType":"uint256","name":"sequenceNumber","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"afterDelayedMessagesRead","type":"uint256"},{"internalType":"contract IGasRefunder","name":"gasRefunder","type":"address"},{"internalType":"uint256","name":"prevMessageCount","type":"uint256"},{"internalType":"uint256","name":"newMessageCount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"addSequencerL2BatchFromOrigin"},{"inputs":[{"internalType":"uint256","name":"sequenceNumber","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint256","name":"afterDelayedMessagesRead","type":"uint256"},{"internalType":"contract IGasRefunder","name":"gasRefunder","type":"address"},{"internalType":"uint256","name":"prevMessageCount","type":"uint256"},{"internalType":"uint256","name":"newMessageCount","type":"uint256"},{"internalType":"struct DelayProof","name":"delayProof","type":"tuple","components":[{"internalType":"bytes32","name":"beforeDelayedAcc","type":"bytes32"},{"internalType":"struct Messages.Message","name":"delayedMessage","type":"tuple","components":[{"internalType":"uint8","name":"kind","type":"uint8"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"uint64","name":"timestamp","type":"uint64"},{"internalType":"uint256","name":"inboxSeqNum","type":"uint256"},{"internalType":"uint256","name":"baseFeeL1","type":"uint256"},{"internalType":"bytes32","name":"messageDataHash","type":"bytes32"}]}]}],"stateMutability":"nonpayable","type":"function","name":"addSequencerL2BatchFromOriginDelayProof"},{"inputs":[],"stateMutability":"view","type":"function","name":"batchCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"batchPosterManager","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"bridge","outputs":[{"internalType":"contract IBridge","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function","name":"dasKeySetInfo","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint64","name":"","type":"uint64"}]},{"inputs":[{"internalType":"uint256","name":"_totalDelayedMessagesRead","type":"uint256"},{"internalType":"uint8","name":"kind","type":"uint8"},{"internalType":"uint64[2]","name":"l1BlockAndTime","type":"uint64[2]"},{"internalType":"uint256","name":"baseFeeL1","type":"uint256"},{"internalType":"address","name":"sender","type":"address"},{"internalType":"bytes32","name":"messageDataHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"forceInclusion"},{"inputs":[{"internalType":"uint64","name":"blockNumber","type":"uint64"}],"stateMutability":"view","type":"function","name":"forceInclusionDeadline","outputs":[{"internalType":"uint64","name":"blockNumberDeadline","type":"uint64"}]},{"inputs":[{"internalType":"bytes32","name":"ksHash","type":"bytes32"}],"stateMutability":"view","type":"function","name":"getKeysetCreationBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"inboxAccs","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"contract IBridge","name":"bridge_","type":"address"},{"internalType":"struct ISequencerInbox.MaxTimeVariation","name":"maxTimeVariation_","type":"tuple","components":[{"internalType":"uint256","name":"delayBlocks","type":"uint256"},{"internalType":"uint256","name":"futureBlocks","type":"uint256"},{"internalType":"uint256","name":"delaySeconds","type":"uint256"},{"internalType":"uint256","name":"futureSeconds","type":"uint256"}]},{"internalType":"struct BufferConfig","name":"bufferConfig_","type":"tuple","components":[{"internalType":"uint64","name":"threshold","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"},{"internalType":"uint64","name":"replenishRateInBasis","type":"uint64"}]}],"stateMutability":"nonpayable","type":"function","name":"initialize"},{"inputs":[{"internalType":"bytes32","name":"ksHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"invalidateKeysetHash"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"isBatchPoster","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"isDelayBufferable","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"isSequencer","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"ksHash","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isValidKeysetHash","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"maxDataSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"maxTimeVariation","outputs":[{"internalType":"uint256","name":"delayBlocks","type":"uint256"},{"internalType":"uint256","name":"futureBlocks","type":"uint256"},{"internalType":"uint256","name":"delaySeconds","type":"uint256"},{"internalType":"uint256","name":"futureSeconds","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"removeDelayAfterFork"},{"inputs":[],"stateMutability":"view","type":"function","name":"rollup","outputs":[{"internalType":"contract IOwnable","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"newBatchPosterManager","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setBatchPosterManager"},{"inputs":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bool","name":"isBatchPoster_","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setIsBatchPoster"},{"inputs":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bool","name":"isSequencer_","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setIsSequencer"},{"inputs":[{"internalType":"struct ISequencerInbox.MaxTimeVariation","name":"maxTimeVariation_","type":"tuple","components":[{"internalType":"uint256","name":"delayBlocks","type":"uint256"},{"internalType":"uint256","name":"futureBlocks","type":"uint256"},{"internalType":"uint256","name":"delaySeconds","type":"uint256"},{"internalType":"uint256","name":"futureSeconds","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"setMaxTimeVariation"},{"inputs":[{"internalType":"bytes","name":"keysetBytes","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"setValidKeyset"},{"inputs":[],"stateMutability":"view","type":"function","name":"totalDelayedMessagesRead","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"updateRollupAddress"}],"devdoc":{"kind":"dev","methods":{"BROTLI_MESSAGE_HEADER_FLAG()":{"details":"If the first data byte after the header has this bit set,      then the batch data has been brotli compressed      See: https://github.com/OffchainLabs/nitro/blob/69de0603abf6f900a4128cab7933df60cad54ded/arbstate/das_reader.go"},"DAS_MESSAGE_HEADER_FLAG()":{"details":"If the first data byte after the header has this bit set,      then the batch data is a das message      See: https://github.com/OffchainLabs/nitro/blob/69de0603abf6f900a4128cab7933df60cad54ded/arbstate/das_reader.go"},"DATA_AUTHENTICATED_FLAG()":{"details":"If the first batch data byte after the header has this bit set,      the sequencer inbox has authenticated the data. Currently only used for 4844 blob support.      See: https://github.com/OffchainLabs/nitro/blob/69de0603abf6f900a4128cab7933df60cad54ded/arbstate/das_reader.go"},"DATA_BLOB_HEADER_FLAG()":{"details":"If the first data byte after the header has this bit set,      then the batch data is to be found in 4844 data blobs      See: https://github.com/OffchainLabs/nitro/blob/69de0603abf6f900a4128cab7933df60cad54ded/arbstate/das_reader.go"},"HEADER_LENGTH()":{"details":"The size of the batch header"},"TREE_DAS_MESSAGE_HEADER_FLAG()":{"details":"If the first data byte after the header has this bit set,      then the batch data is a das message that employs a merklesization strategy      See: https://github.com/OffchainLabs/nitro/blob/69de0603abf6f900a4128cab7933df60cad54ded/arbstate/das_reader.go"},"ZERO_HEAVY_MESSAGE_HEADER_FLAG()":{"details":"If the first data byte after the header has this bit set,      then the batch data uses a zero heavy encoding      See: https://github.com/OffchainLabs/nitro/blob/69de0603abf6f900a4128cab7933df60cad54ded/arbstate/das_reader.go"},"addSequencerL2BatchDelayProof(uint256,bytes,uint256,address,uint256,uint256,(bytes32,(uint8,address,uint64,uint64,uint256,uint256,bytes32)))":{"details":"Proves message delays, updates delay buffers, and posts an L2 batch with calldata.         delayProof is used to prove the delay of the message and syncs the delay buffer."},"addSequencerL2BatchFromBlobsDelayProof(uint256,uint256,address,uint256,uint256,(bytes32,(uint8,address,uint64,uint64,uint256,uint256,bytes32)))":{"details":"Proves message delays, updates delay buffers, and posts an L2 batch with blob data.         DelayProof proves the delay of the message and syncs the delay buffer."},"addSequencerL2BatchFromOrigin(uint256,bytes,uint256,address)":{"details":"Deprecated, kept for abi generation and will be removed in the future"},"addSequencerL2BatchFromOrigin(uint256,bytes,uint256,address,uint256,uint256)":{"details":"Will be deprecated due to EIP-3074, use `addSequencerL2Batch` instead"},"addSequencerL2BatchFromOriginDelayProof(uint256,bytes,uint256,address,uint256,uint256,(bytes32,(uint8,address,uint64,uint64,uint256,uint256,bytes32)))":{"details":"Proves message delays, updates delay buffers, and posts an L2 batch with calldata posted from an EOA.         DelayProof proves the delay of the message and syncs the delay buffer.         Will be deprecated due to EIP-3074, use `addSequencerL2BatchDelayProof` instead"},"forceInclusion(uint256,uint8,uint64[2],uint256,address,bytes32)":{"params":{"_totalDelayedMessagesRead":"The total number of messages to read up to","baseFeeL1":"The l1 gas price of the last message to be included","kind":"The kind of the last message to be included","l1BlockAndTime":"The l1 block and the l1 timestamp of the last message to be included","messageDataHash":"The messageDataHash of the last message to be included","sender":"The sender of the last message to be included"}},"forceInclusionDeadline(uint64)":{"details":"The delay buffer can change due to pending depletion/replenishment.         This function applies pending buffer changes to proactively calculate the force inclusion deadline.         This is only relevant when the buffer is less than the delayBlocks (unhappy case), otherwise force inclusion deadline is fixed at delayBlocks.","params":{"blockNumber":"The block number when a delayed message was created"},"returns":{"blockNumberDeadline":"The block number at when the message can be force included"}},"invalidateKeysetHash(bytes32)":{"params":{"ksHash":"hash of the keyset"}},"maxTimeVariation()":{"details":"returns 4 uint256 to be compatible with older version"},"setBatchPosterManager(address)":{"params":{"newBatchPosterManager":"The new batch poster manager to be set"}},"setIsBatchPoster(address,bool)":{"params":{"addr":"the address","isBatchPoster_":"if the specified address should be authorized as a batch poster"}},"setIsSequencer(address,bool)":{"details":"The IsSequencer information is used only off-chain by the nitro node to validate sequencer feed signer.","params":{"addr":"the address","isSequencer_":"if the specified address should be authorized as a sequencer"}},"setMaxTimeVariation((uint256,uint256,uint256,uint256))":{"params":{"maxTimeVariation_":"the maximum time variation parameters"}},"setValidKeyset(bytes)":{"params":{"keysetBytes":"bytes of the serialized keyset"}}},"version":1},"userdoc":{"kind":"user","methods":{"batchPosterManager()":{"notice":"The batch poster manager has the ability to change the batch poster addresses         This enables the batch poster to do key rotation"},"forceInclusion(uint256,uint8,uint64[2],uint256,address,bytes32)":{"notice":"Force messages from the delayed inbox to be included in the chain         Callable by any address, but message can only be force-included after maxTimeVariation.delayBlocks         has elapsed. As part of normal behaviour the sequencer will include these         messages so it's only necessary to call this if the sequencer is down, or not including any delayed messages."},"forceInclusionDeadline(uint64)":{"notice":"Calculates the upper bounds of the delay buffer"},"getKeysetCreationBlock(bytes32)":{"notice":"the creation block is intended to still be available after a keyset is deleted"},"invalidateKeysetHash(bytes32)":{"notice":"Invalidates a Data Availability Service keyset"},"isDelayBufferable()":{"notice":"True is the sequencer inbox is delay bufferable"},"removeDelayAfterFork()":{"notice":"Remove force inclusion delay after a L1 chainId fork"},"setBatchPosterManager(address)":{"notice":"Updates the batch poster manager, the address which has the ability to rotate batch poster keys"},"setIsBatchPoster(address,bool)":{"notice":"Updates whether an address is authorized to be a batch poster at the sequencer inbox"},"setIsSequencer(address,bool)":{"notice":"Updates whether an address is authorized to be a sequencer."},"setMaxTimeVariation((uint256,uint256,uint256,uint256))":{"notice":"Set max delay for sequencer inbox"},"setValidKeyset(bytes)":{"notice":"Makes Data Availability Service keyset valid"},"updateRollupAddress()":{"notice":"Allows the rollup owner to sync the rollup address"}},"version":1}},"settings":{"remappings":["@ethereum-waffle/=node_modules/@ethereum-waffle/","@offchainlabs/upgrade-executor/=node_modules/@offchainlabs/upgrade-executor/","@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/","solady/=node_modules/solady/"],"optimizer":{"enabled":true,"runs":2000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/bridge/ISequencerInbox.sol":"ISequencerInbox"},"evmVersion":"cancun","libraries":{}},"sources":{"src/bridge/DelayBufferTypes.sol":{"keccak256":"0x1ad1d78baed19ceb435d9d73a0890ae753a0246ed3085bde8ac942df8cd37c6f","urls":["bzz-raw://83fbf63f2fa1fb4deb9e76edc1e1f6b4bae05bf5b8676423f6251d5a2b33ed78","dweb:/ipfs/QmaccnTmiwQF57AcBXCdLZp7QWjjNgb3PV3USSeFye5TaS"],"license":"BUSL-1.1"},"src/bridge/IBridge.sol":{"keccak256":"0xc5f1c2ea4cb8a1da4c0fd900a32dc6a8bdfac6f8288bf9a6eb886a7485e2c4a0","urls":["bzz-raw://2ec09214cca8b097550cd6beac7f6b81ac5f598998d372aec6cede08cfc0cefd","dweb:/ipfs/QmTLi7EgZvX3VqemmxV61cgWGsDanRqSvef19djGg6BysX"],"license":"BUSL-1.1"},"src/bridge/IDelayedMessageProvider.sol":{"keccak256":"0x1f216daf990c329310f44818e1c05d81c07fe875a5a07dd379d2c8fac921f208","urls":["bzz-raw://d6ccdab97fb5c8b7d9a80b713dc6bd9bc0e71e9d41900ac5c7cf96cb2643aad6","dweb:/ipfs/QmeypCFXVXbTu3RehtFti4PMfuTCyzVKDwfGiZ2PeewRSG"],"license":"BUSL-1.1"},"src/bridge/IOwnable.sol":{"keccak256":"0x0ce0ccc2cd25968ab37aef146be9c9a615c3f2ad239fa759d1745190666729fd","urls":["bzz-raw://6516e1a94fdc9530b90ceb408e3083ecc7e844afd4fc34a7ccab89a191c3b88f","dweb:/ipfs/QmZ4UwQe1pgTJxx1XqzcAKTgu9Wo6qZA5WSCPHygFJSdi8"],"license":"BUSL-1.1"},"src/bridge/ISequencerInbox.sol":{"keccak256":"0x56ccda31c61ea4f821d2828499b4edb6e50bf830ce0c1cf08844d4554c110545","urls":["bzz-raw://f10930056d5da365f7629ddc3991681d2f3cbc7a19f0debb7e600d70d85dd172","dweb:/ipfs/QmV2aSnufxEnJjeCoD6BEJrdxpnekUwQTRf1FxMqe4BvJh"],"license":"BUSL-1.1"},"src/bridge/Messages.sol":{"keccak256":"0x002a404b3da98b6dd5c0366c086e49a28b5f4158f61a386c9799cd4f616214b6","urls":["bzz-raw://266d13b0d88a7ff4a66cbbb84828087d92536b7bb1a964df7abcb97973bb11e6","dweb:/ipfs/QmanoAuyENGCUS2PvijcgBxGYpW4NjsGD9nVZ6mSynSS1r"],"license":"BUSL-1.1"},"src/libraries/IGasRefunder.sol":{"keccak256":"0x35d07855184f8d31087ad0b67d1a8ccd0653a3a6c59c02513eb9c53b3371a385","urls":["bzz-raw://20eec9a16fa9003971a1ac5f5f7a3b7c558c57cba01f98c50959b5c93786f639","dweb:/ipfs/QmaRQpgwZVQYe2EsFS4UrvrnFabJLQwUaBXm14C8V4rhBM"],"license":"BUSL-1.1"}},"version":1},"id":104}