//! Bytecode for the sequencer contract

use alloy::{
    hex::FromHex,
    primitives::{Address, Bytes},
};

/// Default metabased factory on Exo
pub const V1_FACTORY_ADDRESS: &str = "0xfea8a2ba8b760348ea95492516620ad45a299d53";
// This is the bytecode pulled directly from the Sequencing Chain factory on Exo
// https://syndicate-exo.explorer.alchemy.com/address/0xFEA8A2BA8B760348ea95492516620ad45a299d53
const V1_SEQ_BYTECODE: &str ="60a06040526001805460ff60a01b1916905534801561001c575f80fd5b50604051610a8e380380610a8e83398101604081905261003b91610164565b338061006157604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61006a81610109565b5060405161007790610158565b604051809103905ff080158015610090573d5f803e3d5ffd5b50600180546001600160a01b0319166001600160a01b03929092169190911790555f8190036101015760405162461bcd60e51b815260206004820152601760248201527f4c3320636861696e2049442063616e6e6f7420626520300000000000000000006044820152606401610058565b60805261017b565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60c9806109c583390190565b5f60208284031215610174575f80fd5b5051919050565b6080516108326101935f395f61013501526108325ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063715018a61161006e578063715018a61461012857806377bfdd19146101305780638da5cb5b14610165578063babcc53914610175578063d4f0eb4d14610198578063f2fde38b146101ab575f80fd5b80630b83249d146100aa5780633514d37b146100bf5780633bb83a64146100d257806346e2cc0914610102578063485cc95514610115575b5f80fd5b6100bd6100b83660046105c4565b6101be565b005b6100bd6100cd366004610633565b610272565b6001546100e5906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100bd610110366004610633565b6102ec565b6100bd6101233660046106a8565b610357565b6100bd6103e0565b6101577f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100f9565b5f546001600160a01b03166100e5565b6101886101833660046106d9565b6103f3565b60405190151581526020016100f9565b6100bd6101a63660046106d9565b610465565b6100bd6101b93660046106d9565b6104dd565b336101c8816103f3565b6101f55760405163fa5cd00f60e01b81526001600160a01b03821660048201526024015b60405180910390fd5b815f5b8181101561026b57337f83363b78bdfbb23e2a61db7accc3c01fda29c5c5ec81888003cb962912618a7f61024e878785818110610237576102376106f9565b9050602002810190610249919061070d565b61051a565b60405161025b9190610757565b60405180910390a26001016101f8565b5050505050565b3361027c816103f3565b6102a45760405163fa5cd00f60e01b81526001600160a01b03821660048201526024016101ec565b336001600160a01b03167f83363b78bdfbb23e2a61db7accc3c01fda29c5c5ec81888003cb962912618a7f84846040516102df92919061078c565b60405180910390a2505050565b336102f6816103f3565b61031e5760405163fa5cd00f60e01b81526001600160a01b03821660048201526024016101ec565b337f83363b78bdfbb23e2a61db7accc3c01fda29c5c5ec81888003cb962912618a7f61034a858561051a565b6040516102df9190610757565b61035f610549565b600154600160a01b900460ff16156103895760405162dc149f60e41b815260040160405180910390fd5b6001600160a01b0381166103b057604051632e7f3c7f60e11b815260040160405180910390fd5b600180546001600160a01b0383166001600160a81b031990911617600160a01b1790556103dc826104dd565b5050565b6103e8610549565b6103f15f610575565b565b60015460405163babcc53960e01b81526001600160a01b0383811660048301525f92169063babcc53990602401602060405180830381865afa15801561043b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061045f91906107ba565b92915050565b61046d610549565b6001600160a01b03811661049457604051632e7f3c7f60e11b815260040160405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040517f253580f806741c11b3d4aa60d9cacc5bef0cebb35748767fe23f11916e2f04b9905f90a250565b6104e5610549565b6001600160a01b03811661050e57604051631e4fbdf760e01b81525f60048201526024016101ec565b61051781610575565b50565b604051606090610532905f90859085906020016107d9565b604051602081830303815290604052905092915050565b5f546001600160a01b031633146103f15760405163118cdaa760e01b81523360048201526024016101ec565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f80602083850312156105d5575f80fd5b823567ffffffffffffffff808211156105ec575f80fd5b818501915085601f8301126105ff575f80fd5b81358181111561060d575f80fd5b8660208260051b8501011115610621575f80fd5b60209290920196919550909350505050565b5f8060208385031215610644575f80fd5b823567ffffffffffffffff8082111561065b575f80fd5b818501915085601f83011261066e575f80fd5b81358181111561067c575f80fd5b866020828501011115610621575f80fd5b80356001600160a01b03811681146106a3575f80fd5b919050565b5f80604083850312156106b9575f80fd5b6106c28361068d565b91506106d06020840161068d565b90509250929050565b5f602082840312156106e9575f80fd5b6106f28261068d565b9392505050565b634e487b7160e01b5f52603260045260245ffd5b5f808335601e19843603018112610722575f80fd5b83018035915067ffffffffffffffff82111561073c575f80fd5b602001915036819003821315610750575f80fd5b9250929050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b60208152816020820152818360408301375f818301604090810191909152601f909201601f19160101919050565b5f602082840312156107ca575f80fd5b815180151581146106f2575f80fd5b6001600160f81b031984168152818360018301375f91016001019081529291505056fea264697066735822122026c5dd3acc35450797faf27cfd9afbfea17deea262ec1321a5de99202e451b3064736f6c634300081900336080604052348015600e575f80fd5b5060af80601a5f395ff3fe6080604052348015600e575f80fd5b50600436106026575f3560e01c8063babcc53914602a575b5f80fd5b603a6035366004604e565b505f90565b604051901515815260200160405180910390f35b5f60208284031215605d575f80fd5b81356001600160a01b03811681146072575f80fd5b939250505056fea26469706673582212208c641a7f70d3012722b3a237e9b782428818d70f43f49ad12733ca8f6d5b2df764736f6c63430008190033";

/// Get the bytecode for the sequencer contract
pub fn get_bytecode(factory_address: Address) -> Bytes {
    let address_str = factory_address.to_string().to_lowercase();
    match address_str.as_str() {
        V1_FACTORY_ADDRESS => Bytes::from_hex(V1_SEQ_BYTECODE).unwrap_or_default(),
        // We should never get here, but just in case
        _ => panic!("Unsupported factory address: {}", address_str),
    }
}

/// Check if the factory address is supported
pub fn is_supported_factory_address(factory_address: Address) -> bool {
    let address_str = factory_address.to_string().to_lowercase();
    matches!(address_str.as_str(), V1_FACTORY_ADDRESS)
}
