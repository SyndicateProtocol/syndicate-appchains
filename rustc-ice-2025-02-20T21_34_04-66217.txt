thread 'rustc' panicked at /rustc/99db2737c91d1e4b36b2ffc17dcda5878bcae625/compiler/rustc_query_system/src/query/plumbing.rs:731:9:
Found unstable fingerprints for optimized_mir(ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}): Body { basic_blocks: BasicBlocks { basic_blocks: [BasicBlockData { statements: [_597 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _596 = discriminant((*_597))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: switchInt(move _596) -> [0: bb1, 1: bb517, 2: bb516, 3: bb514, 4: bb515, otherwise: bb93] }), is_cleanup: false }, BasicBlockData { statements: [_595 = move _2, _568 = const false, _598 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), (((*_598) as variant#4).7: bool) = const false, _566 = const false, _565 = const false, _564 = const false, _599 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _600 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), (((*_599) as variant#4).0: &mut ingestor::ingestor::Ingestor) = move ((*_600).0: &mut ingestor::ingestor::Ingestor), StorageLive(_5), StorageLive(_6), _601 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _602 = deref_copy (((*_601) as variant#4).0: &mut ingestor::ingestor::Ingestor), _6 = copy ((*_602).2: u64), StorageLive(_7), StorageLive(_8), StorageLive(_9), StorageLive(_10), _603 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _604 = deref_copy (((*_603) as variant#4).0: &mut ingestor::ingestor::Ingestor), _10 = copy ((*_604).3: u64), StorageLive(_11), _605 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _606 = deref_copy (((*_605) as variant#4).0: &mut ingestor::ingestor::Ingestor), _11 = copy ((*_606).2: u64)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:17: 134:72 (#0), scope: scope[1] }, kind: _9 = std::cmp::max::<u64>(move _10, move _11) -> [return: bb2, unwind: bb502] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_11), StorageDead(_10), _12 = AddWithOverflow(copy _9, const 1_u64)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:17: 134:76 (#0), scope: scope[1] }, kind: assert(!move (_12.1: bool), "attempt to compute `{} + {}`, which would overflow", move _9, const 1_u64) -> [success: bb3, unwind: bb503] }), is_cleanup: false }, BasicBlockData { statements: [_8 = move (_12.0: u64), StorageDead(_9), StorageLive(_13), StorageLive(_14), _607 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _608 = deref_copy (((*_607) as variant#4).0: &mut ingestor::ingestor::Ingestor), _14 = copy ((*_608).2: u64), StorageLive(_15), _609 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _610 = deref_copy (((*_609) as variant#4).0: &mut ingestor::ingestor::Ingestor), _15 = copy ((*_610).4: u64), _16 = AddWithOverflow(copy _14, copy _15)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:135:17: 135:68 (#0), scope: scope[1] }, kind: assert(!move (_16.1: bool), "attempt to compute `{} + {}`, which would overflow", move _14, move _15) -> [success: bb4, unwind: bb500] }), is_cleanup: false }, BasicBlockData { statements: [_13 = move (_16.0: u64), StorageDead(_15), StorageDead(_14)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:133:13: 136:14 (#0), scope: scope[1] }, kind: _7 = std::cmp::min::<u64>(move _8, move _13) -> [return: bb5, unwind: bb501] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_13), StorageDead(_8), _5 = std::ops::Range::<u64> { start: move _6, end: move _7 }, StorageDead(_7), StorageDead(_6), _611 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:29: 137:23 (#0), scope: scope[1] }, kind: (((*_611) as variant#4).1: std::vec::Vec<u64>) = <std::ops::Range<u64> as std::iter::Iterator>::collect::<std::vec::Vec<u64>>(move _5) -> [return: bb6, unwind: bb505] }), is_cleanup: false }, BasicBlockData { statements: [_568 = const true, StorageDead(_5), StorageLive(_17), StorageLive(_18), StorageLive(_19), StorageLive(_20), _563 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[20], _20 = &(*_563), StorageLive(_22), _562 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[19], _22 = &(*_562)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#2007), scope: scope[2] }, kind: _19 = <tracing::Level as std::cmp::PartialOrd<tracing::level_filters::LevelFilter>>::le(move _20, move _22) -> [return: bb7, unwind: bb496] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#2007), scope: scope[2] }, kind: switchInt(move _19) -> [0: bb13, otherwise: bb8] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_22), StorageDead(_20), StorageLive(_24), StorageLive(_25), _561 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[18], _25 = &(*_561), StorageLive(_27), StorageLive(_28)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#2007), scope: scope[2] }, kind: _28 = tracing::level_filters::LevelFilter::current() -> [return: bb9, unwind: bb494] }), is_cleanup: false }, BasicBlockData { statements: [_27 = &_28], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#2007), scope: scope[2] }, kind: _24 = <tracing::Level as std::cmp::PartialOrd<tracing::level_filters::LevelFilter>>::le(move _25, move _27) -> [return: bb10, unwind: bb494] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#2007), scope: scope[2] }, kind: switchInt(move _24) -> [0: bb12, otherwise: bb11] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_28), StorageDead(_27), StorageDead(_25), StorageLive(_29), StorageLive(_30), StorageLive(_31), _31 = const {alloc17: &tracing::callsite::DefaultCallsite}, _30 = &(*_31)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:49 (#2003), scope: scope[2] }, kind: _29 = tracing::callsite::DefaultCallsite::interest(move _30) -> [return: bb15, unwind: bb492] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_28), StorageDead(_27), StorageDead(_25)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[2] }, kind: goto -> bb14 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_22), StorageDead(_20)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[2] }, kind: goto -> bb14 }), is_cleanup: false }, BasicBlockData { statements: [_18 = const false], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:23: 870:10 (#2003), scope: scope[2] }, kind: goto -> bb22 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_30), StorageDead(_31), StorageLive(_32), StorageLive(_33), _33 = &_29], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#2003), scope: scope[4] }, kind: _32 = tracing::subscriber::Interest::is_never(move _33) -> [return: bb16, unwind: bb490] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#2003), scope: scope[4] }, kind: switchInt(move _32) -> [0: bb18, otherwise: bb17] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_33), _18 = const false], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:13: 869:107 (#2003), scope: scope[4] }, kind: goto -> bb21 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_33), StorageLive(_34), StorageLive(_35), StorageLive(_36), StorageLive(_37), _37 = const {alloc17: &tracing::callsite::DefaultCallsite}, _36 = &(*_37)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#2003), scope: scope[4] }, kind: _35 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _36) -> [return: bb19, unwind: bb488] }), is_cleanup: false }, BasicBlockData { statements: [_34 = &(*_35), StorageDead(_36), StorageLive(_38), _38 = move _29], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:37: 869:107 (#2003), scope: scope[4] }, kind: _18 = tracing::__macro_support::__is_enabled(move _34, move _38) -> [return: bb20, unwind: bb487] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_38), StorageDead(_37), StorageDead(_35), StorageDead(_34)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:13: 869:107 (#2003), scope: scope[4] }, kind: goto -> bb21 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_32), StorageDead(_29)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:23: 870:10 (#2003), scope: scope[2] }, kind: goto -> bb22 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_24), StorageDead(_19), StorageLive(_39), _39 = copy _18], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:12: 871:19 (#2003), scope: scope[3] }, kind: switchInt(move _39) -> [0: bb36, otherwise: bb23] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_40), StorageLive(_41), _558 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[15], _41 = &(*_558), StorageLive(_43), StorageLive(_44), StorageLive(_45), StorageLive(_46), StorageLive(_47), StorageLive(_48), StorageLive(_49), StorageLive(_50), StorageLive(_51), _51 = const {alloc17: &tracing::callsite::DefaultCallsite}, _50 = &(*_51)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2003), scope: scope[3] }, kind: _49 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _50) -> [return: bb24, unwind: bb482] }), is_cleanup: false }, BasicBlockData { statements: [_48 = &(*_49), StorageDead(_50)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2003), scope: scope[3] }, kind: _47 = tracing::Metadata::<'_>::fields(move _48) -> [return: bb25, unwind: bb483] }), is_cleanup: false }, BasicBlockData { statements: [_46 = &(*_47), StorageDead(_48)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#2010), scope: scope[3] }, kind: _45 = tracing::field::FieldSet::iter(move _46) -> [return: bb26, unwind: bb484] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_46), StorageDead(_51), StorageDead(_49), StorageDead(_47), StorageLive(_52), StorageLive(_53), StorageLive(_54), StorageLive(_55), StorageLive(_56), StorageLive(_57), _57 = const {alloc17: &tracing::callsite::DefaultCallsite}, _56 = &(*_57)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2003), scope: scope[5] }, kind: _55 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _56) -> [return: bb27, unwind: bb479] }), is_cleanup: false }, BasicBlockData { statements: [_54 = &(*_55), StorageDead(_56)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2003), scope: scope[5] }, kind: _53 = tracing::Metadata::<'_>::fields(move _54) -> [return: bb28, unwind: bb480] }), is_cleanup: false }, BasicBlockData { statements: [_52 = &(*_53), StorageDead(_54), StorageLive(_58), StorageLive(_59), StorageLive(_60), StorageLive(_61), StorageLive(_62), StorageLive(_63), StorageLive(_64), StorageLive(_65), StorageLive(_66), _66 = &mut _45, _65 = &mut (*_66)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2010), scope: scope[5] }, kind: _64 = <tracing::field::Iter as std::iter::Iterator>::next(move _65) -> [return: bb29, unwind: bb477] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_65), StorageLive(_67), StorageLive(_68), _68 = const "FieldSet corrupted (this is a bug)", _67 = &(*_68)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2010), scope: scope[5] }, kind: _63 = std::option::Option::<tracing::field::Field>::expect(move _64, move _67) -> [return: bb30, unwind: bb475] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_67), StorageDead(_64), _62 = &_63, StorageLive(_69), StorageLive(_70), StorageLive(_71), StorageLive(_72), StorageLive(_73), StorageLive(_74), StorageLive(_75), StorageLive(_76), _557 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[14], _76 = &(*_557), _75 = &(*_76), StorageLive(_78), StorageLive(_79), StorageLive(_80), StorageLive(_81), StorageLive(_82), StorageLive(_83), _612 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _83 = &(((*_612) as variant#4).1: std::vec::Vec<u64>), _82 = &(*_83)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:33: 138:37 (#2016), scope: scope[5] }, kind: _81 = core::fmt::rt::Argument::<'_>::new_debug::<std::vec::Vec<u64>>(move _82) -> [return: bb31, unwind: bb473] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_82), StorageLive(_84), StorageLive(_85), StorageLive(_86), _613 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _614 = deref_copy (((*_613) as variant#4).0: &mut ingestor::ingestor::Ingestor), _86 = &((*_614).0: common::types::Chain), _85 = &(*_86)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:41: 138:45 (#2016), scope: scope[5] }, kind: _84 = core::fmt::rt::Argument::<'_>::new_debug::<common::types::Chain>(move _85) -> [return: bb32, unwind: bb469] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_85), _80 = [move _81, move _84], StorageDead(_84), StorageDead(_81), _79 = &_80, _78 = &(*_79)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2016), scope: scope[5] }, kind: _74 = std::fmt::Arguments::<'_>::new_v1::<2, 2>(move _75, move _78) -> [return: bb33, unwind: bb470] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_78), StorageDead(_75), _73 = &_74, _72 = &(*_73), _71 = move _72 as &dyn tracing::Value (PointerCoercion(Unsize, AsCast)), StorageDead(_72), _70 = copy _71, _69 = std::option::Option::<&dyn tracing::Value>::Some(move _70), StorageDead(_70), _61 = (move _62, move _69), StorageDead(_69), StorageDead(_62), _60 = [move _61], StorageDead(_61), _59 = &_60, _58 = &(*_59)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#2010), scope: scope[5] }, kind: _44 = tracing::field::FieldSet::value_set::<'_, [(&tracing::field::Field, std::option::Option<&dyn tracing::Value>); 1]>(move _52, move _58) -> [return: bb34, unwind: bb471] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_58), StorageDead(_52), StorageDead(_45), _43 = (move _44,)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#2003), scope: scope[3] }, kind: _40 = <{closure@ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::{closure#0}} as std::ops::Fn<(tracing::field::ValueSet<'_>,)>>::call(move _41, move _43) -> [return: bb35, unwind: bb472] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_44), StorageDead(_43), StorageDead(_41), StorageDead(_86), StorageDead(_83), StorageDead(_80), StorageDead(_79), StorageDead(_76), StorageDead(_74), StorageDead(_73), StorageDead(_71), StorageDead(_68), StorageDead(_66), StorageDead(_63), StorageDead(_60), StorageDead(_59), StorageDead(_57), StorageDead(_55), StorageDead(_53), StorageDead(_40), _17 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#2003), scope: scope[3] }, kind: goto -> bb85 }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_87), StorageLive(_88), StorageLive(_89), StorageLive(_90), StorageLive(_91), _91 = const tracing::Level::TRACE, _92 = discriminant((_91.0: tracing::metadata::LevelInner))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3056:9 (#2022), scope: scope[3] }, kind: switchInt(move _92) -> [1: bb38, 2: bb39, 3: bb40, 4: bb41, otherwise: bb37] }), is_cleanup: false }, BasicBlockData { statements: [_90 = tracing::log::Level::Trace], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3061:18: 3061:43 (#2022), scope: scope[3] }, kind: goto -> bb42 }), is_cleanup: false }, BasicBlockData { statements: [_90 = tracing::log::Level::Debug], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3060:37: 3060:62 (#2022), scope: scope[3] }, kind: goto -> bb42 }), is_cleanup: false }, BasicBlockData { statements: [_90 = tracing::log::Level::Info], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3059:36: 3059:60 (#2022), scope: scope[3] }, kind: goto -> bb42 }), is_cleanup: false }, BasicBlockData { statements: [_90 = tracing::log::Level::Warn], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3058:36: 3058:60 (#2022), scope: scope[3] }, kind: goto -> bb42 }), is_cleanup: false }, BasicBlockData { statements: [_90 = tracing::log::Level::Error], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:37: 3057:62 (#2022), scope: scope[3] }, kind: goto -> bb42 }), is_cleanup: false }, BasicBlockData { statements: [_89 = &_90, StorageLive(_93), _560 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[17], _93 = &(*_560)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#2018), scope: scope[3] }, kind: _88 = <tracing::log::Level as std::cmp::PartialOrd<tracing::log::LevelFilter>>::le(move _89, move _93) -> [return: bb43, unwind: bb467] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#2018), scope: scope[3] }, kind: switchInt(move _88) -> [0: bb83, otherwise: bb44] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_93), StorageDead(_91), StorageDead(_90), StorageDead(_89), StorageLive(_95)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#2018), scope: scope[3] }, kind: _95 = tracing::dispatcher::has_been_set() -> [return: bb45, unwind: bb466] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#2018), scope: scope[3] }, kind: switchInt(move _95) -> [0: bb46, otherwise: bb81] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_96), StorageLive(_97), _97 = const tracing::Level::TRACE, _98 = discriminant((_97.0: tracing::metadata::LevelInner))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3056:9 (#2025), scope: scope[3] }, kind: switchInt(move _98) -> [1: bb48, 2: bb49, 3: bb50, 4: bb51, otherwise: bb47] }), is_cleanup: false }, BasicBlockData { statements: [_96 = tracing::log::Level::Trace], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3061:18: 3061:43 (#2025), scope: scope[3] }, kind: goto -> bb52 }), is_cleanup: false }, BasicBlockData { statements: [_96 = tracing::log::Level::Debug], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3060:37: 3060:62 (#2025), scope: scope[3] }, kind: goto -> bb52 }), is_cleanup: false }, BasicBlockData { statements: [_96 = tracing::log::Level::Info], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3059:36: 3059:60 (#2025), scope: scope[3] }, kind: goto -> bb52 }), is_cleanup: false }, BasicBlockData { statements: [_96 = tracing::log::Level::Warn], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3058:36: 3058:60 (#2025), scope: scope[3] }, kind: goto -> bb52 }), is_cleanup: false }, BasicBlockData { statements: [_96 = tracing::log::Level::Error], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:37: 3057:62 (#2025), scope: scope[3] }, kind: goto -> bb52 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_97), StorageLive(_99), StorageLive(_100), _100 = &_96, StorageLive(_101), StorageLive(_102)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2024), scope: scope[6] }, kind: _102 = tracing::log::max_level() -> [return: bb53, unwind: bb464] }), is_cleanup: false }, BasicBlockData { statements: [_101 = &_102], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#2024), scope: scope[6] }, kind: _99 = <tracing::log::Level as std::cmp::PartialOrd<tracing::log::LevelFilter>>::le(move _100, move _101) -> [return: bb54, unwind: bb464] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#2024), scope: scope[6] }, kind: switchInt(move _99) -> [0: bb79, otherwise: bb55] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_102), StorageDead(_101), StorageDead(_100), StorageLive(_103), StorageLive(_104), StorageLive(_105), _105 = const {alloc17: &tracing::callsite::DefaultCallsite}, _104 = &(*_105)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:28: 3090:48 (#2024), scope: scope[6] }, kind: _103 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _104) -> [return: bb56, unwind: bb462] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_104), StorageDead(_105), StorageLive(_106), StorageLive(_107), StorageLive(_108), StorageLive(_109), StorageLive(_110), StorageLive(_111), StorageLive(_112)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2024), scope: scope[7] }, kind: _112 = tracing::log::Metadata::<'_>::builder() -> [return: bb57, unwind: bb459] }), is_cleanup: false }, BasicBlockData { statements: [_111 = &mut _112, StorageLive(_113), _113 = copy _96], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2024), scope: scope[7] }, kind: _110 = tracing::log::MetadataBuilder::<'_>::level(move _111, move _113) -> [return: bb58, unwind: bb458] }), is_cleanup: false }, BasicBlockData { statements: [_109 = &mut (*_110), StorageDead(_113), StorageDead(_111), StorageLive(_114), StorageLive(_115), StorageLive(_116), _116 = &(*_103)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2024), scope: scope[7] }, kind: _115 = tracing::Metadata::<'_>::target(move _116) -> [return: bb59, unwind: bb455] }), is_cleanup: false }, BasicBlockData { statements: [_114 = &(*_115), StorageDead(_116)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2024), scope: scope[7] }, kind: _108 = tracing::log::MetadataBuilder::<'_>::target(move _109, move _114) -> [return: bb60, unwind: bb456] }), is_cleanup: false }, BasicBlockData { statements: [_107 = &(*_108), StorageDead(_114), StorageDead(_109)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3094:29 (#2024), scope: scope[7] }, kind: _106 = tracing::log::MetadataBuilder::<'_>::build(move _107) -> [return: bb61, unwind: bb457] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_107), StorageDead(_115), StorageDead(_112), StorageDead(_110), StorageDead(_108), StorageLive(_117)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:30: 3095:43 (#2024), scope: scope[8] }, kind: _117 = tracing::log::logger() -> [return: bb62, unwind: bb454] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_118), StorageLive(_119), _119 = &(*_117), StorageLive(_120), StorageLive(_121), _121 = &_106, _120 = &(*_121)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#2024), scope: scope[9] }, kind: _118 = <dyn tracing::log::Log as tracing::log::Log>::enabled(move _119, move _120) -> [return: bb63, unwind: bb452] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#2024), scope: scope[9] }, kind: switchInt(move _118) -> [0: bb77, otherwise: bb64] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_121), StorageDead(_120), StorageDead(_119), StorageLive(_122), _122 = &(*_103), StorageLive(_123), StorageLive(_124), _124 = &(*_117), _123 = move _124 as &dyn tracing::log::Log (PointerCoercion(Unsize, Implicit)), StorageDead(_124), StorageLive(_125), _125 = move _106, StorageLive(_126), StorageLive(_127), StorageLive(_128), StorageLive(_129), StorageLive(_130), StorageLive(_131), StorageLive(_132), StorageLive(_133), StorageLive(_134), StorageLive(_135), _135 = const {alloc17: &tracing::callsite::DefaultCallsite}, _134 = &(*_135)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2003), scope: scope[9] }, kind: _133 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _134) -> [return: bb65, unwind: bb448] }), is_cleanup: false }, BasicBlockData { statements: [_132 = &(*_133), StorageDead(_134)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2003), scope: scope[9] }, kind: _131 = tracing::Metadata::<'_>::fields(move _132) -> [return: bb66, unwind: bb449] }), is_cleanup: false }, BasicBlockData { statements: [_130 = &(*_131), StorageDead(_132)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#2027), scope: scope[9] }, kind: _129 = tracing::field::FieldSet::iter(move _130) -> [return: bb67, unwind: bb450] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_130), StorageDead(_135), StorageDead(_133), StorageDead(_131), StorageLive(_136), StorageLive(_137), StorageLive(_138), StorageLive(_139), StorageLive(_140), StorageLive(_141), _141 = const {alloc17: &tracing::callsite::DefaultCallsite}, _140 = &(*_141)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2003), scope: scope[10] }, kind: _139 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _140) -> [return: bb68, unwind: bb445] }), is_cleanup: false }, BasicBlockData { statements: [_138 = &(*_139), StorageDead(_140)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2003), scope: scope[10] }, kind: _137 = tracing::Metadata::<'_>::fields(move _138) -> [return: bb69, unwind: bb446] }), is_cleanup: false }, BasicBlockData { statements: [_136 = &(*_137), StorageDead(_138), StorageLive(_142), StorageLive(_143), StorageLive(_144), StorageLive(_145), StorageLive(_146), StorageLive(_147), StorageLive(_148), StorageLive(_149), StorageLive(_150), _150 = &mut _129, _149 = &mut (*_150)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2027), scope: scope[10] }, kind: _148 = <tracing::field::Iter as std::iter::Iterator>::next(move _149) -> [return: bb70, unwind: bb443] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_149), StorageLive(_151), StorageLive(_152), _152 = const "FieldSet corrupted (this is a bug)", _151 = &(*_152)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2027), scope: scope[10] }, kind: _147 = std::option::Option::<tracing::field::Field>::expect(move _148, move _151) -> [return: bb71, unwind: bb441] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_151), StorageDead(_148), _146 = &_147, StorageLive(_153), StorageLive(_154), StorageLive(_155), StorageLive(_156), StorageLive(_157), StorageLive(_158), StorageLive(_159), StorageLive(_160), _559 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[16], _160 = &(*_559), _159 = &(*_160), StorageLive(_162), StorageLive(_163), StorageLive(_164), StorageLive(_165), StorageLive(_166), StorageLive(_167), _615 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _167 = &(((*_615) as variant#4).1: std::vec::Vec<u64>), _166 = &(*_167)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:33: 138:37 (#2033), scope: scope[10] }, kind: _165 = core::fmt::rt::Argument::<'_>::new_debug::<std::vec::Vec<u64>>(move _166) -> [return: bb72, unwind: bb439] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_166), StorageLive(_168), StorageLive(_169), StorageLive(_170), _616 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _617 = deref_copy (((*_616) as variant#4).0: &mut ingestor::ingestor::Ingestor), _170 = &((*_617).0: common::types::Chain), _169 = &(*_170)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:41: 138:45 (#2033), scope: scope[10] }, kind: _168 = core::fmt::rt::Argument::<'_>::new_debug::<common::types::Chain>(move _169) -> [return: bb73, unwind: bb435] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_169), _164 = [move _165, move _168], StorageDead(_168), StorageDead(_165), _163 = &_164, _162 = &(*_163)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2033), scope: scope[10] }, kind: _158 = std::fmt::Arguments::<'_>::new_v1::<2, 2>(move _159, move _162) -> [return: bb74, unwind: bb436] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_162), StorageDead(_159), _157 = &_158, _156 = &(*_157), _155 = move _156 as &dyn tracing::Value (PointerCoercion(Unsize, AsCast)), StorageDead(_156), _154 = copy _155, _153 = std::option::Option::<&dyn tracing::Value>::Some(move _154), StorageDead(_154), _145 = (move _146, move _153), StorageDead(_153), StorageDead(_146), _144 = [move _145], StorageDead(_145), _143 = &_144, _142 = &(*_143)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#2027), scope: scope[10] }, kind: _128 = tracing::field::FieldSet::value_set::<'_, [(&tracing::field::Field, std::option::Option<&dyn tracing::Value>); 1]>(move _136, move _142) -> [return: bb75, unwind: bb437] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_142), StorageDead(_136), StorageDead(_129), _127 = &_128, _126 = &(*_127)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:21: 3097:95 (#2024), scope: scope[9] }, kind: _87 = tracing::__macro_support::__tracing_log(move _122, move _123, move _125, move _126) -> [return: bb76, unwind: bb438] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_126), StorageDead(_125), StorageDead(_123), StorageDead(_122), StorageDead(_170), StorageDead(_167), StorageDead(_164), StorageDead(_163), StorageDead(_160), StorageDead(_158), StorageDead(_157), StorageDead(_155), StorageDead(_152), StorageDead(_150), StorageDead(_147), StorageDead(_144), StorageDead(_143), StorageDead(_141), StorageDead(_139), StorageDead(_137), StorageDead(_128), StorageDead(_127)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:17: 3098:18 (#2024), scope: scope[9] }, kind: goto -> bb78 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_121), StorageDead(_120), StorageDead(_119), _87 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:17: 3098:18 (#2024), scope: scope[9] }, kind: goto -> bb78 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_118), StorageDead(_117), StorageDead(_106), StorageDead(_103)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:13: 3099:14 (#2024), scope: scope[6] }, kind: goto -> bb80 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_102), StorageDead(_101), StorageDead(_100), _87 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:13: 3099:14 (#2024), scope: scope[6] }, kind: goto -> bb80 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_99), StorageDead(_96)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:13: 3135:14 (#2018), scope: scope[3] }, kind: goto -> bb82 }), is_cleanup: false }, BasicBlockData { statements: [_87 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:13: 3135:14 (#2018), scope: scope[3] }, kind: goto -> bb82 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_95)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#2018), scope: scope[3] }, kind: goto -> bb84 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_93), StorageDead(_91), StorageDead(_90), StorageDead(_89), _87 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#2018), scope: scope[3] }, kind: goto -> bb84 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_88), StorageDead(_87), _17 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#2003), scope: scope[3] }, kind: goto -> bb85 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_39), StorageDead(_18), StorageDead(_17), _618 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:140:26: 140:40 (#0), scope: scope[2] }, kind: (((*_618) as variant#4).2: tokio::time::Instant) = tokio::time::Instant::now() -> [return: bb86, unwind: bb499] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_173), StorageLive(_174), StorageLive(_175), StorageLive(_176), StorageLive(_177), _619 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _620 = deref_copy (((*_619) as variant#4).0: &mut ingestor::ingestor::Ingestor), _177 = &((*_620).1: std::sync::Arc<dyn ingestor::eth_client::RPCClient>)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:71 (#0), scope: scope[11] }, kind: _176 = <std::sync::Arc<dyn ingestor::eth_client::RPCClient> as std::ops::Deref>::deref(move _177) -> [return: bb87, unwind: bb430] }), is_cleanup: false }, BasicBlockData { statements: [_175 = &(*_176), StorageDead(_177), StorageLive(_178), _568 = const false, _621 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _178 = move (((*_621) as variant#4).1: std::vec::Vec<u64>)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:71 (#0), scope: scope[11] }, kind: _174 = <dyn ingestor::eth_client::RPCClient as ingestor::eth_client::RPCClient>::batch_get_blocks_and_receipts::<'_, '_>(move _175, move _178) -> [return: bb88, unwind: bb429] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_178), StorageDead(_175)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[11] }, kind: _173 = <std::pin::Pin<std::boxed::Box<dyn std::future::Future<Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>> + std::marker::Send>> as std::future::IntoFuture>::into_future(move _174) -> [return: bb89, unwind: bb432] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_174), _622 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), (((*_622) as variant#3).3: std::pin::Pin<std::boxed::Box<dyn std::future::Future<Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>> + std::marker::Send>>) = move _173], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[12] }, kind: goto -> bb90 }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_181), StorageLive(_182), StorageLive(_183), StorageLive(_184), StorageLive(_185), _623 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _185 = &mut (((*_623) as variant#3).3: std::pin::Pin<std::boxed::Box<dyn std::future::Future<Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>> + std::marker::Send>>), _184 = &mut (*_185)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[12] }, kind: _183 = std::pin::Pin::<&mut std::pin::Pin<std::boxed::Box<dyn std::future::Future<Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>> + std::marker::Send>>>::new_unchecked(move _184) -> [return: bb91, unwind: bb426] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_184), StorageLive(_186), StorageLive(_187), StorageLive(_188), _188 = copy _595, _187 = move _188, _186 = &mut (*_187), StorageDead(_188)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[12] }, kind: _182 = <std::pin::Pin<std::boxed::Box<dyn std::future::Future<Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>> + std::marker::Send>> as std::future::Future>::poll(move _183, move _186) -> [return: bb92, unwind: bb425] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_186), StorageDead(_183), _189 = discriminant(_182)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[12] }, kind: switchInt(move _189) -> [0: bb95, 1: bb94, otherwise: bb93] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: unreachable }), is_cleanup: false }, BasicBlockData { statements: [_181 = const (), _569 = discriminant(_182), StorageDead(_187), StorageDead(_185), StorageDead(_182), StorageDead(_181), StorageLive(_192), StorageLive(_193), _193 = (), _0 = std::task::Poll::<()>::Pending, StorageDead(_173), StorageDead(_176), StorageDead(_192), StorageDead(_193), _625 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), discriminant((*_625)) = 3], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[12] }, kind: return }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_190), _190 = move ((_182 as Ready).0: std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>), _565 = const true, _566 = const true, _624 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), (((*_624) as variant#4).3: std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>) = move _190, StorageDead(_190), _571 = discriminant(_182), StorageDead(_187), StorageDead(_185), StorageDead(_182), StorageDead(_181), _626 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#2036), scope: scope[11] }, kind: drop((((*_626) as variant#3).3: std::pin::Pin<std::boxed::Box<dyn std::future::Future<Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>> + std::marker::Send>>)) -> [return: bb96, unwind: bb428] }), is_cleanup: false }, BasicBlockData { statements: [_627 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _628 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _194 = discriminant((((*_628) as variant#4).3: std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:9: 141:77 (#0), scope: scope[11] }, kind: switchInt(move _194) -> [0: bb98, 1: bb97, otherwise: bb93] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_388), _629 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _388 = move (((((*_629) as variant#4).3: std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>) as Err).0: ingestor::eth_client::RPCClientError), StorageLive(_389), StorageLive(_390), StorageLive(_391), StorageLive(_392), _549 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[6], _392 = &(*_549), StorageLive(_394), _548 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[5], _394 = &(*_548)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#2042), scope: scope[29] }, kind: _391 = <tracing::Level as std::cmp::PartialOrd<tracing::level_filters::LevelFilter>>::le(move _392, move _394) -> [return: bb198, unwind: bb340] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_195), _630 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), (((*_630) as variant#4).7: bool) = const true, _631 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _195 = move (((((*_631) as variant#4).3: std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>) as Ok).0: std::vec::Vec<common::types::BlockAndReceiptsPayload>), StorageLive(_196), StorageLive(_197), _632 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _197 = &(((*_632) as variant#4).2: tokio::time::Instant)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:143:32: 143:52 (#0), scope: scope[14] }, kind: _196 = tokio::time::Instant::elapsed(move _197) -> [return: bb99, unwind: bb421] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_197), StorageLive(_198), StorageLive(_199), _633 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _634 = deref_copy (((*_633) as variant#4).0: &mut ingestor::ingestor::Ingestor), _199 = &((*_634).7: ingestor::metrics::IngestorMetrics), StorageLive(_200), _635 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _636 = deref_copy (((*_635) as variant#4).0: &mut ingestor::ingestor::Ingestor), _200 = copy ((*_636).0: common::types::Chain), StorageLive(_201), _201 = copy _196], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:144:17: 148:18 (#0), scope: scope[15] }, kind: _198 = ingestor::metrics::IngestorMetrics::record_rpc_call(move _199, move _200, const "batch(eth_getBlockByNumber + eth_getBlockReceipts)", move _201) -> [return: bb100, unwind: bb420] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_201), StorageDead(_200), StorageDead(_199), StorageDead(_198), StorageLive(_202), StorageLive(_203), _637 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), (((*_637) as variant#4).7: bool) = const false, _203 = move _195], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#2045), scope: scope[15] }, kind: _202 = <std::vec::Vec<common::types::BlockAndReceiptsPayload> as std::iter::IntoIterator>::into_iter(move _203) -> [return: bb101, unwind: bb418] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_203), _638 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), (((*_638) as variant#4).4: std::vec::IntoIter<common::types::BlockAndReceiptsPayload>) = move _202], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:17: 156:18 (#2046), scope: scope[16] }, kind: goto -> bb102 }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_205), StorageLive(_207), StorageLive(_208), _639 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _208 = &mut (((*_639) as variant#4).4: std::vec::IntoIter<common::types::BlockAndReceiptsPayload>), _207 = &mut (*_208), _640 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#2045), scope: scope[16] }, kind: (((*_640) as variant#4).5: std::option::Option<common::types::BlockAndReceiptsPayload>) = <std::vec::IntoIter<common::types::BlockAndReceiptsPayload> as std::iter::Iterator>::next(move _207) -> [return: bb103, unwind: bb416] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_207), _641 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _642 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _209 = discriminant((((*_642) as variant#4).5: std::option::Option<common::types::BlockAndReceiptsPayload>))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#2045), scope: scope[16] }, kind: switchInt(move _209) -> [0: bb105, 1: bb104, otherwise: bb93] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_211), _643 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _211 = move (((((*_643) as variant#4).5: std::option::Option<common::types::BlockAndReceiptsPayload>) as Some).0: common::types::BlockAndReceiptsPayload), StorageLive(_212), StorageLive(_213), StorageLive(_214), StorageLive(_215), _644 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _645 = deref_copy (((*_644) as variant#4).0: &mut ingestor::ingestor::Ingestor), _215 = &mut (*_645), StorageLive(_216), StorageLive(_217), _217 = move _211], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:68: 150:83 (#0), scope: scope[18] }, kind: _216 = std::sync::Arc::<common::types::BlockAndReceiptsPayload>::new(move _217) -> [return: bb106, unwind: bb412] }), is_cleanup: false }, BasicBlockData { statements: [_594 = const (), _666 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _573 = discriminant((((*_666) as variant#4).5: std::option::Option<common::types::BlockAndReceiptsPayload>)), StorageDead(_208), StorageDead(_205), _654 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[15] }, kind: drop((((*_654) as variant#4).4: std::vec::IntoIter<common::types::BlockAndReceiptsPayload>)) -> [return: bb197, unwind: bb419] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_217)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:84 (#0), scope: scope[18] }, kind: _214 = ingestor::ingestor::Ingestor::push_block_and_receipts(move _215, move _216) -> [return: bb107, unwind: bb413] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_216), StorageDead(_215)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[18] }, kind: _213 = <{async fn body of ingestor::ingestor::Ingestor::push_block_and_receipts()} as std::future::IntoFuture>::into_future(move _214) -> [return: bb108, unwind: bb414] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_214), _646 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), (((*_646) as variant#4).6: {async fn body of ingestor::ingestor::Ingestor::push_block_and_receipts()}) = move _213], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[19] }, kind: goto -> bb109 }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_219), StorageLive(_220), StorageLive(_221), StorageLive(_222), StorageLive(_223), _647 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _223 = &mut (((*_647) as variant#4).6: {async fn body of ingestor::ingestor::Ingestor::push_block_and_receipts()}), _222 = &mut (*_223)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[19] }, kind: _221 = std::pin::Pin::<&mut {async fn body of ingestor::ingestor::Ingestor::push_block_and_receipts()}>::new_unchecked(move _222) -> [return: bb110, unwind: bb410] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_222), StorageLive(_224), StorageLive(_225), StorageLive(_226), _226 = copy _595, _225 = move _226, _224 = &mut (*_225), StorageDead(_226)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[19] }, kind: _220 = <{async fn body of ingestor::ingestor::Ingestor::push_block_and_receipts()} as std::future::Future>::poll(move _221, move _224) -> [return: bb111, unwind: bb409] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_224), StorageDead(_221), _227 = discriminant(_220)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[19] }, kind: switchInt(move _227) -> [0: bb113, 1: bb112, otherwise: bb93] }), is_cleanup: false }, BasicBlockData { statements: [_219 = const (), _575 = discriminant(_220), StorageDead(_225), StorageDead(_223), StorageDead(_220), StorageDead(_219), StorageLive(_230), StorageLive(_231), _231 = (), _0 = std::task::Poll::<()>::Pending, StorageDead(_173), StorageDead(_176), StorageDead(_195), StorageDead(_196), StorageDead(_202), StorageDead(_205), StorageDead(_208), StorageDead(_211), StorageDead(_212), StorageDead(_213), StorageDead(_230), StorageDead(_231), _648 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), discriminant((*_648)) = 4], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[19] }, kind: return }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_228), _228 = move ((_220 as Ready).0: std::result::Result<(), eyre::Report>), _564 = const true, _212 = move _228, StorageDead(_228), _577 = discriminant(_220), StorageDead(_225), StorageDead(_223), StorageDead(_220), StorageDead(_219), _649 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:89: 150:90 (#2047), scope: scope[18] }, kind: drop((((*_649) as variant#4).6: {async fn body of ingestor::ingestor::Ingestor::push_block_and_receipts()})) -> [return: bb114, unwind: bb415] }), is_cleanup: false }, BasicBlockData { statements: [_232 = discriminant(_212)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:28: 150:36 (#0), scope: scope[18] }, kind: switchInt(move _232) -> [1: bb116, otherwise: bb115] }), is_cleanup: false }, BasicBlockData { statements: [_205 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:21: 155:22 (#0), scope: scope[17] }, kind: goto -> bb510 }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_233), _564 = const false, _233 = move ((_212 as Err).0: eyre::Report), StorageLive(_234), StorageLive(_235), StorageLive(_236), StorageLive(_237), _556 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[13], _237 = &(*_556), StorageLive(_239), _555 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[12], _239 = &(*_555)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#2053), scope: scope[18] }, kind: _236 = <tracing::Level as std::cmp::PartialOrd<tracing::level_filters::LevelFilter>>::le(move _237, move _239) -> [return: bb117, unwind: bb405] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#2053), scope: scope[18] }, kind: switchInt(move _236) -> [0: bb123, otherwise: bb118] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_239), StorageDead(_237), StorageLive(_241), StorageLive(_242), _554 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[11], _242 = &(*_554), StorageLive(_244), StorageLive(_245)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#2053), scope: scope[18] }, kind: _245 = tracing::level_filters::LevelFilter::current() -> [return: bb119, unwind: bb403] }), is_cleanup: false }, BasicBlockData { statements: [_244 = &_245], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#2053), scope: scope[18] }, kind: _241 = <tracing::Level as std::cmp::PartialOrd<tracing::level_filters::LevelFilter>>::le(move _242, move _244) -> [return: bb120, unwind: bb403] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#2053), scope: scope[18] }, kind: switchInt(move _241) -> [0: bb122, otherwise: bb121] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_245), StorageDead(_244), StorageDead(_242), StorageLive(_246), StorageLive(_247), StorageLive(_248), _248 = const {alloc18: &tracing::callsite::DefaultCallsite}, _247 = &(*_248)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:49 (#2049), scope: scope[18] }, kind: _246 = tracing::callsite::DefaultCallsite::interest(move _247) -> [return: bb125, unwind: bb401] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_245), StorageDead(_244), StorageDead(_242)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb124 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_239), StorageDead(_237)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb124 }), is_cleanup: false }, BasicBlockData { statements: [_235 = const false], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:23: 870:10 (#2049), scope: scope[18] }, kind: goto -> bb132 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_247), StorageDead(_248), StorageLive(_249), StorageLive(_250), _250 = &_246], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#2049), scope: scope[22] }, kind: _249 = tracing::subscriber::Interest::is_never(move _250) -> [return: bb126, unwind: bb399] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#2049), scope: scope[22] }, kind: switchInt(move _249) -> [0: bb128, otherwise: bb127] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_250), _235 = const false], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:13: 869:107 (#2049), scope: scope[22] }, kind: goto -> bb131 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_250), StorageLive(_251), StorageLive(_252), StorageLive(_253), StorageLive(_254), _254 = const {alloc18: &tracing::callsite::DefaultCallsite}, _253 = &(*_254)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#2049), scope: scope[22] }, kind: _252 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _253) -> [return: bb129, unwind: bb397] }), is_cleanup: false }, BasicBlockData { statements: [_251 = &(*_252), StorageDead(_253), StorageLive(_255), _255 = move _246], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:37: 869:107 (#2049), scope: scope[22] }, kind: _235 = tracing::__macro_support::__is_enabled(move _251, move _255) -> [return: bb130, unwind: bb396] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_255), StorageDead(_254), StorageDead(_252), StorageDead(_251)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:13: 869:107 (#2049), scope: scope[22] }, kind: goto -> bb131 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_249), StorageDead(_246)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:23: 870:10 (#2049), scope: scope[18] }, kind: goto -> bb132 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_241), StorageDead(_236), StorageLive(_256), _256 = copy _235], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:12: 871:19 (#2049), scope: scope[21] }, kind: switchInt(move _256) -> [0: bb146, otherwise: bb133] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_257), StorageLive(_258), _551 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[8], _258 = &(*_551), StorageLive(_260), StorageLive(_261), StorageLive(_262), StorageLive(_263), StorageLive(_264), StorageLive(_265), StorageLive(_266), StorageLive(_267), StorageLive(_268), _268 = const {alloc18: &tracing::callsite::DefaultCallsite}, _267 = &(*_268)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2049), scope: scope[21] }, kind: _266 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _267) -> [return: bb134, unwind: bb391] }), is_cleanup: false }, BasicBlockData { statements: [_265 = &(*_266), StorageDead(_267)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2049), scope: scope[21] }, kind: _264 = tracing::Metadata::<'_>::fields(move _265) -> [return: bb135, unwind: bb392] }), is_cleanup: false }, BasicBlockData { statements: [_263 = &(*_264), StorageDead(_265)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#2056), scope: scope[21] }, kind: _262 = tracing::field::FieldSet::iter(move _263) -> [return: bb136, unwind: bb393] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_263), StorageDead(_268), StorageDead(_266), StorageDead(_264), StorageLive(_269), StorageLive(_270), StorageLive(_271), StorageLive(_272), StorageLive(_273), StorageLive(_274), _274 = const {alloc18: &tracing::callsite::DefaultCallsite}, _273 = &(*_274)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2049), scope: scope[23] }, kind: _272 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _273) -> [return: bb137, unwind: bb388] }), is_cleanup: false }, BasicBlockData { statements: [_271 = &(*_272), StorageDead(_273)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2049), scope: scope[23] }, kind: _270 = tracing::Metadata::<'_>::fields(move _271) -> [return: bb138, unwind: bb389] }), is_cleanup: false }, BasicBlockData { statements: [_269 = &(*_270), StorageDead(_271), StorageLive(_275), StorageLive(_276), StorageLive(_277), StorageLive(_278), StorageLive(_279), StorageLive(_280), StorageLive(_281), StorageLive(_282), StorageLive(_283), _283 = &mut _262, _282 = &mut (*_283)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2056), scope: scope[23] }, kind: _281 = <tracing::field::Iter as std::iter::Iterator>::next(move _282) -> [return: bb139, unwind: bb386] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_282), StorageLive(_284), StorageLive(_285), _285 = const "FieldSet corrupted (this is a bug)", _284 = &(*_285)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2056), scope: scope[23] }, kind: _280 = std::option::Option::<tracing::field::Field>::expect(move _281, move _284) -> [return: bb140, unwind: bb384] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_284), StorageDead(_281), _279 = &_280, StorageLive(_286), StorageLive(_287), StorageLive(_288), StorageLive(_289), StorageLive(_290), StorageLive(_291), StorageLive(_292), StorageLive(_293), _550 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[7], _293 = &(*_550), _292 = &(*_293), StorageLive(_295), StorageLive(_296), StorageLive(_297), StorageLive(_298), StorageLive(_299), StorageLive(_300), _650 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _651 = deref_copy (((*_650) as variant#4).0: &mut ingestor::ingestor::Ingestor), _300 = &((*_651).0: common::types::Chain), _299 = &(*_300)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:74: 152:78 (#2062), scope: scope[23] }, kind: _298 = core::fmt::rt::Argument::<'_>::new_debug::<common::types::Chain>(move _299) -> [return: bb141, unwind: bb382] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_299), StorageLive(_301), StorageLive(_302), StorageLive(_303), _303 = &_233, _302 = &(*_303)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:80: 152:84 (#2062), scope: scope[23] }, kind: _301 = core::fmt::rt::Argument::<'_>::new_debug::<eyre::Report>(move _302) -> [return: bb142, unwind: bb378] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_302), _297 = [move _298, move _301], StorageDead(_301), StorageDead(_298), _296 = &_297, _295 = &(*_296)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2062), scope: scope[23] }, kind: _291 = std::fmt::Arguments::<'_>::new_v1::<3, 2>(move _292, move _295) -> [return: bb143, unwind: bb379] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_295), StorageDead(_292), _290 = &_291, _289 = &(*_290), _288 = move _289 as &dyn tracing::Value (PointerCoercion(Unsize, AsCast)), StorageDead(_289), _287 = copy _288, _286 = std::option::Option::<&dyn tracing::Value>::Some(move _287), StorageDead(_287), _278 = (move _279, move _286), StorageDead(_286), StorageDead(_279), _277 = [move _278], StorageDead(_278), _276 = &_277, _275 = &(*_276)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#2056), scope: scope[23] }, kind: _261 = tracing::field::FieldSet::value_set::<'_, [(&tracing::field::Field, std::option::Option<&dyn tracing::Value>); 1]>(move _269, move _275) -> [return: bb144, unwind: bb380] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_275), StorageDead(_269), StorageDead(_262), _260 = (move _261,)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#2049), scope: scope[21] }, kind: _257 = <{closure@ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::{closure#1}} as std::ops::Fn<(tracing::field::ValueSet<'_>,)>>::call(move _258, move _260) -> [return: bb145, unwind: bb381] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_261), StorageDead(_260), StorageDead(_258), StorageDead(_303), StorageDead(_300), StorageDead(_297), StorageDead(_296), StorageDead(_293), StorageDead(_291), StorageDead(_290), StorageDead(_288), StorageDead(_285), StorageDead(_283), StorageDead(_280), StorageDead(_277), StorageDead(_276), StorageDead(_274), StorageDead(_272), StorageDead(_270), StorageDead(_257), _234 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#2049), scope: scope[21] }, kind: goto -> bb195 }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_304), StorageLive(_305), StorageLive(_306), StorageLive(_307), StorageLive(_308), _308 = const tracing::Level::ERROR, _309 = discriminant((_308.0: tracing::metadata::LevelInner))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3056:9 (#2068), scope: scope[21] }, kind: switchInt(move _309) -> [1: bb148, 2: bb149, 3: bb150, 4: bb151, otherwise: bb147] }), is_cleanup: false }, BasicBlockData { statements: [_307 = tracing::log::Level::Trace], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3061:18: 3061:43 (#2068), scope: scope[21] }, kind: goto -> bb152 }), is_cleanup: false }, BasicBlockData { statements: [_307 = tracing::log::Level::Debug], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3060:37: 3060:62 (#2068), scope: scope[21] }, kind: goto -> bb152 }), is_cleanup: false }, BasicBlockData { statements: [_307 = tracing::log::Level::Info], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3059:36: 3059:60 (#2068), scope: scope[21] }, kind: goto -> bb152 }), is_cleanup: false }, BasicBlockData { statements: [_307 = tracing::log::Level::Warn], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3058:36: 3058:60 (#2068), scope: scope[21] }, kind: goto -> bb152 }), is_cleanup: false }, BasicBlockData { statements: [_307 = tracing::log::Level::Error], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:37: 3057:62 (#2068), scope: scope[21] }, kind: goto -> bb152 }), is_cleanup: false }, BasicBlockData { statements: [_306 = &_307, StorageLive(_310), _553 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[10], _310 = &(*_553)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#2064), scope: scope[21] }, kind: _305 = <tracing::log::Level as std::cmp::PartialOrd<tracing::log::LevelFilter>>::le(move _306, move _310) -> [return: bb153, unwind: bb376] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#2064), scope: scope[21] }, kind: switchInt(move _305) -> [0: bb193, otherwise: bb154] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_310), StorageDead(_308), StorageDead(_307), StorageDead(_306), StorageLive(_312)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#2064), scope: scope[21] }, kind: _312 = tracing::dispatcher::has_been_set() -> [return: bb155, unwind: bb375] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#2064), scope: scope[21] }, kind: switchInt(move _312) -> [0: bb156, otherwise: bb191] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_313), StorageLive(_314), _314 = const tracing::Level::ERROR, _315 = discriminant((_314.0: tracing::metadata::LevelInner))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3056:9 (#2071), scope: scope[21] }, kind: switchInt(move _315) -> [1: bb158, 2: bb159, 3: bb160, 4: bb161, otherwise: bb157] }), is_cleanup: false }, BasicBlockData { statements: [_313 = tracing::log::Level::Trace], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3061:18: 3061:43 (#2071), scope: scope[21] }, kind: goto -> bb162 }), is_cleanup: false }, BasicBlockData { statements: [_313 = tracing::log::Level::Debug], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3060:37: 3060:62 (#2071), scope: scope[21] }, kind: goto -> bb162 }), is_cleanup: false }, BasicBlockData { statements: [_313 = tracing::log::Level::Info], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3059:36: 3059:60 (#2071), scope: scope[21] }, kind: goto -> bb162 }), is_cleanup: false }, BasicBlockData { statements: [_313 = tracing::log::Level::Warn], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3058:36: 3058:60 (#2071), scope: scope[21] }, kind: goto -> bb162 }), is_cleanup: false }, BasicBlockData { statements: [_313 = tracing::log::Level::Error], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:37: 3057:62 (#2071), scope: scope[21] }, kind: goto -> bb162 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_314), StorageLive(_316), StorageLive(_317), _317 = &_313, StorageLive(_318), StorageLive(_319)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2070), scope: scope[24] }, kind: _319 = tracing::log::max_level() -> [return: bb163, unwind: bb373] }), is_cleanup: false }, BasicBlockData { statements: [_318 = &_319], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#2070), scope: scope[24] }, kind: _316 = <tracing::log::Level as std::cmp::PartialOrd<tracing::log::LevelFilter>>::le(move _317, move _318) -> [return: bb164, unwind: bb373] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#2070), scope: scope[24] }, kind: switchInt(move _316) -> [0: bb189, otherwise: bb165] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_319), StorageDead(_318), StorageDead(_317), StorageLive(_320), StorageLive(_321), StorageLive(_322), _322 = const {alloc18: &tracing::callsite::DefaultCallsite}, _321 = &(*_322)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:28: 3090:48 (#2070), scope: scope[24] }, kind: _320 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _321) -> [return: bb166, unwind: bb371] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_321), StorageDead(_322), StorageLive(_323), StorageLive(_324), StorageLive(_325), StorageLive(_326), StorageLive(_327), StorageLive(_328), StorageLive(_329)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2070), scope: scope[25] }, kind: _329 = tracing::log::Metadata::<'_>::builder() -> [return: bb167, unwind: bb368] }), is_cleanup: false }, BasicBlockData { statements: [_328 = &mut _329, StorageLive(_330), _330 = copy _313], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2070), scope: scope[25] }, kind: _327 = tracing::log::MetadataBuilder::<'_>::level(move _328, move _330) -> [return: bb168, unwind: bb367] }), is_cleanup: false }, BasicBlockData { statements: [_326 = &mut (*_327), StorageDead(_330), StorageDead(_328), StorageLive(_331), StorageLive(_332), StorageLive(_333), _333 = &(*_320)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2070), scope: scope[25] }, kind: _332 = tracing::Metadata::<'_>::target(move _333) -> [return: bb169, unwind: bb364] }), is_cleanup: false }, BasicBlockData { statements: [_331 = &(*_332), StorageDead(_333)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2070), scope: scope[25] }, kind: _325 = tracing::log::MetadataBuilder::<'_>::target(move _326, move _331) -> [return: bb170, unwind: bb365] }), is_cleanup: false }, BasicBlockData { statements: [_324 = &(*_325), StorageDead(_331), StorageDead(_326)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3094:29 (#2070), scope: scope[25] }, kind: _323 = tracing::log::MetadataBuilder::<'_>::build(move _324) -> [return: bb171, unwind: bb366] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_324), StorageDead(_332), StorageDead(_329), StorageDead(_327), StorageDead(_325), StorageLive(_334)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:30: 3095:43 (#2070), scope: scope[26] }, kind: _334 = tracing::log::logger() -> [return: bb172, unwind: bb363] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_335), StorageLive(_336), _336 = &(*_334), StorageLive(_337), StorageLive(_338), _338 = &_323, _337 = &(*_338)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#2070), scope: scope[27] }, kind: _335 = <dyn tracing::log::Log as tracing::log::Log>::enabled(move _336, move _337) -> [return: bb173, unwind: bb361] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#2070), scope: scope[27] }, kind: switchInt(move _335) -> [0: bb187, otherwise: bb174] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_338), StorageDead(_337), StorageDead(_336), StorageLive(_339), _339 = &(*_320), StorageLive(_340), StorageLive(_341), _341 = &(*_334), _340 = move _341 as &dyn tracing::log::Log (PointerCoercion(Unsize, Implicit)), StorageDead(_341), StorageLive(_342), _342 = move _323, StorageLive(_343), StorageLive(_344), StorageLive(_345), StorageLive(_346), StorageLive(_347), StorageLive(_348), StorageLive(_349), StorageLive(_350), StorageLive(_351), StorageLive(_352), _352 = const {alloc18: &tracing::callsite::DefaultCallsite}, _351 = &(*_352)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2049), scope: scope[27] }, kind: _350 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _351) -> [return: bb175, unwind: bb357] }), is_cleanup: false }, BasicBlockData { statements: [_349 = &(*_350), StorageDead(_351)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2049), scope: scope[27] }, kind: _348 = tracing::Metadata::<'_>::fields(move _349) -> [return: bb176, unwind: bb358] }), is_cleanup: false }, BasicBlockData { statements: [_347 = &(*_348), StorageDead(_349)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#2073), scope: scope[27] }, kind: _346 = tracing::field::FieldSet::iter(move _347) -> [return: bb177, unwind: bb359] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_347), StorageDead(_352), StorageDead(_350), StorageDead(_348), StorageLive(_353), StorageLive(_354), StorageLive(_355), StorageLive(_356), StorageLive(_357), StorageLive(_358), _358 = const {alloc18: &tracing::callsite::DefaultCallsite}, _357 = &(*_358)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2049), scope: scope[28] }, kind: _356 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _357) -> [return: bb178, unwind: bb354] }), is_cleanup: false }, BasicBlockData { statements: [_355 = &(*_356), StorageDead(_357)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2049), scope: scope[28] }, kind: _354 = tracing::Metadata::<'_>::fields(move _355) -> [return: bb179, unwind: bb355] }), is_cleanup: false }, BasicBlockData { statements: [_353 = &(*_354), StorageDead(_355), StorageLive(_359), StorageLive(_360), StorageLive(_361), StorageLive(_362), StorageLive(_363), StorageLive(_364), StorageLive(_365), StorageLive(_366), StorageLive(_367), _367 = &mut _346, _366 = &mut (*_367)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2073), scope: scope[28] }, kind: _365 = <tracing::field::Iter as std::iter::Iterator>::next(move _366) -> [return: bb180, unwind: bb352] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_366), StorageLive(_368), StorageLive(_369), _369 = const "FieldSet corrupted (this is a bug)", _368 = &(*_369)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2073), scope: scope[28] }, kind: _364 = std::option::Option::<tracing::field::Field>::expect(move _365, move _368) -> [return: bb181, unwind: bb350] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_368), StorageDead(_365), _363 = &_364, StorageLive(_370), StorageLive(_371), StorageLive(_372), StorageLive(_373), StorageLive(_374), StorageLive(_375), StorageLive(_376), StorageLive(_377), _552 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[9], _377 = &(*_552), _376 = &(*_377), StorageLive(_379), StorageLive(_380), StorageLive(_381), StorageLive(_382), StorageLive(_383), StorageLive(_384), _652 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _653 = deref_copy (((*_652) as variant#4).0: &mut ingestor::ingestor::Ingestor), _384 = &((*_653).0: common::types::Chain), _383 = &(*_384)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:74: 152:78 (#2079), scope: scope[28] }, kind: _382 = core::fmt::rt::Argument::<'_>::new_debug::<common::types::Chain>(move _383) -> [return: bb182, unwind: bb348] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_383), StorageLive(_385), StorageLive(_386), StorageLive(_387), _387 = &_233, _386 = &(*_387)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:80: 152:84 (#2079), scope: scope[28] }, kind: _385 = core::fmt::rt::Argument::<'_>::new_debug::<eyre::Report>(move _386) -> [return: bb183, unwind: bb344] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_386), _381 = [move _382, move _385], StorageDead(_385), StorageDead(_382), _380 = &_381, _379 = &(*_380)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2079), scope: scope[28] }, kind: _375 = std::fmt::Arguments::<'_>::new_v1::<3, 2>(move _376, move _379) -> [return: bb184, unwind: bb345] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_379), StorageDead(_376), _374 = &_375, _373 = &(*_374), _372 = move _373 as &dyn tracing::Value (PointerCoercion(Unsize, AsCast)), StorageDead(_373), _371 = copy _372, _370 = std::option::Option::<&dyn tracing::Value>::Some(move _371), StorageDead(_371), _362 = (move _363, move _370), StorageDead(_370), StorageDead(_363), _361 = [move _362], StorageDead(_362), _360 = &_361, _359 = &(*_360)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#2073), scope: scope[28] }, kind: _345 = tracing::field::FieldSet::value_set::<'_, [(&tracing::field::Field, std::option::Option<&dyn tracing::Value>); 1]>(move _353, move _359) -> [return: bb185, unwind: bb346] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_359), StorageDead(_353), StorageDead(_346), _344 = &_345, _343 = &(*_344)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:21: 3097:95 (#2070), scope: scope[27] }, kind: _304 = tracing::__macro_support::__tracing_log(move _339, move _340, move _342, move _343) -> [return: bb186, unwind: bb347] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_343), StorageDead(_342), StorageDead(_340), StorageDead(_339), StorageDead(_387), StorageDead(_384), StorageDead(_381), StorageDead(_380), StorageDead(_377), StorageDead(_375), StorageDead(_374), StorageDead(_372), StorageDead(_369), StorageDead(_367), StorageDead(_364), StorageDead(_361), StorageDead(_360), StorageDead(_358), StorageDead(_356), StorageDead(_354), StorageDead(_345), StorageDead(_344)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:17: 3098:18 (#2070), scope: scope[27] }, kind: goto -> bb188 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_338), StorageDead(_337), StorageDead(_336), _304 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:17: 3098:18 (#2070), scope: scope[27] }, kind: goto -> bb188 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_335), StorageDead(_334), StorageDead(_323), StorageDead(_320)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:13: 3099:14 (#2070), scope: scope[24] }, kind: goto -> bb190 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_319), StorageDead(_318), StorageDead(_317), _304 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:13: 3099:14 (#2070), scope: scope[24] }, kind: goto -> bb190 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_316), StorageDead(_313)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:13: 3135:14 (#2064), scope: scope[21] }, kind: goto -> bb192 }), is_cleanup: false }, BasicBlockData { statements: [_304 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:13: 3135:14 (#2064), scope: scope[21] }, kind: goto -> bb192 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_312)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#2064), scope: scope[21] }, kind: goto -> bb194 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_310), StorageDead(_308), StorageDead(_307), StorageDead(_306), _304 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#2064), scope: scope[21] }, kind: goto -> bb194 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_305), StorageDead(_304), _234 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#2049), scope: scope[21] }, kind: goto -> bb195 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_256), StorageDead(_235), StorageDead(_234), _205 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:155:21: 155:22 (#0), scope: scope[17] }, kind: drop(_233) -> [return: bb196, unwind: bb408] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_233)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:21: 155:22 (#0), scope: scope[17] }, kind: goto -> bb510 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_202), StorageDead(_196), _655 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), (((*_655) as variant#4).7: bool) = const false, StorageDead(_195)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:157:13: 157:14 (#0), scope: scope[11] }, kind: goto -> bb278 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#2042), scope: scope[29] }, kind: switchInt(move _391) -> [0: bb204, otherwise: bb199] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_394), StorageDead(_392), StorageLive(_396), StorageLive(_397), _547 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[4], _397 = &(*_547), StorageLive(_399), StorageLive(_400)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#2042), scope: scope[29] }, kind: _400 = tracing::level_filters::LevelFilter::current() -> [return: bb200, unwind: bb338] }), is_cleanup: false }, BasicBlockData { statements: [_399 = &_400], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#2042), scope: scope[29] }, kind: _396 = <tracing::Level as std::cmp::PartialOrd<tracing::level_filters::LevelFilter>>::le(move _397, move _399) -> [return: bb201, unwind: bb338] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#2042), scope: scope[29] }, kind: switchInt(move _396) -> [0: bb203, otherwise: bb202] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_400), StorageDead(_399), StorageDead(_397), StorageLive(_401), StorageLive(_402), StorageLive(_403), _403 = const {alloc19: &tracing::callsite::DefaultCallsite}, _402 = &(*_403)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:49 (#2038), scope: scope[29] }, kind: _401 = tracing::callsite::DefaultCallsite::interest(move _402) -> [return: bb206, unwind: bb336] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_400), StorageDead(_399), StorageDead(_397)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[29] }, kind: goto -> bb205 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_394), StorageDead(_392)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[29] }, kind: goto -> bb205 }), is_cleanup: false }, BasicBlockData { statements: [_390 = const false], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:23: 870:10 (#2038), scope: scope[29] }, kind: goto -> bb213 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_402), StorageDead(_403), StorageLive(_404), StorageLive(_405), _405 = &_401], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#2038), scope: scope[31] }, kind: _404 = tracing::subscriber::Interest::is_never(move _405) -> [return: bb207, unwind: bb334] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#2038), scope: scope[31] }, kind: switchInt(move _404) -> [0: bb209, otherwise: bb208] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_405), _390 = const false], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:13: 869:107 (#2038), scope: scope[31] }, kind: goto -> bb212 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_405), StorageLive(_406), StorageLive(_407), StorageLive(_408), StorageLive(_409), _409 = const {alloc19: &tracing::callsite::DefaultCallsite}, _408 = &(*_409)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#2038), scope: scope[31] }, kind: _407 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _408) -> [return: bb210, unwind: bb332] }), is_cleanup: false }, BasicBlockData { statements: [_406 = &(*_407), StorageDead(_408), StorageLive(_410), _410 = move _401], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:37: 869:107 (#2038), scope: scope[31] }, kind: _390 = tracing::__macro_support::__is_enabled(move _406, move _410) -> [return: bb211, unwind: bb331] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_410), StorageDead(_409), StorageDead(_407), StorageDead(_406)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:13: 869:107 (#2038), scope: scope[31] }, kind: goto -> bb212 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_404), StorageDead(_401)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:23: 870:10 (#2038), scope: scope[29] }, kind: goto -> bb213 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_396), StorageDead(_391), StorageLive(_411), _411 = copy _390], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:12: 871:19 (#2038), scope: scope[30] }, kind: switchInt(move _411) -> [0: bb227, otherwise: bb214] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_412), StorageLive(_413), _544 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[1], _413 = &(*_544), StorageLive(_415), StorageLive(_416), StorageLive(_417), StorageLive(_418), StorageLive(_419), StorageLive(_420), StorageLive(_421), StorageLive(_422), StorageLive(_423), _423 = const {alloc19: &tracing::callsite::DefaultCallsite}, _422 = &(*_423)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2038), scope: scope[30] }, kind: _421 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _422) -> [return: bb215, unwind: bb326] }), is_cleanup: false }, BasicBlockData { statements: [_420 = &(*_421), StorageDead(_422)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2038), scope: scope[30] }, kind: _419 = tracing::Metadata::<'_>::fields(move _420) -> [return: bb216, unwind: bb327] }), is_cleanup: false }, BasicBlockData { statements: [_418 = &(*_419), StorageDead(_420)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#2082), scope: scope[30] }, kind: _417 = tracing::field::FieldSet::iter(move _418) -> [return: bb217, unwind: bb328] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_418), StorageDead(_423), StorageDead(_421), StorageDead(_419), StorageLive(_424), StorageLive(_425), StorageLive(_426), StorageLive(_427), StorageLive(_428), StorageLive(_429), _429 = const {alloc19: &tracing::callsite::DefaultCallsite}, _428 = &(*_429)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2038), scope: scope[32] }, kind: _427 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _428) -> [return: bb218, unwind: bb323] }), is_cleanup: false }, BasicBlockData { statements: [_426 = &(*_427), StorageDead(_428)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2038), scope: scope[32] }, kind: _425 = tracing::Metadata::<'_>::fields(move _426) -> [return: bb219, unwind: bb324] }), is_cleanup: false }, BasicBlockData { statements: [_424 = &(*_425), StorageDead(_426), StorageLive(_430), StorageLive(_431), StorageLive(_432), StorageLive(_433), StorageLive(_434), StorageLive(_435), StorageLive(_436), StorageLive(_437), StorageLive(_438), _438 = &mut _417, _437 = &mut (*_438)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2082), scope: scope[32] }, kind: _436 = <tracing::field::Iter as std::iter::Iterator>::next(move _437) -> [return: bb220, unwind: bb321] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_437), StorageLive(_439), StorageLive(_440), _440 = const "FieldSet corrupted (this is a bug)", _439 = &(*_440)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2082), scope: scope[32] }, kind: _435 = std::option::Option::<tracing::field::Field>::expect(move _436, move _439) -> [return: bb221, unwind: bb319] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_439), StorageDead(_436), _434 = &_435, StorageLive(_441), StorageLive(_442), StorageLive(_443), StorageLive(_444), StorageLive(_445), StorageLive(_446), StorageLive(_447), StorageLive(_448), _543 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[0], _448 = &(*_543), _447 = &(*_448), StorageLive(_450), StorageLive(_451), StorageLive(_452), StorageLive(_453), StorageLive(_454), StorageLive(_455), _656 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _657 = deref_copy (((*_656) as variant#4).0: &mut ingestor::ingestor::Ingestor), _455 = &((*_657).0: common::types::Chain), _454 = &(*_455)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:77: 160:81 (#2088), scope: scope[32] }, kind: _453 = core::fmt::rt::Argument::<'_>::new_debug::<common::types::Chain>(move _454) -> [return: bb222, unwind: bb317] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_454), StorageLive(_456), StorageLive(_457), StorageLive(_458), _458 = &_388, _457 = &(*_458)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:83: 160:87 (#2088), scope: scope[32] }, kind: _456 = core::fmt::rt::Argument::<'_>::new_debug::<ingestor::eth_client::RPCClientError>(move _457) -> [return: bb223, unwind: bb313] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_457), _452 = [move _453, move _456], StorageDead(_456), StorageDead(_453), _451 = &_452, _450 = &(*_451)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2088), scope: scope[32] }, kind: _446 = std::fmt::Arguments::<'_>::new_v1::<2, 2>(move _447, move _450) -> [return: bb224, unwind: bb314] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_450), StorageDead(_447), _445 = &_446, _444 = &(*_445), _443 = move _444 as &dyn tracing::Value (PointerCoercion(Unsize, AsCast)), StorageDead(_444), _442 = copy _443, _441 = std::option::Option::<&dyn tracing::Value>::Some(move _442), StorageDead(_442), _433 = (move _434, move _441), StorageDead(_441), StorageDead(_434), _432 = [move _433], StorageDead(_433), _431 = &_432, _430 = &(*_431)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#2082), scope: scope[32] }, kind: _416 = tracing::field::FieldSet::value_set::<'_, [(&tracing::field::Field, std::option::Option<&dyn tracing::Value>); 1]>(move _424, move _430) -> [return: bb225, unwind: bb315] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_430), StorageDead(_424), StorageDead(_417), _415 = (move _416,)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#2038), scope: scope[30] }, kind: _412 = <{closure@ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::{closure#2}} as std::ops::Fn<(tracing::field::ValueSet<'_>,)>>::call(move _413, move _415) -> [return: bb226, unwind: bb316] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_416), StorageDead(_415), StorageDead(_413), StorageDead(_458), StorageDead(_455), StorageDead(_452), StorageDead(_451), StorageDead(_448), StorageDead(_446), StorageDead(_445), StorageDead(_443), StorageDead(_440), StorageDead(_438), StorageDead(_435), StorageDead(_432), StorageDead(_431), StorageDead(_429), StorageDead(_427), StorageDead(_425), StorageDead(_412), _389 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#2038), scope: scope[30] }, kind: goto -> bb276 }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_459), StorageLive(_460), StorageLive(_461), StorageLive(_462), StorageLive(_463), _463 = const tracing::Level::ERROR, _464 = discriminant((_463.0: tracing::metadata::LevelInner))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3056:9 (#2094), scope: scope[30] }, kind: switchInt(move _464) -> [1: bb229, 2: bb230, 3: bb231, 4: bb232, otherwise: bb228] }), is_cleanup: false }, BasicBlockData { statements: [_462 = tracing::log::Level::Trace], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3061:18: 3061:43 (#2094), scope: scope[30] }, kind: goto -> bb233 }), is_cleanup: false }, BasicBlockData { statements: [_462 = tracing::log::Level::Debug], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3060:37: 3060:62 (#2094), scope: scope[30] }, kind: goto -> bb233 }), is_cleanup: false }, BasicBlockData { statements: [_462 = tracing::log::Level::Info], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3059:36: 3059:60 (#2094), scope: scope[30] }, kind: goto -> bb233 }), is_cleanup: false }, BasicBlockData { statements: [_462 = tracing::log::Level::Warn], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3058:36: 3058:60 (#2094), scope: scope[30] }, kind: goto -> bb233 }), is_cleanup: false }, BasicBlockData { statements: [_462 = tracing::log::Level::Error], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:37: 3057:62 (#2094), scope: scope[30] }, kind: goto -> bb233 }), is_cleanup: false }, BasicBlockData { statements: [_461 = &_462, StorageLive(_465), _546 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[3], _465 = &(*_546)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#2090), scope: scope[30] }, kind: _460 = <tracing::log::Level as std::cmp::PartialOrd<tracing::log::LevelFilter>>::le(move _461, move _465) -> [return: bb234, unwind: bb311] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#2090), scope: scope[30] }, kind: switchInt(move _460) -> [0: bb274, otherwise: bb235] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_465), StorageDead(_463), StorageDead(_462), StorageDead(_461), StorageLive(_467)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#2090), scope: scope[30] }, kind: _467 = tracing::dispatcher::has_been_set() -> [return: bb236, unwind: bb310] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#2090), scope: scope[30] }, kind: switchInt(move _467) -> [0: bb237, otherwise: bb272] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_468), StorageLive(_469), _469 = const tracing::Level::ERROR, _470 = discriminant((_469.0: tracing::metadata::LevelInner))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3056:9 (#2097), scope: scope[30] }, kind: switchInt(move _470) -> [1: bb239, 2: bb240, 3: bb241, 4: bb242, otherwise: bb238] }), is_cleanup: false }, BasicBlockData { statements: [_468 = tracing::log::Level::Trace], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3061:18: 3061:43 (#2097), scope: scope[30] }, kind: goto -> bb243 }), is_cleanup: false }, BasicBlockData { statements: [_468 = tracing::log::Level::Debug], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3060:37: 3060:62 (#2097), scope: scope[30] }, kind: goto -> bb243 }), is_cleanup: false }, BasicBlockData { statements: [_468 = tracing::log::Level::Info], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3059:36: 3059:60 (#2097), scope: scope[30] }, kind: goto -> bb243 }), is_cleanup: false }, BasicBlockData { statements: [_468 = tracing::log::Level::Warn], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3058:36: 3058:60 (#2097), scope: scope[30] }, kind: goto -> bb243 }), is_cleanup: false }, BasicBlockData { statements: [_468 = tracing::log::Level::Error], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:37: 3057:62 (#2097), scope: scope[30] }, kind: goto -> bb243 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_469), StorageLive(_471), StorageLive(_472), _472 = &_468, StorageLive(_473), StorageLive(_474)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2096), scope: scope[33] }, kind: _474 = tracing::log::max_level() -> [return: bb244, unwind: bb308] }), is_cleanup: false }, BasicBlockData { statements: [_473 = &_474], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#2096), scope: scope[33] }, kind: _471 = <tracing::log::Level as std::cmp::PartialOrd<tracing::log::LevelFilter>>::le(move _472, move _473) -> [return: bb245, unwind: bb308] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#2096), scope: scope[33] }, kind: switchInt(move _471) -> [0: bb270, otherwise: bb246] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_474), StorageDead(_473), StorageDead(_472), StorageLive(_475), StorageLive(_476), StorageLive(_477), _477 = const {alloc19: &tracing::callsite::DefaultCallsite}, _476 = &(*_477)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:28: 3090:48 (#2096), scope: scope[33] }, kind: _475 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _476) -> [return: bb247, unwind: bb306] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_476), StorageDead(_477), StorageLive(_478), StorageLive(_479), StorageLive(_480), StorageLive(_481), StorageLive(_482), StorageLive(_483), StorageLive(_484)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2096), scope: scope[34] }, kind: _484 = tracing::log::Metadata::<'_>::builder() -> [return: bb248, unwind: bb303] }), is_cleanup: false }, BasicBlockData { statements: [_483 = &mut _484, StorageLive(_485), _485 = copy _468], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2096), scope: scope[34] }, kind: _482 = tracing::log::MetadataBuilder::<'_>::level(move _483, move _485) -> [return: bb249, unwind: bb302] }), is_cleanup: false }, BasicBlockData { statements: [_481 = &mut (*_482), StorageDead(_485), StorageDead(_483), StorageLive(_486), StorageLive(_487), StorageLive(_488), _488 = &(*_475)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2096), scope: scope[34] }, kind: _487 = tracing::Metadata::<'_>::target(move _488) -> [return: bb250, unwind: bb299] }), is_cleanup: false }, BasicBlockData { statements: [_486 = &(*_487), StorageDead(_488)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2096), scope: scope[34] }, kind: _480 = tracing::log::MetadataBuilder::<'_>::target(move _481, move _486) -> [return: bb251, unwind: bb300] }), is_cleanup: false }, BasicBlockData { statements: [_479 = &(*_480), StorageDead(_486), StorageDead(_481)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3094:29 (#2096), scope: scope[34] }, kind: _478 = tracing::log::MetadataBuilder::<'_>::build(move _479) -> [return: bb252, unwind: bb301] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_479), StorageDead(_487), StorageDead(_484), StorageDead(_482), StorageDead(_480), StorageLive(_489)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:30: 3095:43 (#2096), scope: scope[35] }, kind: _489 = tracing::log::logger() -> [return: bb253, unwind: bb298] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_490), StorageLive(_491), _491 = &(*_489), StorageLive(_492), StorageLive(_493), _493 = &_478, _492 = &(*_493)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#2096), scope: scope[36] }, kind: _490 = <dyn tracing::log::Log as tracing::log::Log>::enabled(move _491, move _492) -> [return: bb254, unwind: bb296] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#2096), scope: scope[36] }, kind: switchInt(move _490) -> [0: bb268, otherwise: bb255] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_493), StorageDead(_492), StorageDead(_491), StorageLive(_494), _494 = &(*_475), StorageLive(_495), StorageLive(_496), _496 = &(*_489), _495 = move _496 as &dyn tracing::log::Log (PointerCoercion(Unsize, Implicit)), StorageDead(_496), StorageLive(_497), _497 = move _478, StorageLive(_498), StorageLive(_499), StorageLive(_500), StorageLive(_501), StorageLive(_502), StorageLive(_503), StorageLive(_504), StorageLive(_505), StorageLive(_506), StorageLive(_507), _507 = const {alloc19: &tracing::callsite::DefaultCallsite}, _506 = &(*_507)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2038), scope: scope[36] }, kind: _505 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _506) -> [return: bb256, unwind: bb292] }), is_cleanup: false }, BasicBlockData { statements: [_504 = &(*_505), StorageDead(_506)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2038), scope: scope[36] }, kind: _503 = tracing::Metadata::<'_>::fields(move _504) -> [return: bb257, unwind: bb293] }), is_cleanup: false }, BasicBlockData { statements: [_502 = &(*_503), StorageDead(_504)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#2099), scope: scope[36] }, kind: _501 = tracing::field::FieldSet::iter(move _502) -> [return: bb258, unwind: bb294] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_502), StorageDead(_507), StorageDead(_505), StorageDead(_503), StorageLive(_508), StorageLive(_509), StorageLive(_510), StorageLive(_511), StorageLive(_512), StorageLive(_513), _513 = const {alloc19: &tracing::callsite::DefaultCallsite}, _512 = &(*_513)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2038), scope: scope[37] }, kind: _511 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _512) -> [return: bb259, unwind: bb289] }), is_cleanup: false }, BasicBlockData { statements: [_510 = &(*_511), StorageDead(_512)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2038), scope: scope[37] }, kind: _509 = tracing::Metadata::<'_>::fields(move _510) -> [return: bb260, unwind: bb290] }), is_cleanup: false }, BasicBlockData { statements: [_508 = &(*_509), StorageDead(_510), StorageLive(_514), StorageLive(_515), StorageLive(_516), StorageLive(_517), StorageLive(_518), StorageLive(_519), StorageLive(_520), StorageLive(_521), StorageLive(_522), _522 = &mut _501, _521 = &mut (*_522)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2099), scope: scope[37] }, kind: _520 = <tracing::field::Iter as std::iter::Iterator>::next(move _521) -> [return: bb261, unwind: bb287] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_521), StorageLive(_523), StorageLive(_524), _524 = const "FieldSet corrupted (this is a bug)", _523 = &(*_524)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2099), scope: scope[37] }, kind: _519 = std::option::Option::<tracing::field::Field>::expect(move _520, move _523) -> [return: bb262, unwind: bb285] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_523), StorageDead(_520), _518 = &_519, StorageLive(_525), StorageLive(_526), StorageLive(_527), StorageLive(_528), StorageLive(_529), StorageLive(_530), StorageLive(_531), StorageLive(_532), _545 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[2], _532 = &(*_545), _531 = &(*_532), StorageLive(_534), StorageLive(_535), StorageLive(_536), StorageLive(_537), StorageLive(_538), StorageLive(_539), _658 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _659 = deref_copy (((*_658) as variant#4).0: &mut ingestor::ingestor::Ingestor), _539 = &((*_659).0: common::types::Chain), _538 = &(*_539)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:77: 160:81 (#2105), scope: scope[37] }, kind: _537 = core::fmt::rt::Argument::<'_>::new_debug::<common::types::Chain>(move _538) -> [return: bb263, unwind: bb283] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_538), StorageLive(_540), StorageLive(_541), StorageLive(_542), _542 = &_388, _541 = &(*_542)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:83: 160:87 (#2105), scope: scope[37] }, kind: _540 = core::fmt::rt::Argument::<'_>::new_debug::<ingestor::eth_client::RPCClientError>(move _541) -> [return: bb264, unwind: bb279] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_541), _536 = [move _537, move _540], StorageDead(_540), StorageDead(_537), _535 = &_536, _534 = &(*_535)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2105), scope: scope[37] }, kind: _530 = std::fmt::Arguments::<'_>::new_v1::<2, 2>(move _531, move _534) -> [return: bb265, unwind: bb280] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_534), StorageDead(_531), _529 = &_530, _528 = &(*_529), _527 = move _528 as &dyn tracing::Value (PointerCoercion(Unsize, AsCast)), StorageDead(_528), _526 = copy _527, _525 = std::option::Option::<&dyn tracing::Value>::Some(move _526), StorageDead(_526), _517 = (move _518, move _525), StorageDead(_525), StorageDead(_518), _516 = [move _517], StorageDead(_517), _515 = &_516, _514 = &(*_515)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#2099), scope: scope[37] }, kind: _500 = tracing::field::FieldSet::value_set::<'_, [(&tracing::field::Field, std::option::Option<&dyn tracing::Value>); 1]>(move _508, move _514) -> [return: bb266, unwind: bb281] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_514), StorageDead(_508), StorageDead(_501), _499 = &_500, _498 = &(*_499)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:21: 3097:95 (#2096), scope: scope[36] }, kind: _459 = tracing::__macro_support::__tracing_log(move _494, move _495, move _497, move _498) -> [return: bb267, unwind: bb282] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_498), StorageDead(_497), StorageDead(_495), StorageDead(_494), StorageDead(_542), StorageDead(_539), StorageDead(_536), StorageDead(_535), StorageDead(_532), StorageDead(_530), StorageDead(_529), StorageDead(_527), StorageDead(_524), StorageDead(_522), StorageDead(_519), StorageDead(_516), StorageDead(_515), StorageDead(_513), StorageDead(_511), StorageDead(_509), StorageDead(_500), StorageDead(_499)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:17: 3098:18 (#2096), scope: scope[36] }, kind: goto -> bb269 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_493), StorageDead(_492), StorageDead(_491), _459 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:17: 3098:18 (#2096), scope: scope[36] }, kind: goto -> bb269 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_490), StorageDead(_489), StorageDead(_478), StorageDead(_475)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:13: 3099:14 (#2096), scope: scope[33] }, kind: goto -> bb271 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_474), StorageDead(_473), StorageDead(_472), _459 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:13: 3099:14 (#2096), scope: scope[33] }, kind: goto -> bb271 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_471), StorageDead(_468)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:13: 3135:14 (#2090), scope: scope[30] }, kind: goto -> bb273 }), is_cleanup: false }, BasicBlockData { statements: [_459 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:13: 3135:14 (#2090), scope: scope[30] }, kind: goto -> bb273 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_467)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#2090), scope: scope[30] }, kind: goto -> bb275 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_465), StorageDead(_463), StorageDead(_462), StorageDead(_461), _459 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#2090), scope: scope[30] }, kind: goto -> bb275 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_460), StorageDead(_459), _389 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#2038), scope: scope[30] }, kind: goto -> bb276 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_411), StorageDead(_390), StorageDead(_389), _594 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:163:13: 163:14 (#0), scope: scope[11] }, kind: drop(_388) -> [return: bb277, unwind: bb343] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_388)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:163:13: 163:14 (#0), scope: scope[11] }, kind: goto -> bb278 }), is_cleanup: false }, BasicBlockData { statements: [_568 = const false, _668 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _583 = discriminant((((*_668) as variant#4).3: std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>)), StorageDead(_176), StorageDead(_173), _565 = const false, _566 = const false, _0 = std::task::Poll::<()>::Ready(move _594), _660 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), discriminant((*_660)) = 1], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:6: 165:6 (#0), scope: scope[0] }, kind: return }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_541), StorageDead(_540), StorageDead(_537)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[37] }, kind: goto -> bb280 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_534), StorageDead(_531), StorageDead(_528), StorageDead(_526), StorageDead(_525), StorageDead(_518), StorageDead(_517)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[37] }, kind: goto -> bb281 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_514), StorageDead(_508), StorageDead(_501)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb282 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_498), StorageDead(_497), StorageDead(_495), StorageDead(_494), StorageDead(_542)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb284 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_538), StorageDead(_537), StorageDead(_534), StorageDead(_531), StorageDead(_528), StorageDead(_526), StorageDead(_525), StorageDead(_518), StorageDead(_517), StorageDead(_514), StorageDead(_508), StorageDead(_501), StorageDead(_498), StorageDead(_497), StorageDead(_495), StorageDead(_494)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb284 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_539), StorageDead(_536), StorageDead(_535), StorageDead(_532), StorageDead(_530), StorageDead(_529), StorageDead(_527)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb286 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_523), StorageDead(_520), StorageDead(_518), StorageDead(_517), StorageDead(_514), StorageDead(_508), StorageDead(_501), StorageDead(_498), StorageDead(_497), StorageDead(_495), StorageDead(_494)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb286 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_524)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb288 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_521), StorageDead(_520), StorageDead(_518), StorageDead(_517), StorageDead(_514), StorageDead(_508), StorageDead(_501), StorageDead(_498), StorageDead(_497), StorageDead(_495), StorageDead(_494)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb288 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_522), StorageDead(_519), StorageDead(_516), StorageDead(_515)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb291 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_512)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[37] }, kind: goto -> bb290 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_510), StorageDead(_508), StorageDead(_501), StorageDead(_498), StorageDead(_497), StorageDead(_495), StorageDead(_494)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb291 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_513), StorageDead(_511), StorageDead(_509)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb295 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_506)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb293 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_504)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb294 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_502), StorageDead(_507), StorageDead(_505), StorageDead(_503), StorageDead(_501), StorageDead(_498), StorageDead(_497), StorageDead(_495), StorageDead(_494)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb295 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_500), StorageDead(_499)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb297 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_493), StorageDead(_492), StorageDead(_491)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb297 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_490)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb298 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_489)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[35] }, kind: goto -> bb305 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_488)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[34] }, kind: goto -> bb300 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_486), StorageDead(_481)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[34] }, kind: goto -> bb301 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_479), StorageDead(_487)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[34] }, kind: goto -> bb304 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_485)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[34] }, kind: goto -> bb303 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_483), StorageDead(_481), StorageDead(_479)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[34] }, kind: goto -> bb304 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_484), StorageDead(_482), StorageDead(_480)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[34] }, kind: goto -> bb305 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_478)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[34] }, kind: goto -> bb307 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_476), StorageDead(_477)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[33] }, kind: goto -> bb307 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_475)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[33] }, kind: goto -> bb309 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_474), StorageDead(_473), StorageDead(_472)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[33] }, kind: goto -> bb309 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_471), StorageDead(_468)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb310 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_467)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb312 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_465), StorageDead(_463), StorageDead(_462), StorageDead(_461)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb312 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_460), StorageDead(_459)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb330 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_457), StorageDead(_456), StorageDead(_453)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[32] }, kind: goto -> bb314 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_450), StorageDead(_447), StorageDead(_444), StorageDead(_442), StorageDead(_441), StorageDead(_434), StorageDead(_433)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[32] }, kind: goto -> bb315 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_430), StorageDead(_424), StorageDead(_417)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb316 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_416), StorageDead(_415), StorageDead(_413), StorageDead(_458)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb318 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_454), StorageDead(_453), StorageDead(_450), StorageDead(_447), StorageDead(_444), StorageDead(_442), StorageDead(_441), StorageDead(_434), StorageDead(_433), StorageDead(_430), StorageDead(_424), StorageDead(_417), StorageDead(_416), StorageDead(_415), StorageDead(_413)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb318 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_455), StorageDead(_452), StorageDead(_451), StorageDead(_448), StorageDead(_446), StorageDead(_445), StorageDead(_443)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb320 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_439), StorageDead(_436), StorageDead(_434), StorageDead(_433), StorageDead(_430), StorageDead(_424), StorageDead(_417), StorageDead(_416), StorageDead(_415), StorageDead(_413)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb320 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_440)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb322 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_437), StorageDead(_436), StorageDead(_434), StorageDead(_433), StorageDead(_430), StorageDead(_424), StorageDead(_417), StorageDead(_416), StorageDead(_415), StorageDead(_413)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb322 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_438), StorageDead(_435), StorageDead(_432), StorageDead(_431)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb325 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_428)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[32] }, kind: goto -> bb324 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_426), StorageDead(_424), StorageDead(_417), StorageDead(_416), StorageDead(_415), StorageDead(_413)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb325 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_429), StorageDead(_427), StorageDead(_425)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb329 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_422)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb327 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_420)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb328 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_418), StorageDead(_423), StorageDead(_421), StorageDead(_419), StorageDead(_417), StorageDead(_416), StorageDead(_415), StorageDead(_413)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb329 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_412)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb330 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_411)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb342 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_410)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[31] }, kind: goto -> bb333 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_408)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[31] }, kind: goto -> bb333 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_409), StorageDead(_407), StorageDead(_406)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[31] }, kind: goto -> bb335 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_405)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[31] }, kind: goto -> bb335 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_404)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[31] }, kind: goto -> bb337 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_402), StorageDead(_403)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[29] }, kind: goto -> bb337 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_401)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[29] }, kind: goto -> bb339 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_400), StorageDead(_399), StorageDead(_397)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[29] }, kind: goto -> bb339 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_396)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[29] }, kind: goto -> bb341 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_394), StorageDead(_392)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[29] }, kind: goto -> bb341 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_391)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[29] }, kind: goto -> bb342 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_390), StorageDead(_389)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:163:13: 163:14 (#0), scope: scope[11] }, kind: drop(_388) -> [return: bb343, unwind terminate(cleanup)] }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_388)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[11] }, kind: goto -> bb424 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_386), StorageDead(_385), StorageDead(_382)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[28] }, kind: goto -> bb345 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_379), StorageDead(_376), StorageDead(_373), StorageDead(_371), StorageDead(_370), StorageDead(_363), StorageDead(_362)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[28] }, kind: goto -> bb346 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_359), StorageDead(_353), StorageDead(_346)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb347 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_343), StorageDead(_342), StorageDead(_340), StorageDead(_339), StorageDead(_387)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb349 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_383), StorageDead(_382), StorageDead(_379), StorageDead(_376), StorageDead(_373), StorageDead(_371), StorageDead(_370), StorageDead(_363), StorageDead(_362), StorageDead(_359), StorageDead(_353), StorageDead(_346), StorageDead(_343), StorageDead(_342), StorageDead(_340), StorageDead(_339)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb349 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_384), StorageDead(_381), StorageDead(_380), StorageDead(_377), StorageDead(_375), StorageDead(_374), StorageDead(_372)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb351 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_368), StorageDead(_365), StorageDead(_363), StorageDead(_362), StorageDead(_359), StorageDead(_353), StorageDead(_346), StorageDead(_343), StorageDead(_342), StorageDead(_340), StorageDead(_339)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb351 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_369)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb353 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_366), StorageDead(_365), StorageDead(_363), StorageDead(_362), StorageDead(_359), StorageDead(_353), StorageDead(_346), StorageDead(_343), StorageDead(_342), StorageDead(_340), StorageDead(_339)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb353 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_367), StorageDead(_364), StorageDead(_361), StorageDead(_360)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb356 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_357)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[28] }, kind: goto -> bb355 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_355), StorageDead(_353), StorageDead(_346), StorageDead(_343), StorageDead(_342), StorageDead(_340), StorageDead(_339)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb356 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_358), StorageDead(_356), StorageDead(_354)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb360 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_351)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb358 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_349)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb359 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_347), StorageDead(_352), StorageDead(_350), StorageDead(_348), StorageDead(_346), StorageDead(_343), StorageDead(_342), StorageDead(_340), StorageDead(_339)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb360 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_345), StorageDead(_344)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb362 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_338), StorageDead(_337), StorageDead(_336)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb362 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_335)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb363 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_334)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[26] }, kind: goto -> bb370 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_333)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[25] }, kind: goto -> bb365 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_331), StorageDead(_326)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[25] }, kind: goto -> bb366 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_324), StorageDead(_332)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[25] }, kind: goto -> bb369 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_330)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[25] }, kind: goto -> bb368 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_328), StorageDead(_326), StorageDead(_324)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[25] }, kind: goto -> bb369 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_329), StorageDead(_327), StorageDead(_325)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[25] }, kind: goto -> bb370 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_323)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[25] }, kind: goto -> bb372 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_321), StorageDead(_322)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[24] }, kind: goto -> bb372 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_320)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[24] }, kind: goto -> bb374 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_319), StorageDead(_318), StorageDead(_317)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[24] }, kind: goto -> bb374 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_316), StorageDead(_313)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb375 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_312)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb377 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_310), StorageDead(_308), StorageDead(_307), StorageDead(_306)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb377 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_305), StorageDead(_304)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb395 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_302), StorageDead(_301), StorageDead(_298)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[23] }, kind: goto -> bb379 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_295), StorageDead(_292), StorageDead(_289), StorageDead(_287), StorageDead(_286), StorageDead(_279), StorageDead(_278)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[23] }, kind: goto -> bb380 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_275), StorageDead(_269), StorageDead(_262)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb381 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_261), StorageDead(_260), StorageDead(_258), StorageDead(_303)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb383 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_299), StorageDead(_298), StorageDead(_295), StorageDead(_292), StorageDead(_289), StorageDead(_287), StorageDead(_286), StorageDead(_279), StorageDead(_278), StorageDead(_275), StorageDead(_269), StorageDead(_262), StorageDead(_261), StorageDead(_260), StorageDead(_258)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb383 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_300), StorageDead(_297), StorageDead(_296), StorageDead(_293), StorageDead(_291), StorageDead(_290), StorageDead(_288)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb385 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_284), StorageDead(_281), StorageDead(_279), StorageDead(_278), StorageDead(_275), StorageDead(_269), StorageDead(_262), StorageDead(_261), StorageDead(_260), StorageDead(_258)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb385 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_285)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb387 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_282), StorageDead(_281), StorageDead(_279), StorageDead(_278), StorageDead(_275), StorageDead(_269), StorageDead(_262), StorageDead(_261), StorageDead(_260), StorageDead(_258)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb387 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_283), StorageDead(_280), StorageDead(_277), StorageDead(_276)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb390 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_273)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[23] }, kind: goto -> bb389 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_271), StorageDead(_269), StorageDead(_262), StorageDead(_261), StorageDead(_260), StorageDead(_258)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb390 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_274), StorageDead(_272), StorageDead(_270)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb394 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_267)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb392 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_265)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb393 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_263), StorageDead(_268), StorageDead(_266), StorageDead(_264), StorageDead(_262), StorageDead(_261), StorageDead(_260), StorageDead(_258)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb394 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_257)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb395 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_256)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb407 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_255)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[22] }, kind: goto -> bb398 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_253)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[22] }, kind: goto -> bb398 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_254), StorageDead(_252), StorageDead(_251)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[22] }, kind: goto -> bb400 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_250)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[22] }, kind: goto -> bb400 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_249)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[22] }, kind: goto -> bb402 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_247), StorageDead(_248)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb402 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_246)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb404 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_245), StorageDead(_244), StorageDead(_242)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb404 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_241)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb406 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_239), StorageDead(_237)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb406 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_236)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb407 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_235), StorageDead(_234)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:155:21: 155:22 (#0), scope: scope[17] }, kind: drop(_233) -> [return: bb408, unwind terminate(cleanup)] }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_233), _589 = discriminant(_212)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[16] }, kind: goto -> bb415 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_224), StorageDead(_221), StorageDead(_225)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[19] }, kind: goto -> bb411 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_222), StorageDead(_221)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[19] }, kind: goto -> bb411 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_223), StorageDead(_220), StorageDead(_219), _661 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:89: 150:90 (#2047), scope: scope[18] }, kind: drop((((*_661) as variant#4).6: {async fn body of ingestor::ingestor::Ingestor::push_block_and_receipts()})) -> [return: bb415, unwind terminate(cleanup)] }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_217)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb413 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_216), StorageDead(_215)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb414 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_214)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb415 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_213), _564 = const false, StorageDead(_212), StorageDead(_211), _669 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _590 = discriminant((((*_669) as variant#4).5: std::option::Option<common::types::BlockAndReceiptsPayload>))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[16] }, kind: goto -> bb417 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_207)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[16] }, kind: goto -> bb417 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_208), StorageDead(_205), _662 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[15] }, kind: drop((((*_662) as variant#4).4: std::vec::IntoIter<common::types::BlockAndReceiptsPayload>)) -> [return: bb419, unwind terminate(cleanup)] }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_203)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[15] }, kind: goto -> bb419 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_202)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[15] }, kind: goto -> bb422 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_201), StorageDead(_200), StorageDead(_199), StorageDead(_198)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[15] }, kind: goto -> bb422 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_197)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[14] }, kind: goto -> bb422 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_196), _670 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:157:13: 157:14 (#0), scope: scope[11] }, kind: switchInt(copy (((*_670) as variant#4).7: bool)) -> [0: bb423, otherwise: bb511] }), is_cleanup: true }, BasicBlockData { statements: [_663 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), (((*_663) as variant#4).7: bool) = const false, StorageDead(_195)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[11] }, kind: goto -> bb424 }), is_cleanup: true }, BasicBlockData { statements: [_568 = const false, _671 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _591 = discriminant((((*_671) as variant#4).3: std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb434 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_186), StorageDead(_183), StorageDead(_187)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[12] }, kind: goto -> bb427 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_184), StorageDead(_183)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[12] }, kind: goto -> bb427 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_185), StorageDead(_182), StorageDead(_181), _664 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#2036), scope: scope[11] }, kind: drop((((*_664) as variant#3).3: std::pin::Pin<std::boxed::Box<dyn std::future::Future<Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>> + std::marker::Send>>)) -> [return: bb428, unwind terminate(cleanup)] }), is_cleanup: true }, BasicBlockData { statements: [_568 = const false], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb434 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_178)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[11] }, kind: goto -> bb431 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_177)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[11] }, kind: goto -> bb431 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_175)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[11] }, kind: goto -> bb432 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_174)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: switchInt(copy _568) -> [0: bb433, otherwise: bb512] }), is_cleanup: true }, BasicBlockData { statements: [_568 = const false], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb434 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_176), StorageDead(_173), _565 = const false, _566 = const false], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb513 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_169), StorageDead(_168), StorageDead(_165)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[10] }, kind: goto -> bb436 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_162), StorageDead(_159), StorageDead(_156), StorageDead(_154), StorageDead(_153), StorageDead(_146), StorageDead(_145)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[10] }, kind: goto -> bb437 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_142), StorageDead(_136), StorageDead(_129)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb438 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_126), StorageDead(_125), StorageDead(_123), StorageDead(_122), StorageDead(_170)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb440 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_166), StorageDead(_165), StorageDead(_162), StorageDead(_159), StorageDead(_156), StorageDead(_154), StorageDead(_153), StorageDead(_146), StorageDead(_145), StorageDead(_142), StorageDead(_136), StorageDead(_129), StorageDead(_126), StorageDead(_125), StorageDead(_123), StorageDead(_122)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb440 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_167), StorageDead(_164), StorageDead(_163), StorageDead(_160), StorageDead(_158), StorageDead(_157), StorageDead(_155)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb442 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_151), StorageDead(_148), StorageDead(_146), StorageDead(_145), StorageDead(_142), StorageDead(_136), StorageDead(_129), StorageDead(_126), StorageDead(_125), StorageDead(_123), StorageDead(_122)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb442 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_152)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb444 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_149), StorageDead(_148), StorageDead(_146), StorageDead(_145), StorageDead(_142), StorageDead(_136), StorageDead(_129), StorageDead(_126), StorageDead(_125), StorageDead(_123), StorageDead(_122)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb444 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_150), StorageDead(_147), StorageDead(_144), StorageDead(_143)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb447 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_140)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[10] }, kind: goto -> bb446 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_138), StorageDead(_136), StorageDead(_129), StorageDead(_126), StorageDead(_125), StorageDead(_123), StorageDead(_122)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb447 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_141), StorageDead(_139), StorageDead(_137)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb451 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_134)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb449 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_132)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb450 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_130), StorageDead(_135), StorageDead(_133), StorageDead(_131), StorageDead(_129), StorageDead(_126), StorageDead(_125), StorageDead(_123), StorageDead(_122)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb451 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_128), StorageDead(_127)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb453 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_121), StorageDead(_120), StorageDead(_119)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb453 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_118)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb454 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_117)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[8] }, kind: goto -> bb461 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_116)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[7] }, kind: goto -> bb456 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_114), StorageDead(_109)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[7] }, kind: goto -> bb457 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_107), StorageDead(_115)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[7] }, kind: goto -> bb460 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_113)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[7] }, kind: goto -> bb459 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_111), StorageDead(_109), StorageDead(_107)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[7] }, kind: goto -> bb460 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_112), StorageDead(_110), StorageDead(_108)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[7] }, kind: goto -> bb461 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_106)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[7] }, kind: goto -> bb463 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_104), StorageDead(_105)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[6] }, kind: goto -> bb463 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_103)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[6] }, kind: goto -> bb465 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_102), StorageDead(_101), StorageDead(_100)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[6] }, kind: goto -> bb465 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_99), StorageDead(_96)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb466 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_95)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb468 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_93), StorageDead(_91), StorageDead(_90), StorageDead(_89)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb468 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_88), StorageDead(_87)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb486 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_85), StorageDead(_84), StorageDead(_81)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[5] }, kind: goto -> bb470 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_78), StorageDead(_75), StorageDead(_72), StorageDead(_70), StorageDead(_69), StorageDead(_62), StorageDead(_61)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[5] }, kind: goto -> bb471 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_58), StorageDead(_52), StorageDead(_45)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb472 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_44), StorageDead(_43), StorageDead(_41), StorageDead(_86)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb474 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_82), StorageDead(_81), StorageDead(_78), StorageDead(_75), StorageDead(_72), StorageDead(_70), StorageDead(_69), StorageDead(_62), StorageDead(_61), StorageDead(_58), StorageDead(_52), StorageDead(_45), StorageDead(_44), StorageDead(_43), StorageDead(_41)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb474 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_83), StorageDead(_80), StorageDead(_79), StorageDead(_76), StorageDead(_74), StorageDead(_73), StorageDead(_71)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb476 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_67), StorageDead(_64), StorageDead(_62), StorageDead(_61), StorageDead(_58), StorageDead(_52), StorageDead(_45), StorageDead(_44), StorageDead(_43), StorageDead(_41)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb476 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_68)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb478 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_65), StorageDead(_64), StorageDead(_62), StorageDead(_61), StorageDead(_58), StorageDead(_52), StorageDead(_45), StorageDead(_44), StorageDead(_43), StorageDead(_41)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb478 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_66), StorageDead(_63), StorageDead(_60), StorageDead(_59)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb481 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_56)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[5] }, kind: goto -> bb480 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_54), StorageDead(_52), StorageDead(_45), StorageDead(_44), StorageDead(_43), StorageDead(_41)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb481 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_57), StorageDead(_55), StorageDead(_53)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb485 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_50)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb483 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_48)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb484 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_46), StorageDead(_51), StorageDead(_49), StorageDead(_47), StorageDead(_45), StorageDead(_44), StorageDead(_43), StorageDead(_41)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb485 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_40)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb486 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_39)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb498 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_38)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[4] }, kind: goto -> bb489 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_36)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[4] }, kind: goto -> bb489 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_37), StorageDead(_35), StorageDead(_34)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[4] }, kind: goto -> bb491 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_33)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[4] }, kind: goto -> bb491 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_32)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[4] }, kind: goto -> bb493 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_30), StorageDead(_31)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[2] }, kind: goto -> bb493 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_29)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[2] }, kind: goto -> bb495 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_28), StorageDead(_27), StorageDead(_25)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[2] }, kind: goto -> bb495 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_24)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[2] }, kind: goto -> bb497 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_22), StorageDead(_20)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[2] }, kind: goto -> bb497 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_19)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[2] }, kind: goto -> bb498 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_18), StorageDead(_17)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[2] }, kind: goto -> bb499 }), is_cleanup: true }, BasicBlockData { statements: [_665 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: drop((((*_665) as variant#4).1: std::vec::Vec<u64>)) -> [return: bb506, unwind terminate(cleanup)] }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_15), StorageDead(_14)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb501 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_13)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb504 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_11), StorageDead(_10)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb503 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_9)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb504 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_8), StorageDead(_7), StorageDead(_6)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb505 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_5)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb506 }), is_cleanup: true }, BasicBlockData { statements: [_568 = const false], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb513 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_213), _564 = const false, StorageDead(_212), StorageDead(_211), _667 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _581 = discriminant((((*_667) as variant#4).5: std::option::Option<common::types::BlockAndReceiptsPayload>)), StorageDead(_208), StorageDead(_205), _180 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:17: 156:18 (#2046), scope: scope[16] }, kind: goto -> bb102 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[16] }, kind: switchInt(copy _564) -> [0: bb507, otherwise: bb509] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[16] }, kind: drop(((_212 as Err).0: eyre::Report)) -> [return: bb507, unwind: bb415] }), is_cleanup: false }, BasicBlockData { statements: [_579 = discriminant(_212)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[16] }, kind: switchInt(move _579) -> [1: bb508, otherwise: bb507] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:157:13: 157:14 (#0), scope: scope[11] }, kind: drop(_195) -> [return: bb423, unwind terminate(cleanup)] }), is_cleanup: true }, BasicBlockData { statements: [_672 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: drop((((*_672) as variant#4).1: std::vec::Vec<u64>)) -> [return: bb433, unwind terminate(cleanup)] }), is_cleanup: true }, BasicBlockData { statements: [_673 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), discriminant((*_673)) = 2], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: resume }), is_cleanup: true }, BasicBlockData { statements: [StorageLive(_173), StorageLive(_176), StorageLive(_192), StorageLive(_193), _192 = move _2, StorageDead(_193), _595 = move _192, StorageDead(_192), _180 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[12] }, kind: goto -> bb90 }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_173), StorageLive(_176), StorageLive(_195), StorageLive(_196), StorageLive(_202), StorageLive(_205), StorageLive(_208), StorageLive(_211), StorageLive(_212), StorageLive(_213), StorageLive(_230), StorageLive(_231), _230 = move _2, StorageDead(_231), _595 = move _230, StorageDead(_230), _180 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[19] }, kind: goto -> bb109 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: assert(const false, "`async fn` resumed after panicking") -> [success: bb516, unwind continue] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: assert(const false, "`async fn` resumed after completion") -> [success: bb517, unwind continue] }), is_cleanup: false }], cache: Cache { predecessors: OnceLock(<uninit>), switch_sources: OnceLock(<uninit>), reverse_postorder: OnceLock(<uninit>), dominators: OnceLock(<uninit>) } }, phase: Runtime(Optimized), pass_count: 1, source: MirSource { instance: Item(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0})), promoted: None }, source_scopes: [SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), parent_scope: None, inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#2108), parent_scope: Some(scope[0]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:9: 165:6 (#0), parent_scope: Some(scope[1]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:9: 892:6 (#2003), parent_scope: Some(scope[2]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:13: 870:10 (#2003), parent_scope: Some(scope[2]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#2010), parent_scope: Some(scope[3]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:13: 3100:10 (#2024), parent_scope: Some(scope[3]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:17: 3099:14 (#2024), parent_scope: Some(scope[6]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:17: 3099:14 (#2024), parent_scope: Some(scope[7]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:17: 3099:14 (#2024), parent_scope: Some(scope[8]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#2027), parent_scope: Some(scope[9]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:140:9: 165:6 (#0), parent_scope: Some(scope[2]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), parent_scope: Some(scope[11]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#2037), parent_scope: Some(scope[12]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:142:13: 157:14 (#0), parent_scope: Some(scope[11]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:143:17: 157:14 (#0), parent_scope: Some(scope[14]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:17: 156:18 (#2046), parent_scope: Some(scope[15]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:37: 156:18 (#0), parent_scope: Some(scope[16]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:91: 155:22 (#0), parent_scope: Some(scope[17]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), parent_scope: Some(scope[18]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:90 (#2048), parent_scope: Some(scope[19]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:9: 892:6 (#2049), parent_scope: Some(scope[18]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:13: 870:10 (#2049), parent_scope: Some(scope[18]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#2056), parent_scope: Some(scope[21]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:13: 3100:10 (#2070), parent_scope: Some(scope[21]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:17: 3099:14 (#2070), parent_scope: Some(scope[24]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:17: 3099:14 (#2070), parent_scope: Some(scope[25]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:17: 3099:14 (#2070), parent_scope: Some(scope[26]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#2073), parent_scope: Some(scope[27]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:158:13: 163:14 (#0), parent_scope: Some(scope[11]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:9: 892:6 (#2038), parent_scope: Some(scope[29]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:13: 870:10 (#2038), parent_scope: Some(scope[29]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#2082), parent_scope: Some(scope[30]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:13: 3100:10 (#2096), parent_scope: Some(scope[30]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:17: 3099:14 (#2096), parent_scope: Some(scope[33]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:17: 3099:14 (#2096), parent_scope: Some(scope[34]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:17: 3099:14 (#2096), parent_scope: Some(scope[35]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#2099), parent_scope: Some(scope[36]), inlined: None, inlined_parent_scope: None, local_data: Clear }], coroutine: Some(CoroutineInfo { yield_ty: None, resume_ty: None, coroutine_drop: Some(Body { basic_blocks: BasicBlocks { basic_blocks: [BasicBlockData { statements: [_596 = discriminant((*_1))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: switchInt(move _596) -> [0: bb44, 3: bb47, 4: bb48, otherwise: bb49] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_231), StorageDead(_230)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:89: 150:90 (#2047), scope: scope[18] }, kind: drop((((*_1) as variant#4).6: {async fn body of ingestor::ingestor::Ingestor::push_block_and_receipts()})) -> [return: bb2, unwind: bb17] }), is_cleanup: false }, BasicBlockData { statements: [nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[16] }, kind: goto -> bb3 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_213), _564 = const false, StorageDead(_212)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[16] }, kind: goto -> bb4 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_211)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[16] }, kind: goto -> bb32 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_208), nop, StorageDead(_205)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[15] }, kind: drop((((*_1) as variant#4).4: std::vec::IntoIter<common::types::BlockAndReceiptsPayload>)) -> [return: bb6, unwind: bb21] }), is_cleanup: false }, BasicBlockData { statements: [nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[15] }, kind: goto -> bb7 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_202), StorageDead(_196)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:157:13: 157:14 (#0), scope: scope[11] }, kind: goto -> bb8 }), is_cleanup: false }, BasicBlockData { statements: [(((*_1) as variant#4).7: bool) = const false, StorageDead(_195), nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb9 }), is_cleanup: false }, BasicBlockData { statements: [_568 = const false, nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb36 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_193), StorageDead(_192)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#2036), scope: scope[11] }, kind: drop((((*_1) as variant#3).3: std::pin::Pin<std::boxed::Box<dyn std::future::Future<Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>> + std::marker::Send>>)) -> [return: bb11, unwind: bb25] }), is_cleanup: false }, BasicBlockData { statements: [nop, nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb12 }), is_cleanup: false }, BasicBlockData { statements: [_568 = const false, nop], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb13 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb14 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_176), StorageDead(_173), _565 = const false, _566 = const false, nop, nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#2108), scope: scope[0] }, kind: goto -> bb45 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: return }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: resume }), is_cleanup: true }, BasicBlockData { statements: [nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[16] }, kind: goto -> bb18 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_213), _564 = const false, StorageDead(_212)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[16] }, kind: goto -> bb19 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_211)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[16] }, kind: goto -> bb39 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_208), nop, StorageDead(_205)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[15] }, kind: drop((((*_1) as variant#4).4: std::vec::IntoIter<common::types::BlockAndReceiptsPayload>)) -> [return: bb21, unwind terminate(cleanup)] }), is_cleanup: true }, BasicBlockData { statements: [nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[15] }, kind: goto -> bb22 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_202), StorageDead(_196)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:157:13: 157:14 (#0), scope: scope[11] }, kind: goto -> bb23 }), is_cleanup: true }, BasicBlockData { statements: [(((*_1) as variant#4).7: bool) = const false, StorageDead(_195), nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb24 }), is_cleanup: true }, BasicBlockData { statements: [_568 = const false, nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb42 }), is_cleanup: true }, BasicBlockData { statements: [nop, nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb26 }), is_cleanup: true }, BasicBlockData { statements: [_568 = const false, nop], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb27 }), is_cleanup: true }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb28 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_176), StorageDead(_173), _565 = const false, _566 = const false, nop, nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#2108), scope: scope[0] }, kind: goto -> bb16 }), is_cleanup: true }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[16] }, kind: goto -> bb5 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[16] }, kind: goto -> bb29 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[16] }, kind: goto -> bb29 }), is_cleanup: false }, BasicBlockData { statements: [_585 = discriminant((((*_1) as variant#4).5: std::option::Option<common::types::BlockAndReceiptsPayload>))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[16] }, kind: switchInt(move _585) -> [1: bb30, otherwise: bb31] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb13 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb33 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb33 }), is_cleanup: false }, BasicBlockData { statements: [_587 = discriminant((((*_1) as variant#4).3: std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: switchInt(move _587) -> [0: bb34, otherwise: bb35] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[16] }, kind: goto -> bb20 }), is_cleanup: true }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[16] }, kind: goto -> bb20 }), is_cleanup: true }, BasicBlockData { statements: [_592 = discriminant((((*_1) as variant#4).5: std::option::Option<common::types::BlockAndReceiptsPayload>))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[16] }, kind: switchInt(move _592) -> [1: bb37, otherwise: bb38] }), is_cleanup: true }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb27 }), is_cleanup: true }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb27 }), is_cleanup: true }, BasicBlockData { statements: [_593 = discriminant((((*_1) as variant#4).3: std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: switchInt(move _593) -> [0: bb40, otherwise: bb41] }), is_cleanup: true }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: return }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: goto -> bb46 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#2108), scope: scope[0] }, kind: goto -> bb15 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: goto -> bb43 }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_173), StorageLive(_176), StorageLive(_192), StorageLive(_193)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: goto -> bb10 }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_173), StorageLive(_176), StorageLive(_195), StorageLive(_196), StorageLive(_202), StorageLive(_205), StorageLive(_208), StorageLive(_211), StorageLive(_212), StorageLive(_213), StorageLive(_230), StorageLive(_231)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: goto -> bb1 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: return }), is_cleanup: false }], cache: Cache { predecessors: OnceLock(<uninit>), switch_sources: OnceLock(<uninit>), reverse_postorder: OnceLock(<uninit>), dominators: OnceLock(<uninit>) } }, phase: Analysis(PostCleanup), pass_count: 8, source: MirSource { instance: DropGlue(DefId(2:2837 ~ core[49ae]::ptr::drop_in_place), Some(Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]))), promoted: None }, source_scopes: [SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), parent_scope: None, inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#2108), parent_scope: Some(scope[0]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:9: 165:6 (#0), parent_scope: Some(scope[1]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:9: 892:6 (#2003), parent_scope: Some(scope[2]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:13: 870:10 (#2003), parent_scope: Some(scope[2]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#2010), parent_scope: Some(scope[3]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:13: 3100:10 (#2024), parent_scope: Some(scope[3]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:17: 3099:14 (#2024), parent_scope: Some(scope[6]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:17: 3099:14 (#2024), parent_scope: Some(scope[7]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:17: 3099:14 (#2024), parent_scope: Some(scope[8]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#2027), parent_scope: Some(scope[9]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:140:9: 165:6 (#0), parent_scope: Some(scope[2]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), parent_scope: Some(scope[11]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#2037), parent_scope: Some(scope[12]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:142:13: 157:14 (#0), parent_scope: Some(scope[11]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:143:17: 157:14 (#0), parent_scope: Some(scope[14]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:17: 156:18 (#2046), parent_scope: Some(scope[15]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:37: 156:18 (#0), parent_scope: Some(scope[16]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:91: 155:22 (#0), parent_scope: Some(scope[17]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), parent_scope: Some(scope[18]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:90 (#2048), parent_scope: Some(scope[19]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:9: 892:6 (#2049), parent_scope: Some(scope[18]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:13: 870:10 (#2049), parent_scope: Some(scope[18]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#2056), parent_scope: Some(scope[21]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:13: 3100:10 (#2070), parent_scope: Some(scope[21]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:17: 3099:14 (#2070), parent_scope: Some(scope[24]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:17: 3099:14 (#2070), parent_scope: Some(scope[25]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:17: 3099:14 (#2070), parent_scope: Some(scope[26]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#2073), parent_scope: Some(scope[27]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:158:13: 163:14 (#0), parent_scope: Some(scope[11]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:9: 892:6 (#2038), parent_scope: Some(scope[29]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:13: 870:10 (#2038), parent_scope: Some(scope[29]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#2082), parent_scope: Some(scope[30]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:13: 3100:10 (#2096), parent_scope: Some(scope[30]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:17: 3099:14 (#2096), parent_scope: Some(scope[33]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:17: 3099:14 (#2096), parent_scope: Some(scope[34]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:17: 3099:14 (#2096), parent_scope: Some(scope[35]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#2099), parent_scope: Some(scope[36]), inlined: None, inlined_parent_scope: None, local_data: Clear }], coroutine: None, local_decls: [LocalDecl { mutability: Mut, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: *mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:35: 131:44 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:13: 132:26 (#0), scope: scope[1] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::ops::Range<u64>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:29: 136:15 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:30: 132:55 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:133:13: 136:14 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:17: 134:76 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:17: 134:72 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:21: 134:44 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:46: 134:71 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (u64, bool), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:17: 134:76 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:135:17: 135:68 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:135:17: 135:42 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:135:45: 135:68 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (u64, bool), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:135:17: 135:68 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:13: 867:20 (#2003), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#2007), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#2009), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#2009), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#2007), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#2007), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#2007), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#2009), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#2009), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#2007), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#2007), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:17: 868:25 (#2003), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:22 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:98: 869:106 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:12: 871:19 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:486 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#0}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: Closure(DefId(278:486 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#0}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (tracing::field::ValueSet<'{erased}>,), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#2010), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#2010), scope: scope[3] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2012), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2012), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#2012), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#2015), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#2015), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2010), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2010), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2010), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2010), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2010), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2010), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#2015), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2015), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2015), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2015), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2015), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2016), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2016), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:33: 138:37 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:48: 138:61 (#2016), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:48: 138:61 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:41: 138:45 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:63: 138:73 (#2016), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:63: 138:73 (#2016), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#2018), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#2018), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#2022), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#2022), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#2009), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#2022), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2018), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2018), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#2018), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:17: 3088:22 (#2024), scope: scope[3] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#2009), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#2025), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:21 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2024), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2024), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:21: 3090:25 (#2024), scope: scope[6] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:21: 3091:29 (#2024), scope: scope[7] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2024), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3092:28: 3092:33 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2024), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:33 (#2024), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:21: 3095:27 (#2024), scope: scope[8] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:26 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#2024), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:60: 3097:64 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:74: 3097:82 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#2027), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#2027), scope: scope[9] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2029), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2029), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#2029), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#2032), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#2032), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2027), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2027), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2027), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2027), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2027), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2027), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#2032), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2032), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2032), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2032), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2032), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2033), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2033), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2033), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2033), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:33: 138:37 (#2033), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:48: 138:61 (#2033), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:48: 138:61 (#2033), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:41: 138:45 (#2033), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:63: 138:73 (#2033), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:63: 138:73 (#2033), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tokio::time::Instant, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:140:13: 140:23 (#0), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload, std::alloc::Global>, ingestor::eth_client::RPCClientError>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:71 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(ingestor::eth_client::RPCClient), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:26 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(ingestor::eth_client::RPCClient), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:71 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::sync::Arc<dyn [Binder { value: Trait(ingestor::eth_client::RPCClient), bound_vars: [] }] + '{erased}, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:26 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:57: 141:70 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#2037), scope: scope[11] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::task::Poll<std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload, std::alloc::Global>, ingestor::eth_client::RPCClientError>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<&'{erased} mut std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#2037), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#2037), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload, std::alloc::Global>, ingestor::eth_client::RPCClientError>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#2037), scope: scope[12] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: !, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#2037), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:142:13: 142:23 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::vec::Vec<common::types::BlockAndReceiptsPayload, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:142:16: 142:22 (#0), scope: scope[11] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::time::Duration, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:143:21: 143:29 (#0), scope: scope[14] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tokio::time::Instant, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:143:32: 143:42 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:144:17: 148:18 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} ingestor::metrics::IngestorMetrics, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:144:17: 144:29 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:145:21: 145:31 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::time::Duration, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:147:21: 147:29 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::vec::IntoIter<common::types::BlockAndReceiptsPayload, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#2045), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::vec::Vec<common::types::BlockAndReceiptsPayload, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::vec::IntoIter<common::types::BlockAndReceiptsPayload, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#2045), scope: scope[15] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#2045), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<common::types::BlockAndReceiptsPayload>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#2045), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::vec::IntoIter<common::types::BlockAndReceiptsPayload, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#2045), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::vec::IntoIter<common::types::BlockAndReceiptsPayload, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#2045), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:17: 156:18 (#2046), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: !, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:17: 156:18 (#2046), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: common::types::BlockAndReceiptsPayload, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:21: 149:26 (#0), scope: scope[16] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::result::Result<(), eyre::Report>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:90 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: Coroutine(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, std::sync::Arc<common::types::BlockAndReceiptsPayload, std::alloc::Global>)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: Coroutine(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, std::sync::Arc<common::types::BlockAndReceiptsPayload, std::alloc::Global>)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:84 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:43 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::sync::Arc<common::types::BlockAndReceiptsPayload, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:68: 150:83 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: common::types::BlockAndReceiptsPayload, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:77: 150:82 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: Coroutine(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, std::sync::Arc<common::types::BlockAndReceiptsPayload, std::alloc::Global>)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:90 (#2048), scope: scope[18] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::task::Poll<std::result::Result<(), eyre::Report>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<&'{erased} mut Coroutine(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, std::sync::Arc<common::types::BlockAndReceiptsPayload, std::alloc::Global>)])>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, std::sync::Arc<common::types::BlockAndReceiptsPayload, std::alloc::Global>)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, std::sync::Arc<common::types::BlockAndReceiptsPayload, std::alloc::Global>)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:90 (#2048), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:90 (#2048), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::result::Result<(), eyre::Report>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:90 (#2048), scope: scope[19] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: !, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:90 (#2048), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:28: 150:36 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: eyre::Report, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:32: 150:35 (#0), scope: scope[18] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:13: 867:20 (#2049), scope: scope[18] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#2053), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2055), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2055), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#2053), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#2053), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#2053), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2055), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2055), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#2053), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#2053), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:17: 868:25 (#2049), scope: scope[18] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:22 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:98: 869:106 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:12: 871:19 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:500 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#1}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: Closure(DefId(278:500 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#1}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (tracing::field::ValueSet<'{erased}>,), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#2056), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#2056), scope: scope[21] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2058), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2058), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#2058), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#2061), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#2061), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2056), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2056), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2056), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2056), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2056), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2056), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#2061), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2061), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2061), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2061), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2061), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2062), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2062), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2062), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2062), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:74: 152:78 (#2062), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:29: 153:39 (#2062), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:29: 153:39 (#2062), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:80: 152:84 (#2062), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} eyre::Report, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:41: 153:44 (#2062), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} eyre::Report, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:41: 153:44 (#2062), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#2064), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#2064), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#2068), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#2068), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2055), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#2068), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2064), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2064), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#2064), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:17: 3088:22 (#2070), scope: scope[21] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2055), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#2071), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:21 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2070), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2070), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:21: 3090:25 (#2070), scope: scope[24] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:21: 3091:29 (#2070), scope: scope[25] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2070), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3092:28: 3092:33 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2070), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:33 (#2070), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:21: 3095:27 (#2070), scope: scope[26] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:26 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#2070), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:60: 3097:64 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:74: 3097:82 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#2073), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#2073), scope: scope[27] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2075), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2075), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#2075), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#2078), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#2078), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2073), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2073), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2073), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2073), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2073), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2073), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#2078), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2078), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2078), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2078), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2078), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2079), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2079), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2079), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2079), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:74: 152:78 (#2079), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:29: 153:39 (#2079), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:29: 153:39 (#2079), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:80: 152:84 (#2079), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} eyre::Report, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:41: 153:44 (#2079), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} eyre::Report, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:41: 153:44 (#2079), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: ingestor::eth_client::RPCClientError, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:158:17: 158:20 (#0), scope: scope[11] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:13: 867:20 (#2038), scope: scope[29] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#2042), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2044), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2044), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#2042), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#2042), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#2042), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2044), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2044), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#2042), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#2042), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:17: 868:25 (#2038), scope: scope[29] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:22 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:98: 869:106 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:12: 871:19 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:514 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#2}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: Closure(DefId(278:514 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#2}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (tracing::field::ValueSet<'{erased}>,), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#2082), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#2082), scope: scope[30] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2084), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2084), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#2084), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#2087), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#2087), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2082), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2082), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2082), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2082), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2082), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2082), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#2087), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2087), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2087), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2087), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2087), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2088), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2088), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2088), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2088), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:77: 160:81 (#2088), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:21: 161:31 (#2088), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:21: 161:31 (#2088), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:83: 160:87 (#2088), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} ingestor::eth_client::RPCClientError, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:33: 161:36 (#2088), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} ingestor::eth_client::RPCClientError, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:33: 161:36 (#2088), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#2090), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#2090), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#2094), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#2094), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2044), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#2094), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2090), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2090), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#2090), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:17: 3088:22 (#2096), scope: scope[30] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2044), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#2097), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:21 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2096), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2096), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:21: 3090:25 (#2096), scope: scope[33] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:21: 3091:29 (#2096), scope: scope[34] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2096), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3092:28: 3092:33 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2096), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:33 (#2096), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:21: 3095:27 (#2096), scope: scope[35] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:26 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#2096), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:60: 3097:64 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:74: 3097:82 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#2099), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#2099), scope: scope[36] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2101), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2101), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#2101), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#2104), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#2104), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2099), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2099), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2099), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2099), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2099), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2099), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#2104), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2104), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2104), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2104), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2104), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2105), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2105), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2105), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2105), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:77: 160:81 (#2105), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:21: 161:31 (#2105), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:21: 161:31 (#2105), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:83: 160:87 (#2105), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} ingestor::eth_client::RPCClientError, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:33: 161:36 (#2105), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} ingestor::eth_client::RPCClientError, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:33: 161:36 (#2105), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[32] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:514 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#2}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#2038), scope: scope[30] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[37] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2090), scope: scope[30] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2044), scope: scope[29] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#2042), scope: scope[29] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2044), scope: scope[29] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[23] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:500 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#1}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#2049), scope: scope[21] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[28] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2064), scope: scope[21] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2055), scope: scope[18] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#2053), scope: scope[18] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2055), scope: scope[18] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[5] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:486 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#0}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#2003), scope: scope[3] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[10] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2018), scope: scope[3] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#2009), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#2007), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#2009), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:157:13: 157:14 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:89: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:89: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:89: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:89: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u32, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }], user_type_annotations: [], arg_count: 1, spread_arg: None, var_debug_info: [_task_context => _595, self => ((*_1).0: &mut ingestor::ingestor::Ingestor), self => (((*_1) as variant#4).0: &mut ingestor::ingestor::Ingestor), block_numbers => (((*_1) as variant#4).1: std::vec::Vec<u64>), enabled => _18, interest => _29, iter => _45, level => _96, meta => _103, log_meta => _106, logger => _117, iter => _129, start_time => (((*_1) as variant#4).2: tokio::time::Instant), __awaitee => (((*_1) as variant#3).3: std::pin::Pin<std::boxed::Box<dyn std::future::Future<Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>> + std::marker::Send>>), result => _190, blocks => _195, duration => _196, iter => (((*_1) as variant#4).4: std::vec::IntoIter<common::types::BlockAndReceiptsPayload>), block => _211, __awaitee => (((*_1) as variant#4).6: {async fn body of ingestor::ingestor::Ingestor::push_block_and_receipts()}), result => _228, err => _233, enabled => _235, interest => _246, iter => _262, level => _313, meta => _320, log_meta => _323, logger => _334, iter => _346, err => _388, enabled => _390, interest => _401, iter => _417, level => _468, meta => _475, log_meta => _478, logger => _489, iter => _501], span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), required_consts: Some([const tracing::Level::TRACE, const tracing::level_filters::STATIC_MAX_LEVEL, const tracing::Level::TRACE, const tracing::Level::TRACE, const tracing::log::STATIC_MAX_LEVEL, const tracing::Level::TRACE, const tracing::Level::ERROR, const tracing::level_filters::STATIC_MAX_LEVEL, const tracing::Level::ERROR, const tracing::Level::ERROR, const tracing::log::STATIC_MAX_LEVEL, const tracing::Level::ERROR, const tracing::Level::ERROR, const tracing::level_filters::STATIC_MAX_LEVEL, const tracing::Level::ERROR, const tracing::Level::ERROR, const tracing::log::STATIC_MAX_LEVEL, const tracing::Level::ERROR]), mentioned_items: None, is_polymorphic: false, injection_phase: None, tainted_by_errors: None, coverage_info_hi: None, function_coverage_info: None }), coroutine_layout: Some(CoroutineLayout { field_tys: {_0: CoroutineSavedTy { ty: &'{erased} mut ingestor::ingestor::Ingestor, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:35: 131:44 (#0), scope: scope[0] }, ignore_for_traits: false }, _1: CoroutineSavedTy { ty: std::vec::Vec<u64, std::alloc::Global>, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:13: 132:26 (#0), scope: scope[1] }, ignore_for_traits: false }, _2: CoroutineSavedTy { ty: tokio::time::Instant, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:140:13: 140:23 (#0), scope: scope[2] }, ignore_for_traits: false }, _3: CoroutineSavedTy { ty: std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload, std::alloc::Global>, ingestor::eth_client::RPCClientError>, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#0), scope: scope[0] }, ignore_for_traits: false }, _4: CoroutineSavedTy { ty: std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#2037), scope: scope[11] }, ignore_for_traits: false }, _5: CoroutineSavedTy { ty: std::vec::IntoIter<common::types::BlockAndReceiptsPayload, std::alloc::Global>, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#2045), scope: scope[15] }, ignore_for_traits: false }, _6: CoroutineSavedTy { ty: std::option::Option<common::types::BlockAndReceiptsPayload>, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#2045), scope: scope[0] }, ignore_for_traits: false }, _7: CoroutineSavedTy { ty: Coroutine(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, std::sync::Arc<common::types::BlockAndReceiptsPayload, std::alloc::Global>)]), source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:90 (#2048), scope: scope[18] }, ignore_for_traits: false }, _8: CoroutineSavedTy { ty: bool, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:157:13: 157:14 (#0), scope: scope[0] }, ignore_for_traits: false }}, variant_fields: {Unresumed: [], Returned: [], Panicked: [], Suspend0: [_0, _1, _2, _4], Suspend1: [_0, _1, _2, _3, _5, _6, _7, _8]}, storage_conflicts: BitMatrix(9x9) {(_0, _0), (_0, _1), (_0, _2), (_0, _3), (_0, _4), (_0, _5), (_0, _6), (_0, _7), (_0, _8), (_1, _0), (_1, _1), (_1, _2), (_1, _3), (_1, _4), (_1, _5), (_1, _6), (_1, _7), (_1, _8), (_2, _0), (_2, _1), (_2, _2), (_2, _3), (_2, _4), (_2, _5), (_2, _6), (_2, _7), (_2, _8), (_3, _0), (_3, _1), (_3, _2), (_3, _3), (_3, _4), (_3, _5), (_3, _6), (_3, _7), (_3, _8), (_4, _0), (_4, _1), (_4, _2), (_4, _3), (_4, _4), (_4, _8), (_5, _0), (_5, _1), (_5, _2), (_5, _3), (_5, _5), (_5, _6), (_5, _7), (_5, _8), (_6, _0), (_6, _1), (_6, _2), (_6, _3), (_6, _5), (_6, _6), (_6, _7), (_6, _8), (_7, _0), (_7, _1), (_7, _2), (_7, _3), (_7, _5), (_7, _6), (_7, _7), (_7, _8), (_8, _0), (_8, _1), (_8, _2), (_8, _3), (_8, _4), (_8, _5), (_8, _6), (_8, _7), (_8, _8)} }), coroutine_kind: Desugared(Async, Fn) }), local_decls: [LocalDecl { mutability: Mut, local_info: Clear, ty: std::task::Poll<()>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<&'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)])>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:35: 131:44 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:13: 132:26 (#0), scope: scope[1] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::ops::Range<u64>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:29: 136:15 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:30: 132:55 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:133:13: 136:14 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:17: 134:76 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:17: 134:72 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:21: 134:44 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:46: 134:71 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (u64, bool), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:17: 134:76 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:135:17: 135:68 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:135:17: 135:42 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:135:45: 135:68 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (u64, bool), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:135:17: 135:68 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:13: 867:20 (#2003), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#2007), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#2009), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#2009), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#2007), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#2007), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#2007), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#2009), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#2009), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#2007), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#2007), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:17: 868:25 (#2003), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:22 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:98: 869:106 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:12: 871:19 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:486 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#0}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: Closure(DefId(278:486 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#0}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (tracing::field::ValueSet<'{erased}>,), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#2010), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#2010), scope: scope[3] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2012), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2012), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#2012), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#2015), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#2015), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2010), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2010), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2010), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2010), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2010), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2010), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#2015), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2015), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2015), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2015), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2015), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2016), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2016), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:33: 138:37 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:48: 138:61 (#2016), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:48: 138:61 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:41: 138:45 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:63: 138:73 (#2016), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:63: 138:73 (#2016), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#2018), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#2018), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#2022), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#2022), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#2009), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#2022), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2018), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2018), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#2018), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:17: 3088:22 (#2024), scope: scope[3] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#2009), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#2025), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:21 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2024), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2024), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:21: 3090:25 (#2024), scope: scope[6] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:21: 3091:29 (#2024), scope: scope[7] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2024), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3092:28: 3092:33 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2024), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:33 (#2024), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:21: 3095:27 (#2024), scope: scope[8] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:26 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#2024), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:60: 3097:64 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:74: 3097:82 (#2024), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#2027), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#2027), scope: scope[9] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2003), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2003), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2029), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2029), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#2029), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#2032), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#2032), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2027), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2027), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2027), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2027), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2027), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2027), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#2032), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2032), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2032), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2032), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2032), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2033), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2033), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2033), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2033), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:33: 138:37 (#2033), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:48: 138:61 (#2033), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:48: 138:61 (#2033), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:41: 138:45 (#2033), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:63: 138:73 (#2033), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:63: 138:73 (#2033), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tokio::time::Instant, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:140:13: 140:23 (#0), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload, std::alloc::Global>, ingestor::eth_client::RPCClientError>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:71 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(ingestor::eth_client::RPCClient), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:26 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(ingestor::eth_client::RPCClient), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:71 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::sync::Arc<dyn [Binder { value: Trait(ingestor::eth_client::RPCClient), bound_vars: [] }] + '{erased}, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:26 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:57: 141:70 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#2037), scope: scope[11] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::task::Poll<std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload, std::alloc::Global>, ingestor::eth_client::RPCClientError>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<&'{erased} mut std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#2037), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#2037), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload, std::alloc::Global>, ingestor::eth_client::RPCClientError>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#2037), scope: scope[12] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: !, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#2037), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:142:13: 142:23 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::vec::Vec<common::types::BlockAndReceiptsPayload, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:142:16: 142:22 (#0), scope: scope[11] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::time::Duration, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:143:21: 143:29 (#0), scope: scope[14] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tokio::time::Instant, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:143:32: 143:42 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:144:17: 148:18 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} ingestor::metrics::IngestorMetrics, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:144:17: 144:29 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:145:21: 145:31 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::time::Duration, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:147:21: 147:29 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::vec::IntoIter<common::types::BlockAndReceiptsPayload, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#2045), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::vec::Vec<common::types::BlockAndReceiptsPayload, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::vec::IntoIter<common::types::BlockAndReceiptsPayload, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#2045), scope: scope[15] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#2045), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<common::types::BlockAndReceiptsPayload>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#2045), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::vec::IntoIter<common::types::BlockAndReceiptsPayload, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#2045), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::vec::IntoIter<common::types::BlockAndReceiptsPayload, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#2045), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:17: 156:18 (#2046), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: !, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:17: 156:18 (#2046), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: common::types::BlockAndReceiptsPayload, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:21: 149:26 (#0), scope: scope[16] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::result::Result<(), eyre::Report>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:90 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: Coroutine(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, std::sync::Arc<common::types::BlockAndReceiptsPayload, std::alloc::Global>)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: Coroutine(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, std::sync::Arc<common::types::BlockAndReceiptsPayload, std::alloc::Global>)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:84 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:43 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::sync::Arc<common::types::BlockAndReceiptsPayload, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:68: 150:83 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: common::types::BlockAndReceiptsPayload, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:77: 150:82 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: Coroutine(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, std::sync::Arc<common::types::BlockAndReceiptsPayload, std::alloc::Global>)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:90 (#2048), scope: scope[18] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::task::Poll<std::result::Result<(), eyre::Report>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<&'{erased} mut Coroutine(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, std::sync::Arc<common::types::BlockAndReceiptsPayload, std::alloc::Global>)])>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, std::sync::Arc<common::types::BlockAndReceiptsPayload, std::alloc::Global>)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, std::sync::Arc<common::types::BlockAndReceiptsPayload, std::alloc::Global>)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:90 (#2048), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:90 (#2048), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::result::Result<(), eyre::Report>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:90 (#2048), scope: scope[19] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: !, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:90 (#2048), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:28: 150:36 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: eyre::Report, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:32: 150:35 (#0), scope: scope[18] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:13: 867:20 (#2049), scope: scope[18] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#2053), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2055), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2055), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#2053), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#2053), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#2053), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2055), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2055), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#2053), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#2053), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:17: 868:25 (#2049), scope: scope[18] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:22 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:98: 869:106 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:12: 871:19 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:500 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#1}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: Closure(DefId(278:500 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#1}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (tracing::field::ValueSet<'{erased}>,), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#2056), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#2056), scope: scope[21] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2058), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2058), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#2058), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#2061), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#2061), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2056), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2056), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2056), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2056), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2056), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2056), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#2061), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2061), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2061), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2061), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2061), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2062), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2062), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2062), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2062), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:74: 152:78 (#2062), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:29: 153:39 (#2062), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:29: 153:39 (#2062), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:80: 152:84 (#2062), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} eyre::Report, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:41: 153:44 (#2062), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} eyre::Report, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:41: 153:44 (#2062), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#2064), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#2064), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#2068), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#2068), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2055), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#2068), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2064), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2064), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#2064), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:17: 3088:22 (#2070), scope: scope[21] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2055), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#2071), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:21 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2070), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2070), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:21: 3090:25 (#2070), scope: scope[24] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:21: 3091:29 (#2070), scope: scope[25] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2070), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3092:28: 3092:33 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2070), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:33 (#2070), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:21: 3095:27 (#2070), scope: scope[26] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:26 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#2070), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:60: 3097:64 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:74: 3097:82 (#2070), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#2073), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#2073), scope: scope[27] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2049), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2049), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2075), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2075), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#2075), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#2078), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#2078), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2073), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2073), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2073), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2073), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2073), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2073), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#2078), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2078), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2078), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2078), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2078), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2079), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2079), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2079), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2079), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:74: 152:78 (#2079), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:29: 153:39 (#2079), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:29: 153:39 (#2079), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:80: 152:84 (#2079), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} eyre::Report, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:41: 153:44 (#2079), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} eyre::Report, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:41: 153:44 (#2079), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: ingestor::eth_client::RPCClientError, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:158:17: 158:20 (#0), scope: scope[11] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:13: 867:20 (#2038), scope: scope[29] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#2042), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2044), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2044), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#2042), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#2042), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#2042), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2044), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2044), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#2042), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#2042), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:17: 868:25 (#2038), scope: scope[29] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:22 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:98: 869:106 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:12: 871:19 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:514 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#2}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: Closure(DefId(278:514 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#2}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (tracing::field::ValueSet<'{erased}>,), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#2082), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#2082), scope: scope[30] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2084), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2084), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#2084), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#2087), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#2087), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2082), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2082), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2082), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2082), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2082), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2082), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#2087), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2087), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2087), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2087), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2087), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2088), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2088), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2088), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2088), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:77: 160:81 (#2088), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:21: 161:31 (#2088), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:21: 161:31 (#2088), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:83: 160:87 (#2088), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} ingestor::eth_client::RPCClientError, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:33: 161:36 (#2088), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} ingestor::eth_client::RPCClientError, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:33: 161:36 (#2088), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#2090), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#2090), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#2094), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#2094), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2044), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#2094), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2090), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2090), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#2090), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:17: 3088:22 (#2096), scope: scope[30] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2044), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#2097), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:21 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2096), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2096), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:21: 3090:25 (#2096), scope: scope[33] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:21: 3091:29 (#2096), scope: scope[34] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2096), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3092:28: 3092:33 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2096), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:33 (#2096), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:21: 3095:27 (#2096), scope: scope[35] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:26 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#2096), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:60: 3097:64 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:74: 3097:82 (#2096), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#2099), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#2099), scope: scope[36] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2038), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#2038), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2101), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2101), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#2101), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#2104), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#2104), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2099), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2099), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2099), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2099), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2099), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2099), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#2104), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2104), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2104), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2104), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2104), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2105), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2105), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2105), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2105), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:77: 160:81 (#2105), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:21: 161:31 (#2105), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:21: 161:31 (#2105), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:83: 160:87 (#2105), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} ingestor::eth_client::RPCClientError, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:33: 161:36 (#2105), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} ingestor::eth_client::RPCClientError, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:33: 161:36 (#2105), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[32] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:514 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#2}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#2038), scope: scope[30] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[37] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2090), scope: scope[30] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2044), scope: scope[29] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#2042), scope: scope[29] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2044), scope: scope[29] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[23] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:500 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#1}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#2049), scope: scope[21] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[28] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2064), scope: scope[21] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2055), scope: scope[18] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#2053), scope: scope[18] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#2055), scope: scope[18] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[5] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:486 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#0}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#2003), scope: scope[3] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[10] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2018), scope: scope[3] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#2009), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#2007), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#2009), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:157:13: 157:14 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#2036), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:89: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:89: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:89: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:89: 150:90 (#2047), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u32, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }], user_type_annotations: [], arg_count: 2, spread_arg: None, var_debug_info: [_task_context => _595, self => ((*(_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})).0: &mut ingestor::ingestor::Ingestor), self => (((*(_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})) as variant#4).0: &mut ingestor::ingestor::Ingestor), block_numbers => (((*(_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})) as variant#4).1: std::vec::Vec<u64>), enabled => _18, interest => _29, iter => _45, level => _96, meta => _103, log_meta => _106, logger => _117, iter => _129, start_time => (((*(_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})) as variant#4).2: tokio::time::Instant), __awaitee => (((*(_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})) as variant#3).3: std::pin::Pin<std::boxed::Box<dyn std::future::Future<Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>> + std::marker::Send>>), result => _190, blocks => _195, duration => _196, iter => (((*(_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})) as variant#4).4: std::vec::IntoIter<common::types::BlockAndReceiptsPayload>), block => _211, __awaitee => (((*(_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})) as variant#4).6: {async fn body of ingestor::ingestor::Ingestor::push_block_and_receipts()}), result => _228, err => _233, enabled => _235, interest => _246, iter => _262, level => _313, meta => _320, log_meta => _323, logger => _334, iter => _346, err => _388, enabled => _390, interest => _401, iter => _417, level => _468, meta => _475, log_meta => _478, logger => _489, iter => _501], span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), required_consts: Some([const tracing::Level::TRACE, const tracing::level_filters::STATIC_MAX_LEVEL, const tracing::Level::TRACE, const tracing::Level::TRACE, const tracing::log::STATIC_MAX_LEVEL, const tracing::Level::TRACE, const tracing::Level::ERROR, const tracing::level_filters::STATIC_MAX_LEVEL, const tracing::Level::ERROR, const tracing::Level::ERROR, const tracing::log::STATIC_MAX_LEVEL, const tracing::Level::ERROR, const tracing::Level::ERROR, const tracing::level_filters::STATIC_MAX_LEVEL, const tracing::Level::ERROR, const tracing::Level::ERROR, const tracing::log::STATIC_MAX_LEVEL, const tracing::Level::ERROR]), mentioned_items: Some([Spanned { node: Fn(FnDef(DefId(2:3106 ~ core[49ae]::cmp::max), [u64])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:17: 134:72 (#0) }, Spanned { node: Fn(FnDef(DefId(2:3096 ~ core[49ae]::cmp::min), [u64])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:133:13: 136:14 (#0) }, Spanned { node: Fn(FnDef(DefId(2:8978 ~ core[49ae]::iter::traits::iterator::Iterator::collect), [std::ops::Range<u64>, std::vec::Vec<u64, std::alloc::Global>])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:29: 137:23 (#0) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::Level, tracing::level_filters::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#2007) }, Spanned { node: Fn(FnDef(DefId(81:587 ~ tracing_core[67d7]::metadata::{impl#13}::current), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#2007) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::Level, tracing::level_filters::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#2007) }, Spanned { node: Fn(FnDef(DefId(81:59 ~ tracing_core[67d7]::callsite::{impl#0}::interest), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:49 (#2003) }, Spanned { node: Fn(FnDef(DefId(81:749 ~ tracing_core[67d7]::subscriber::{impl#4}::is_never), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#2003) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#2003) }, Spanned { node: Fn(FnDef(DefId(80:288 ~ tracing[5571]::__macro_support::__is_enabled), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:37: 869:107 (#2003) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2003) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2003) }, Spanned { node: Fn(FnDef(DefId(81:445 ~ tracing_core[67d7]::field::{impl#48}::iter), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#2010) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2003) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2003) }, Spanned { node: Fn(FnDef(DefId(2:8915 ~ core[49ae]::iter::traits::iterator::Iterator::next), [tracing::field::Iter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2010) }, Spanned { node: Fn(FnDef(DefId(2:9700 ~ core[49ae]::option::{impl#0}::expect), [tracing::field::Field])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2010) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, std::vec::Vec<u64, std::alloc::Global>])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:33: 138:37 (#2016) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, common::types::Chain])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:41: 138:45 (#2016) }, Spanned { node: Fn(FnDef(DefId(2:11184 ~ core[49ae]::fmt::{impl#4}::new_v1), ['{erased}, 2_usize, 2_usize])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2016) }, Spanned { node: UnsizeCast { source_ty: &'{erased} std::fmt::Arguments<'{erased}>, target_ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased} }, span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2015) }, Spanned { node: Fn(FnDef(DefId(81:446 ~ tracing_core[67d7]::field::{impl#48}::value_set), ['{erased}, [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize]])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#2010) }, Spanned { node: Fn(FnDef(DefId(2:3753 ~ core[49ae]::ops::function::Fn::call), [Closure(DefId(278:486 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#0}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), (tracing::field::ValueSet<'{erased}>,)])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#2003) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::log::Level, tracing::log::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#2018) }, Spanned { node: Fn(FnDef(DefId(81:169 ~ tracing_core[67d7]::dispatcher::has_been_set), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#2018) }, Spanned { node: Fn(FnDef(DefId(85:149 ~ log[2aff]::max_level), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2024) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::log::Level, tracing::log::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#2024) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:28: 3090:48 (#2024) }, Spanned { node: Fn(FnDef(DefId(85:110 ~ log[2aff]::{impl#14}::builder), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2024) }, Spanned { node: Fn(FnDef(DefId(85:116 ~ log[2aff]::{impl#15}::level), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2024) }, Spanned { node: Fn(FnDef(DefId(81:521 ~ tracing_core[67d7]::metadata::{impl#0}::target), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2024) }, Spanned { node: Fn(FnDef(DefId(85:117 ~ log[2aff]::{impl#15}::target), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2024) }, Spanned { node: Fn(FnDef(DefId(85:118 ~ log[2aff]::{impl#15}::build), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3094:29 (#2024) }, Spanned { node: Fn(FnDef(DefId(85:163 ~ log[2aff]::logger), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:30: 3095:43 (#2024) }, Spanned { node: Fn(FnDef(DefId(85:123 ~ log[2aff]::Log::enabled), [dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#2024) }, Spanned { node: UnsizeCast { source_ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, target_ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased} }, span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#2024) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2003) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2003) }, Spanned { node: Fn(FnDef(DefId(81:445 ~ tracing_core[67d7]::field::{impl#48}::iter), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#2027) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2003) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2003) }, Spanned { node: Fn(FnDef(DefId(2:8915 ~ core[49ae]::iter::traits::iterator::Iterator::next), [tracing::field::Iter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2027) }, Spanned { node: Fn(FnDef(DefId(2:9700 ~ core[49ae]::option::{impl#0}::expect), [tracing::field::Field])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2027) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, std::vec::Vec<u64, std::alloc::Global>])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:33: 138:37 (#2033) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, common::types::Chain])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:41: 138:45 (#2033) }, Spanned { node: Fn(FnDef(DefId(2:11184 ~ core[49ae]::fmt::{impl#4}::new_v1), ['{erased}, 2_usize, 2_usize])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2033) }, Spanned { node: UnsizeCast { source_ty: &'{erased} std::fmt::Arguments<'{erased}>, target_ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased} }, span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2032) }, Spanned { node: Fn(FnDef(DefId(81:446 ~ tracing_core[67d7]::field::{impl#48}::value_set), ['{erased}, [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize]])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#2027) }, Spanned { node: Fn(FnDef(DefId(80:291 ~ tracing[5571]::__macro_support::__tracing_log), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:21: 3097:95 (#2024) }, Spanned { node: Fn(FnDef(DefId(108:12017 ~ tokio[b0f5]::time::instant::{impl#0}::now), [])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:140:26: 140:40 (#0) }, Spanned { node: Fn(FnDef(DefId(2:3712 ~ core[49ae]::ops::deref::Deref::deref), [std::sync::Arc<dyn [Binder { value: Trait(ingestor::eth_client::RPCClient), bound_vars: [] }] + '{erased}, std::alloc::Global>])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:71 (#0) }, Spanned { node: Fn(FnDef(DefId(278:343 ~ ingestor[bd0f]::eth_client::RPCClient::batch_get_blocks_and_receipts), [dyn [Binder { value: Trait(ingestor::eth_client::RPCClient), bound_vars: [] }] + '{erased}, '{erased}, '{erased}])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:71 (#0) }, Spanned { node: Fn(FnDef(DefId(2:42463 ~ core[49ae]::future::into_future::IntoFuture::into_future), [std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036) }, Spanned { node: Fn(FnDef(DefId(2:10144 ~ core[49ae]::pin::{impl#6}::new_unchecked), [&'{erased} mut std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036) }, Spanned { node: Fn(FnDef(DefId(2:42459 ~ core[49ae]::future::future::Future::poll), [std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#2036) }, Spanned { node: Drop(std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#2036) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::Level, tracing::level_filters::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#2042) }, Spanned { node: Fn(FnDef(DefId(108:12024 ~ tokio[b0f5]::time::instant::{impl#0}::elapsed), [])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:143:32: 143:52 (#0) }, Spanned { node: Fn(FnDef(DefId(278:120 ~ ingestor[bd0f]::metrics::{impl#0}::record_rpc_call), [])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:144:17: 148:18 (#0) }, Spanned { node: Fn(FnDef(DefId(2:8783 ~ core[49ae]::iter::traits::collect::IntoIterator::into_iter), [std::vec::Vec<common::types::BlockAndReceiptsPayload, std::alloc::Global>])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#2045) }, Spanned { node: Fn(FnDef(DefId(2:8915 ~ core[49ae]::iter::traits::iterator::Iterator::next), [std::vec::IntoIter<common::types::BlockAndReceiptsPayload, std::alloc::Global>])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#2045) }, Spanned { node: Fn(FnDef(DefId(5:6636 ~ alloc[cc2d]::sync::{impl#14}::new), [common::types::BlockAndReceiptsPayload])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:68: 150:83 (#0) }, Spanned { node: Drop(std::vec::IntoIter<common::types::BlockAndReceiptsPayload, std::alloc::Global>), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046) }, Spanned { node: Fn(FnDef(DefId(278:94 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts), [])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:84 (#0) }, Spanned { node: Fn(FnDef(DefId(2:42463 ~ core[49ae]::future::into_future::IntoFuture::into_future), [Coroutine(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, std::sync::Arc<common::types::BlockAndReceiptsPayload, std::alloc::Global>)])])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047) }, Spanned { node: Fn(FnDef(DefId(2:10144 ~ core[49ae]::pin::{impl#6}::new_unchecked), [&'{erased} mut Coroutine(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, std::sync::Arc<common::types::BlockAndReceiptsPayload, std::alloc::Global>)])])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047) }, Spanned { node: Fn(FnDef(DefId(2:42459 ~ core[49ae]::future::future::Future::poll), [Coroutine(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, std::sync::Arc<common::types::BlockAndReceiptsPayload, std::alloc::Global>)])])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:85: 150:90 (#2047) }, Spanned { node: Drop(Coroutine(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, std::sync::Arc<common::types::BlockAndReceiptsPayload, std::alloc::Global>)])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:89: 150:90 (#2047) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::Level, tracing::level_filters::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#2053) }, Spanned { node: Fn(FnDef(DefId(81:587 ~ tracing_core[67d7]::metadata::{impl#13}::current), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#2053) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::Level, tracing::level_filters::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#2053) }, Spanned { node: Fn(FnDef(DefId(81:59 ~ tracing_core[67d7]::callsite::{impl#0}::interest), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:49 (#2049) }, Spanned { node: Fn(FnDef(DefId(81:749 ~ tracing_core[67d7]::subscriber::{impl#4}::is_never), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#2049) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#2049) }, Spanned { node: Fn(FnDef(DefId(80:288 ~ tracing[5571]::__macro_support::__is_enabled), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:37: 869:107 (#2049) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2049) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2049) }, Spanned { node: Fn(FnDef(DefId(81:445 ~ tracing_core[67d7]::field::{impl#48}::iter), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#2056) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2049) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2049) }, Spanned { node: Fn(FnDef(DefId(2:8915 ~ core[49ae]::iter::traits::iterator::Iterator::next), [tracing::field::Iter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2056) }, Spanned { node: Fn(FnDef(DefId(2:9700 ~ core[49ae]::option::{impl#0}::expect), [tracing::field::Field])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2056) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, common::types::Chain])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:74: 152:78 (#2062) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, eyre::Report])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:80: 152:84 (#2062) }, Spanned { node: Fn(FnDef(DefId(2:11184 ~ core[49ae]::fmt::{impl#4}::new_v1), ['{erased}, 3_usize, 2_usize])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2062) }, Spanned { node: UnsizeCast { source_ty: &'{erased} std::fmt::Arguments<'{erased}>, target_ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased} }, span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2061) }, Spanned { node: Fn(FnDef(DefId(81:446 ~ tracing_core[67d7]::field::{impl#48}::value_set), ['{erased}, [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize]])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#2056) }, Spanned { node: Fn(FnDef(DefId(2:3753 ~ core[49ae]::ops::function::Fn::call), [Closure(DefId(278:500 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#1}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), (tracing::field::ValueSet<'{erased}>,)])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#2049) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::log::Level, tracing::log::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#2064) }, Spanned { node: Fn(FnDef(DefId(81:169 ~ tracing_core[67d7]::dispatcher::has_been_set), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#2064) }, Spanned { node: Fn(FnDef(DefId(85:149 ~ log[2aff]::max_level), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2070) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::log::Level, tracing::log::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#2070) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:28: 3090:48 (#2070) }, Spanned { node: Fn(FnDef(DefId(85:110 ~ log[2aff]::{impl#14}::builder), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2070) }, Spanned { node: Fn(FnDef(DefId(85:116 ~ log[2aff]::{impl#15}::level), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2070) }, Spanned { node: Fn(FnDef(DefId(81:521 ~ tracing_core[67d7]::metadata::{impl#0}::target), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2070) }, Spanned { node: Fn(FnDef(DefId(85:117 ~ log[2aff]::{impl#15}::target), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2070) }, Spanned { node: Fn(FnDef(DefId(85:118 ~ log[2aff]::{impl#15}::build), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3094:29 (#2070) }, Spanned { node: Fn(FnDef(DefId(85:163 ~ log[2aff]::logger), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:30: 3095:43 (#2070) }, Spanned { node: Fn(FnDef(DefId(85:123 ~ log[2aff]::Log::enabled), [dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#2070) }, Spanned { node: UnsizeCast { source_ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, target_ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased} }, span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#2070) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2049) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2049) }, Spanned { node: Fn(FnDef(DefId(81:445 ~ tracing_core[67d7]::field::{impl#48}::iter), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#2073) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2049) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2049) }, Spanned { node: Fn(FnDef(DefId(2:8915 ~ core[49ae]::iter::traits::iterator::Iterator::next), [tracing::field::Iter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2073) }, Spanned { node: Fn(FnDef(DefId(2:9700 ~ core[49ae]::option::{impl#0}::expect), [tracing::field::Field])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2073) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, common::types::Chain])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:74: 152:78 (#2079) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, eyre::Report])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:80: 152:84 (#2079) }, Spanned { node: Fn(FnDef(DefId(2:11184 ~ core[49ae]::fmt::{impl#4}::new_v1), ['{erased}, 3_usize, 2_usize])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2079) }, Spanned { node: UnsizeCast { source_ty: &'{erased} std::fmt::Arguments<'{erased}>, target_ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased} }, span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2078) }, Spanned { node: Fn(FnDef(DefId(81:446 ~ tracing_core[67d7]::field::{impl#48}::value_set), ['{erased}, [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize]])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#2073) }, Spanned { node: Fn(FnDef(DefId(80:291 ~ tracing[5571]::__macro_support::__tracing_log), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:21: 3097:95 (#2070) }, Spanned { node: Drop(eyre::Report), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:155:21: 155:22 (#0) }, Spanned { node: Fn(FnDef(DefId(81:587 ~ tracing_core[67d7]::metadata::{impl#13}::current), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#2042) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::Level, tracing::level_filters::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#2042) }, Spanned { node: Fn(FnDef(DefId(81:59 ~ tracing_core[67d7]::callsite::{impl#0}::interest), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:49 (#2038) }, Spanned { node: Fn(FnDef(DefId(81:749 ~ tracing_core[67d7]::subscriber::{impl#4}::is_never), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#2038) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#2038) }, Spanned { node: Fn(FnDef(DefId(80:288 ~ tracing[5571]::__macro_support::__is_enabled), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:37: 869:107 (#2038) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2038) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2038) }, Spanned { node: Fn(FnDef(DefId(81:445 ~ tracing_core[67d7]::field::{impl#48}::iter), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#2082) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#2038) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#2038) }, Spanned { node: Fn(FnDef(DefId(2:8915 ~ core[49ae]::iter::traits::iterator::Iterator::next), [tracing::field::Iter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2082) }, Spanned { node: Fn(FnDef(DefId(2:9700 ~ core[49ae]::option::{impl#0}::expect), [tracing::field::Field])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2082) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, common::types::Chain])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:77: 160:81 (#2088) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, ingestor::eth_client::RPCClientError])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:83: 160:87 (#2088) }, Spanned { node: Fn(FnDef(DefId(2:11184 ~ core[49ae]::fmt::{impl#4}::new_v1), ['{erased}, 2_usize, 2_usize])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2088) }, Spanned { node: UnsizeCast { source_ty: &'{erased} std::fmt::Arguments<'{erased}>, target_ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased} }, span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2087) }, Spanned { node: Fn(FnDef(DefId(81:446 ~ tracing_core[67d7]::field::{impl#48}::value_set), ['{erased}, [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize]])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#2082) }, Spanned { node: Fn(FnDef(DefId(2:3753 ~ core[49ae]::ops::function::Fn::call), [Closure(DefId(278:514 ~ ingestor[bd0f]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#2}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), (tracing::field::ValueSet<'{erased}>,)])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#2038) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::log::Level, tracing::log::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#2090) }, Spanned { node: Fn(FnDef(DefId(81:169 ~ tracing_core[67d7]::dispatcher::has_been_set), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#2090) }, Spanned { node: Fn(FnDef(DefId(85:149 ~ log[2aff]::max_level), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2096) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::log::Level, tracing::log::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#2096) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:28: 3090:48 (#2096) }, Spanned { node: Fn(FnDef(DefId(85:110 ~ log[2aff]::{impl#14}::builder), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2096) }, Spanned { node: Fn(FnDef(DefId(85:116 ~ log[2aff]::{impl#15}::level), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2096) }, Spanned { node: Fn(FnDef(DefId(81:521 ~ tracing_core[67d7]::metadata::{impl#0}::target), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2096) }, Spanned { node: Fn(FnDef(DefId(85:117 ~ log[2aff]::{impl#15}::target), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2096) }, Spanned { node: Fn(FnDef(DefId(85:118 ~ log[2aff]::{impl#15}::build), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3094:29 (#2096) }, Spanned { node: Fn(FnDef(DefId(85:163 ~ log[2aff]::logger), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:30: 3095:43 (#2096) }, Spanned { node: Fn(FnDef(DefId(85:123 ~ log[2aff]::Log::enabled), [dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#2096) }, Spanned { node: UnsizeCast { source_ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, target_ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased} }, span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#2096) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2038) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2038) }, Spanned { node: Fn(FnDef(DefId(81:445 ~ tracing_core[67d7]::field::{impl#48}::iter), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#2099) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#2038) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#2038) }, Spanned { node: Fn(FnDef(DefId(2:8915 ~ core[49ae]::iter::traits::iterator::Iterator::next), [tracing::field::Iter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2099) }, Spanned { node: Fn(FnDef(DefId(2:9700 ~ core[49ae]::option::{impl#0}::expect), [tracing::field::Field])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2099) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, common::types::Chain])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:77: 160:81 (#2105) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, ingestor::eth_client::RPCClientError])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:83: 160:87 (#2105) }, Spanned { node: Fn(FnDef(DefId(2:11184 ~ core[49ae]::fmt::{impl#4}::new_v1), ['{erased}, 2_usize, 2_usize])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2105) }, Spanned { node: UnsizeCast { source_ty: &'{erased} std::fmt::Arguments<'{erased}>, target_ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased} }, span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2104) }, Spanned { node: Fn(FnDef(DefId(81:446 ~ tracing_core[67d7]::field::{impl#48}::value_set), ['{erased}, [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize]])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#2099) }, Spanned { node: Fn(FnDef(DefId(80:291 ~ tracing[5571]::__macro_support::__tracing_log), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:21: 3097:95 (#2096) }, Spanned { node: Drop(ingestor::eth_client::RPCClientError), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:163:13: 163:14 (#0) }, Spanned { node: Drop(ingestor::eth_client::RPCClientError), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:163:13: 163:14 (#0) }, Spanned { node: Drop(eyre::Report), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:155:21: 155:22 (#0) }, Spanned { node: Drop(Coroutine(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[bd0f]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, std::sync::Arc<common::types::BlockAndReceiptsPayload, std::alloc::Global>)])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:89: 150:90 (#2047) }, Spanned { node: Drop(std::vec::IntoIter<common::types::BlockAndReceiptsPayload, std::alloc::Global>), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#2046) }, Spanned { node: Drop(std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceiptsPayload>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#2036) }, Spanned { node: Drop(std::vec::Vec<u64, std::alloc::Global>), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0) }, Spanned { node: Drop(eyre::Report), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0) }, Spanned { node: Drop(std::vec::Vec<common::types::BlockAndReceiptsPayload, std::alloc::Global>), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:157:13: 157:14 (#0) }, Spanned { node: Drop(std::vec::Vec<u64, std::alloc::Global>), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0) }]), is_polymorphic: false, injection_phase: None, tainted_by_errors: None, coverage_info_hi: None, function_coverage_info: None }
stack backtrace:
   0:        0x10c9f3c14 - std::backtrace::Backtrace::create::h384992e32ef1ba37
   1:        0x10ac5d3c4 - std[20377fa5e773de1a]::panicking::update_hook::<alloc[cc2ded26e308a1b3]::boxed::Box<rustc_driver_impl[b3715a2fa479255b]::install_ice_hook::{closure#1}>>::{closure#0}
   2:        0x10ca0f15c - std::panicking::rust_panic_with_hook::h5f18f9068b2f58c3
   3:        0x10ca0ecf0 - std::panicking::begin_panic_handler::{{closure}}::hb8b81e303c9213f3
   4:        0x10ca0c644 - std::sys::backtrace::__rust_end_short_backtrace::h3731a6d781287c17
   5:        0x10ca0e9b4 - _rust_begin_unwind
   6:        0x10f0dcd20 - core::panicking::panic_fmt::h6b8bac135d5bea0b
   7:        0x10f1a6128 - rustc_query_system[228f95b585b62d3]::query::plumbing::incremental_verify_ich_failed::<rustc_middle[f9c8550300ab6f09]::ty::context::TyCtxt>
   8:        0x10bff2600 - rustc_query_system[228f95b585b62d3]::query::plumbing::incremental_verify_ich::<rustc_middle[f9c8550300ab6f09]::ty::context::TyCtxt, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 8usize]>>
   9:        0x10bf5ee6c - rustc_query_system[228f95b585b62d3]::query::plumbing::try_execute_query::<rustc_query_impl[f26de731c7db3cdf]::DynamicConfig<rustc_query_system[228f95b585b62d3]::query::caches::DefIdCache<rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 8usize]>>, false, false, false>, rustc_query_impl[f26de731c7db3cdf]::plumbing::QueryCtxt, true>
  10:        0x10c1b1e24 - rustc_query_impl[f26de731c7db3cdf]::query_impl::optimized_mir::get_query_incr::__rust_end_short_backtrace
  11:        0x10b88739c - rustc_middle[f9c8550300ab6f09]::query::plumbing::query_get_at::<rustc_query_system[228f95b585b62d3]::query::caches::DefIdCache<rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 8usize]>>>
  12:        0x10b870ca4 - <rustc_middle[f9c8550300ab6f09]::ty::context::TyCtxt>::coroutine_layout
  13:        0x10c972030 - rustc_ty_utils[a794283e4f113795]::layout::coroutine_layout
  14:        0x10c982234 - rustc_ty_utils[a794283e4f113795]::layout::layout_of
  15:        0x10c19c69c - rustc_query_impl[f26de731c7db3cdf]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2}::{closure#0}, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>
  16:        0x10c16f41c - <rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2} as core[49ae705414b57eee]::ops::function::FnOnce<(rustc_middle[f9c8550300ab6f09]::ty::context::TyCtxt, rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>)>>::call_once
  17:        0x10bf8d0b8 - rustc_query_system[228f95b585b62d3]::query::plumbing::try_execute_query::<rustc_query_impl[f26de731c7db3cdf]::DynamicConfig<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>, false, true, false>, rustc_query_impl[f26de731c7db3cdf]::plumbing::QueryCtxt, true>
  18:        0x10c1e3720 - rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::get_query_incr::__rust_end_short_backtrace
  19:        0x10c911018 - rustc_middle[f9c8550300ab6f09]::query::plumbing::query_get_at::<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>>
  20:        0x10c92ebbc - <core[49ae705414b57eee]::iter::adapters::GenericShunt<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::next
  21:        0x10c904b34 - core[49ae705414b57eee]::iter::adapters::try_process::<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}>>, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>, <core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::try_collect<rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::VariantIdx, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>>>::{closure#0}, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::VariantIdx, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>>>
  22:        0x10c981f70 - rustc_ty_utils[a794283e4f113795]::layout::layout_of
  23:        0x10c19c69c - rustc_query_impl[f26de731c7db3cdf]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2}::{closure#0}, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>
  24:        0x10c16f41c - <rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2} as core[49ae705414b57eee]::ops::function::FnOnce<(rustc_middle[f9c8550300ab6f09]::ty::context::TyCtxt, rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>)>>::call_once
  25:        0x10bf8d0b8 - rustc_query_system[228f95b585b62d3]::query::plumbing::try_execute_query::<rustc_query_impl[f26de731c7db3cdf]::DynamicConfig<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>, false, true, false>, rustc_query_impl[f26de731c7db3cdf]::plumbing::QueryCtxt, true>
  26:        0x10c1e3720 - rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::get_query_incr::__rust_end_short_backtrace
  27:        0x10c911018 - rustc_middle[f9c8550300ab6f09]::query::plumbing::query_get_at::<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>>
  28:        0x10c92ecb4 - <core[49ae705414b57eee]::iter::adapters::GenericShunt<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::next
  29:        0x10c904b34 - core[49ae705414b57eee]::iter::adapters::try_process::<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}>>, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>, <core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::try_collect<rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::VariantIdx, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>>>::{closure#0}, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::VariantIdx, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>>>
  30:        0x10c981f70 - rustc_ty_utils[a794283e4f113795]::layout::layout_of
  31:        0x10c19c69c - rustc_query_impl[f26de731c7db3cdf]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2}::{closure#0}, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>
  32:        0x10c16f41c - <rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2} as core[49ae705414b57eee]::ops::function::FnOnce<(rustc_middle[f9c8550300ab6f09]::ty::context::TyCtxt, rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>)>>::call_once
  33:        0x10bf8d0b8 - rustc_query_system[228f95b585b62d3]::query::plumbing::try_execute_query::<rustc_query_impl[f26de731c7db3cdf]::DynamicConfig<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>, false, true, false>, rustc_query_impl[f26de731c7db3cdf]::plumbing::QueryCtxt, true>
  34:        0x10c1e3720 - rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::get_query_incr::__rust_end_short_backtrace
  35:        0x10c911018 - rustc_middle[f9c8550300ab6f09]::query::plumbing::query_get_at::<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>>
  36:        0x10c92de3c - <core[49ae705414b57eee]::iter::adapters::GenericShunt<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::iter::adapters::filter::Filter<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::mir::query::CoroutineSavedLocal>, rustc_ty_utils[a794283e4f113795]::layout::coroutine_layout::{closure#5}::{closure#0}>, rustc_ty_utils[a794283e4f113795]::layout::coroutine_layout::{closure#5}::{closure#1}>, rustc_ty_utils[a794283e4f113795]::layout::coroutine_layout::{closure#5}::{closure#2}>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::next
  37:        0x10c92e08c - <core[49ae705414b57eee]::iter::adapters::GenericShunt<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::iter::adapters::enumerate::Enumerate<core[49ae705414b57eee]::slice::iter::Iter<rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_middle[f9c8550300ab6f09]::mir::query::CoroutineSavedLocal>>>, <rustc_index[b2a6cc6fa1d3293a]::slice::IndexSlice<rustc_abi[d814e14c25533a60]::layout::ty::VariantIdx, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_middle[f9c8550300ab6f09]::mir::query::CoroutineSavedLocal>>>::iter_enumerated::{closure#0}>, rustc_ty_utils[a794283e4f113795]::layout::coroutine_layout::{closure#5}>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::next
  38:        0x10c973284 - rustc_ty_utils[a794283e4f113795]::layout::coroutine_layout
  39:        0x10c982234 - rustc_ty_utils[a794283e4f113795]::layout::layout_of
  40:        0x10c19c69c - rustc_query_impl[f26de731c7db3cdf]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2}::{closure#0}, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>
  41:        0x10c16f41c - <rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2} as core[49ae705414b57eee]::ops::function::FnOnce<(rustc_middle[f9c8550300ab6f09]::ty::context::TyCtxt, rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>)>>::call_once
  42:        0x10bf8d0b8 - rustc_query_system[228f95b585b62d3]::query::plumbing::try_execute_query::<rustc_query_impl[f26de731c7db3cdf]::DynamicConfig<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>, false, true, false>, rustc_query_impl[f26de731c7db3cdf]::plumbing::QueryCtxt, true>
  43:        0x10c1e3720 - rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::get_query_incr::__rust_end_short_backtrace
  44:        0x10c911018 - rustc_middle[f9c8550300ab6f09]::query::plumbing::query_get_at::<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>>
  45:        0x10c92ebbc - <core[49ae705414b57eee]::iter::adapters::GenericShunt<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::next
  46:        0x10c904b34 - core[49ae705414b57eee]::iter::adapters::try_process::<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}>>, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>, <core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::try_collect<rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::VariantIdx, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>>>::{closure#0}, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::VariantIdx, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>>>
  47:        0x10c981f70 - rustc_ty_utils[a794283e4f113795]::layout::layout_of
  48:        0x10c19c69c - rustc_query_impl[f26de731c7db3cdf]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2}::{closure#0}, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>
  49:        0x10c16f41c - <rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2} as core[49ae705414b57eee]::ops::function::FnOnce<(rustc_middle[f9c8550300ab6f09]::ty::context::TyCtxt, rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>)>>::call_once
  50:        0x10bf8d0b8 - rustc_query_system[228f95b585b62d3]::query::plumbing::try_execute_query::<rustc_query_impl[f26de731c7db3cdf]::DynamicConfig<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>, false, true, false>, rustc_query_impl[f26de731c7db3cdf]::plumbing::QueryCtxt, true>
  51:        0x10c1e3720 - rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::get_query_incr::__rust_end_short_backtrace
  52:        0x10c911018 - rustc_middle[f9c8550300ab6f09]::query::plumbing::query_get_at::<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>>
  53:        0x10c92ecb4 - <core[49ae705414b57eee]::iter::adapters::GenericShunt<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::next
  54:        0x10c904b34 - core[49ae705414b57eee]::iter::adapters::try_process::<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}>>, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>, <core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::try_collect<rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::VariantIdx, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>>>::{closure#0}, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::VariantIdx, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>>>
  55:        0x10c981f70 - rustc_ty_utils[a794283e4f113795]::layout::layout_of
  56:        0x10c19c69c - rustc_query_impl[f26de731c7db3cdf]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2}::{closure#0}, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>
  57:        0x10c16f41c - <rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2} as core[49ae705414b57eee]::ops::function::FnOnce<(rustc_middle[f9c8550300ab6f09]::ty::context::TyCtxt, rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>)>>::call_once
  58:        0x10bf8d0b8 - rustc_query_system[228f95b585b62d3]::query::plumbing::try_execute_query::<rustc_query_impl[f26de731c7db3cdf]::DynamicConfig<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>, false, true, false>, rustc_query_impl[f26de731c7db3cdf]::plumbing::QueryCtxt, true>
  59:        0x10c1e3720 - rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::get_query_incr::__rust_end_short_backtrace
  60:        0x10c911018 - rustc_middle[f9c8550300ab6f09]::query::plumbing::query_get_at::<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>>
  61:        0x10c967ce8 - <rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutCx as rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutOf>::spanned_layout_of
  62:        0x10c92f14c - <core[49ae705414b57eee]::iter::adapters::GenericShunt<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::chain::Chain<core[49ae705414b57eee]::iter::adapters::chain::Chain<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::iter::adapters::copied::Copied<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::Ty>>, rustc_ty_utils[a794283e4f113795]::layout::coroutine_layout::{closure#2}>, core[49ae705414b57eee]::iter::sources::once::Once<core[49ae705414b57eee]::result::Result<rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>>>, core[49ae705414b57eee]::iter::adapters::map::Map<rustc_index[b2a6cc6fa1d3293a]::bit_set::BitIter<rustc_middle[f9c8550300ab6f09]::mir::query::CoroutineSavedLocal>, rustc_ty_utils[a794283e4f113795]::layout::coroutine_layout::{closure#1}>>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::next
  63:        0x10c972c90 - rustc_ty_utils[a794283e4f113795]::layout::coroutine_layout
  64:        0x10c982234 - rustc_ty_utils[a794283e4f113795]::layout::layout_of
  65:        0x10c19c69c - rustc_query_impl[f26de731c7db3cdf]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2}::{closure#0}, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>
  66:        0x10c16f41c - <rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2} as core[49ae705414b57eee]::ops::function::FnOnce<(rustc_middle[f9c8550300ab6f09]::ty::context::TyCtxt, rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>)>>::call_once
  67:        0x10bf8d0b8 - rustc_query_system[228f95b585b62d3]::query::plumbing::try_execute_query::<rustc_query_impl[f26de731c7db3cdf]::DynamicConfig<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>, false, true, false>, rustc_query_impl[f26de731c7db3cdf]::plumbing::QueryCtxt, true>
  68:        0x10c1e3720 - rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::get_query_incr::__rust_end_short_backtrace
  69:        0x100626504 - rustc_middle[f9c8550300ab6f09]::query::plumbing::query_get_at::<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>>
  70:        0x1007b1f68 - <clippy_lints[d836abbdd4ae0668]::large_stack_frames::LargeStackFrames as rustc_lint[424dd919a73c5d86]::passes::LateLintPass>::check_fn
  71:        0x10b5bb3f8 - <rustc_lint[424dd919a73c5d86]::late::LateContextAndPass<rustc_lint[424dd919a73c5d86]::late::RuntimeCombinedLateLintPass>>::with_lint_attrs::<<rustc_lint[424dd919a73c5d86]::late::LateContextAndPass<rustc_lint[424dd919a73c5d86]::late::RuntimeCombinedLateLintPass> as rustc_hir[2bff6e7d85ea20b0]::intravisit::Visitor>::visit_expr::{closure#0}::{closure#0}>
  72:        0x10b5c1af4 - <rustc_lint[424dd919a73c5d86]::late::LateContextAndPass<rustc_lint[424dd919a73c5d86]::late::RuntimeCombinedLateLintPass> as rustc_hir[2bff6e7d85ea20b0]::intravisit::Visitor>::visit_nested_body
  73:        0x10b5c26ec - <rustc_lint[424dd919a73c5d86]::late::LateContextAndPass<rustc_lint[424dd919a73c5d86]::late::RuntimeCombinedLateLintPass> as rustc_hir[2bff6e7d85ea20b0]::intravisit::Visitor>::visit_fn
  74:        0x10b5bc2f4 - <rustc_lint[424dd919a73c5d86]::late::LateContextAndPass<rustc_lint[424dd919a73c5d86]::late::RuntimeCombinedLateLintPass>>::with_lint_attrs::<<rustc_lint[424dd919a73c5d86]::late::LateContextAndPass<rustc_lint[424dd919a73c5d86]::late::RuntimeCombinedLateLintPass> as rustc_hir[2bff6e7d85ea20b0]::intravisit::Visitor>::visit_item::{closure#0}>
  75:        0x10b4f8b1c - rustc_hir[2bff6e7d85ea20b0]::intravisit::walk_mod::<rustc_lint[424dd919a73c5d86]::late::LateContextAndPass<rustc_lint[424dd919a73c5d86]::late::RuntimeCombinedLateLintPass>>
  76:        0x10b5bcb08 - <rustc_lint[424dd919a73c5d86]::late::LateContextAndPass<rustc_lint[424dd919a73c5d86]::late::RuntimeCombinedLateLintPass>>::with_lint_attrs::<<rustc_lint[424dd919a73c5d86]::late::LateContextAndPass<rustc_lint[424dd919a73c5d86]::late::RuntimeCombinedLateLintPass> as rustc_hir[2bff6e7d85ea20b0]::intravisit::Visitor>::visit_item::{closure#0}>
  77:        0x10b4f8b1c - rustc_hir[2bff6e7d85ea20b0]::intravisit::walk_mod::<rustc_lint[424dd919a73c5d86]::late::LateContextAndPass<rustc_lint[424dd919a73c5d86]::late::RuntimeCombinedLateLintPass>>
  78:        0x10b5c33f4 - rustc_lint[424dd919a73c5d86]::late::check_crate::{closure#0}
  79:        0x10b5c28c0 - rustc_lint[424dd919a73c5d86]::late::check_crate
  80:        0x10b4c4bf0 - rustc_interface[d1db228e7199bcd9]::passes::analysis
  81:        0x10c19c308 - rustc_query_impl[f26de731c7db3cdf]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[f26de731c7db3cdf]::query_impl::analysis::dynamic_query::{closure#2}::{closure#0}, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 0usize]>>
  82:        0x10bf62e04 - rustc_query_system[228f95b585b62d3]::query::plumbing::try_execute_query::<rustc_query_impl[f26de731c7db3cdf]::DynamicConfig<rustc_query_system[228f95b585b62d3]::query::caches::SingleCache<rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 0usize]>>, false, false, false>, rustc_query_impl[f26de731c7db3cdf]::plumbing::QueryCtxt, true>
  83:        0x10c1a75c8 - rustc_query_impl[f26de731c7db3cdf]::query_impl::analysis::get_query_incr::__rust_end_short_backtrace
  84:        0x10ac50888 - rustc_interface[d1db228e7199bcd9]::passes::create_and_enter_global_ctxt::<core[49ae705414b57eee]::option::Option<rustc_interface[d1db228e7199bcd9]::queries::Linker>, rustc_driver_impl[b3715a2fa479255b]::run_compiler::{closure#0}::{closure#2}>
  85:        0x10ac636a0 - rustc_interface[d1db228e7199bcd9]::interface::run_compiler::<(), rustc_driver_impl[b3715a2fa479255b]::run_compiler::{closure#0}>::{closure#1}
  86:        0x10ac519a0 - std[20377fa5e773de1a]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[d1db228e7199bcd9]::util::run_in_thread_with_globals<rustc_interface[d1db228e7199bcd9]::util::run_in_thread_pool_with_globals<rustc_interface[d1db228e7199bcd9]::interface::run_compiler<(), rustc_driver_impl[b3715a2fa479255b]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>
  87:        0x10ac66670 - <<std[20377fa5e773de1a]::thread::Builder>::spawn_unchecked_<rustc_interface[d1db228e7199bcd9]::util::run_in_thread_with_globals<rustc_interface[d1db228e7199bcd9]::util::run_in_thread_pool_with_globals<rustc_interface[d1db228e7199bcd9]::interface::run_compiler<(), rustc_driver_impl[b3715a2fa479255b]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[49ae705414b57eee]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}
  88:        0x10ca19fd8 - std::sys::pal::unix::thread::Thread::new::thread_start::h67ebfb0d7edd9a8d
  89:        0x19fca606c - __pthread_deallocate


rustc version: 1.86.0-nightly (99db2737c 2025-01-16)
platform: aarch64-apple-darwin

query stack during panic:
#0 [optimized_mir] optimizing MIR for `ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}`
#1 [layout_of] computing layout of `{async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}`
#2 [layout_of] computing layout of `core::mem::manually_drop::ManuallyDrop<{async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}>`
#3 [layout_of] computing layout of `core::mem::maybe_uninit::MaybeUninit<{async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}>`
#4 [layout_of] computing layout of `{async fn body of ingestor::ingestor::Ingestor::start_polling()}`
#5 [layout_of] computing layout of `core::mem::manually_drop::ManuallyDrop<{async fn body of ingestor::ingestor::Ingestor::start_polling()}>`
#6 [layout_of] computing layout of `core::mem::maybe_uninit::MaybeUninit<{async fn body of ingestor::ingestor::Ingestor::start_polling()}>`
#7 [layout_of] computing layout of `{async block@metabased-translator/tests/src/full_meta_node.rs:312:57: 312:67}`
#8 [analysis] running analysis passes on this crate
end of query stack
