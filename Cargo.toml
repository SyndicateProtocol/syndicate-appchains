[workspace]
members = [
  "shared",
  "shared/contract-bindings",
  "shared/test-utils",
  "synd-batch-sequencer",
  "synd-chain-ingestor",
  "synd-maestro",
  "synd-mchain",
  "synd-translator/bin/synd-translator",
  "synd-translator/crates/common",
  "synd-translator/crates/metrics",
  "synd-translator/crates/synd-block-builder",
  "synd-translator/crates/synd-slotter",
  "synd-translator/tests",
  "synd-withdrawals/synd-tee-attestation-zk-proofs/aws-nitro",
  "synd-withdrawals/synd-tee-attestation-zk-proofs/proof-submitter",
  "synd-withdrawals/synd-tee-attestation-zk-proofs/sp1/program",
  "synd-withdrawals/synd-tee-attestation-zk-proofs/sp1/script",
  "test-framework",
]

# Default members are the services that are built by default when running `cargo build` (leveraged by docker build to build less crates)
default-members = [
  "synd-batch-sequencer",
  "synd-chain-ingestor",
  "synd-maestro",
  "synd-mchain",
  "synd-translator/bin/synd-translator",
]

# Explicitly set the resolver to version 2, which is the default for packages with edition >= 2021
# https://doc.rust-lang.org/edition-guide/rust-2021/default-cargo-resolver.html
resolver = "2"

[workspace.package]
edition      = "2021"
exclude      = [".github/"]
homepage     = ""
license      = ""
repository   = ""
rust-version = "1.88"
version      = "0.1.0"

[workspace.dependencies]

# workspace dependencies (members of the workspace)
common                                    = { path = "synd-translator/crates/common" }
contract-bindings                         = { path = "shared/contract-bindings" }
metrics                                   = { path = "synd-translator/crates/metrics" }
shared                                    = { path = "shared" }
synd-block-builder                        = { path = "synd-translator/crates/synd-block-builder" }
synd-chain-ingestor                       = { path = "synd-chain-ingestor" }
synd-maestro                              = { path = "synd-maestro" }
synd-mchain                               = { path = "synd-mchain" }
synd-slotter                              = { path = "synd-translator/crates/synd-slotter" }
synd-tee-attestation-zk-proofs-aws-nitro  = { path = "synd-withdrawals/synd-tee-attestation-zk-proofs/aws-nitro" }
synd-tee-attestation-zk-proofs-sp1-script = { path = "synd-withdrawals/synd-tee-attestation-zk-proofs/sp1/script" }
synd-tee-attestation-zk-proofs-submitter  = { path = "synd-withdrawals/synd-tee-attestation-zk-proofs/proof-submitter" }
synd-translator                           = { path = "synd-translator/bin/synd-translator" }
test-framework                            = { path = "test-framework" }
test-utils                                = { path = "shared/test-utils" }

# dependencies
alloy                              = { version = "1.0.17", default-features = false }
alloy-rlp                          = "0.3.11"
alloy-trie                         = { version = "0.9.0" }
assert_matches                     = "1.5.0"
async-trait                        = { version = "0.1" }
axum                               = "0.8.1"
base64                             = "0.22.1"
bincode                            = "2.0.1"
brotli                             = "8.0.1"
byte-unit                          = "5.1.6"
bytes                              = "1.9.0"
clap                               = { version = "4.5.26" }
const-oid                          = "0.9.6"                                                                                                          # needs to be this version - newer ones are not compatible with the latest x509-cert dependency
derivative                         = "2.2"
dotenv                             = "0.15.0"
eyre                               = { version = "0.6.12" }
figment                            = { version = "0.10.19" }
flate2                             = { version = "1.0.35" }
fs2                                = { version = "0.4.3" }
futures-util                       = "0.3.31"
hex                                = "0.4.3"
http                               = "1.2.0"
http-body                          = "1.0.1"
http-body-util                     = "0.1"
humantime                          = "2.1.0"
hyper                              = { version = "1.5.2" }
jsonrpsee                          = { git = "https://github.com/SyndicateProtocol/jsonrpsee.git", rev = "93860d90dd826ac2cfea1df3a854fce39ecf01f6" }
opentelemetry                      = "0.30.0"
opentelemetry-otlp                 = "0.30.0"
opentelemetry-semantic-conventions = { version = "0.30.0", features = ["semconv_experimental"] }
opentelemetry-stdout               = "0.30.0"
opentelemetry_sdk                  = { version = "0.30.0", features = ["trace"] }
p384                               = "0.13.1"                                                                                                         # NOTE: this lib is NOT AUDITED
pin-project-lite                   = "0.2.16"
prometheus-client                  = { version = "0.23.1" }
rand                               = { version = "0.9.0" }
redis                              = "0.32.2"
reqwest                            = "0.12.12"
risc0-build                        = "2.1.1"
risc0-zkvm                         = "2.0.2"
rlp                                = "0.6.1"
serde                              = { version = "1.0.219", default-features = false }
serde-hex                          = "0.1.0"
serde_cbor                         = { version = "0.11.2", default-features = false }
serde_json                         = { version = "1.0.135", default-features = false }
sp1-build                          = "5.0.0"
sp1-sdk                            = "5.0.3"
sp1-zkvm                           = "5.0.0"
strum                              = "0.27.1"
strum_macros                       = "0.27.1"
thiserror                          = { version = "2.0.11" }
tokio                              = { version = "1.43" }
tokio-util                         = { version = "0.7.10" }
tower                              = { version = "0.5.2" }
tower-layer                        = { version = "0.3.3" }
tower-service                      = { version = "0.3.3" }
tracing                            = "0.1.41"
tracing-opentelemetry              = "0.31.0"
tracing-subscriber                 = "0.3.19"
url                                = { version = "2.5.4" }
wiremock                           = "0.6.3"
x509-cert                          = "0.2.5"

# dev dependencies
const_format = "0.2"
criterion    = "0.6.0"
ctor         = "0.4.1"
mockall      = "0.13.1"
mockito      = "1.7.0"
once_cell    = "1.21.3"
temp-env     = "0.3.6"
test-case    = "3"

[workspace.lints.rust]
missing_debug_implementations = "warn"
missing_docs                  = "warn"
rust_2018_idioms              = { level = "deny", priority = -1 }
unnameable_types              = "warn"
unreachable_pub               = "warn"
unused_must_use               = "deny"
unused_qualifications         = "warn"


[workspace.lints.clippy]
# avoid unexpected panics, these are not allowed in production
expect_used   = "deny"
map_unwrap_or = "deny"
unwrap_used   = "deny"
# # warns
as_ptr_cast_mut                   = "warn"
borrow_as_ptr                     = "warn"
branches_sharing_code             = "warn"
clear_with_drain                  = "warn"
cloned_instead_of_copied          = "warn"
cognitive_complexity              = "warn"
collection_is_never_read          = "warn"
dbg_macro                         = "warn"
debug_assert_with_mut_call        = "warn"
derive_partial_eq_without_eq      = "warn"
doc_markdown                      = "warn"
empty_line_after_doc_comments     = "warn"
empty_line_after_outer_attr       = "warn"
enum_glob_use                     = "warn"
equatable_if_let                  = "warn"
explicit_into_iter_loop           = "warn"
explicit_iter_loop                = "warn"
fallible_impl_from                = "warn"
flat_map_option                   = "warn"
from_iter_instead_of_collect      = "warn"
if_not_else                       = "warn"
if_then_some_else_none            = "warn"
implicit_clone                    = "warn"
imprecise_flops                   = "warn"
iter_on_empty_collections         = "warn"
iter_on_single_items              = "warn"
iter_with_drain                   = "warn"
iter_without_into_iter            = "warn"
large_stack_frames                = "warn"
manual_assert                     = "warn"
manual_clamp                      = "warn"
manual_is_variant_and             = "warn"
manual_string_new                 = "warn"
match_same_arms                   = "warn"
missing_const_for_fn              = "warn"
mutex_integer                     = "warn"
naive_bytecount                   = "warn"
needless_bitwise_bool             = "warn"
needless_collect                  = "warn"
needless_continue                 = "warn"
needless_for_each                 = "warn"
needless_pass_by_ref_mut          = "warn"
non_send_fields_in_send_ty        = "warn"
nonstandard_macro_braces          = "warn"
option_as_ref_cloned              = "warn"
option_if_let_else                = "warn"
or_fun_call                       = "warn"
path_buf_push_overwrite           = "warn"
read_zero_byte_vec                = "warn"
redundant_clone                   = "warn"
redundant_else                    = "warn"
redundant_pub_crate               = "warn"
significant_drop_in_scrutinee     = "warn"
significant_drop_tightening       = "warn"
single_char_pattern               = "warn"
string_lit_as_bytes               = "warn"
string_lit_chars_any              = "warn"
suboptimal_flops                  = "warn"
suspicious_operation_groupings    = "warn"
too_long_first_doc_paragraph      = "warn"
trailing_empty_array              = "warn"
trait_duplication_in_bounds       = "warn"
transmute_undefined_repr          = "warn"
trivial_regex                     = "warn"
tuple_array_conversions           = "warn"
type_repetition_in_bounds         = "warn"
uninhabited_references            = "warn"
unnecessary_self_imports          = "warn"
unnecessary_struct_initialization = "warn"
unnested_or_patterns              = "warn"
unused_peekable                   = "warn"
unused_rounding                   = "warn"
use_self                          = "warn"
useless_let_if_seq                = "warn"
while_float                       = "warn"
zero_sized_map_values             = "warn"
