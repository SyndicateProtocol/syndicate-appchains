#syntax=docker/dockerfile:1.7-labs
# NOTE: This only builds for the `interceptor` profile

# Stage 1: Build the Rust application
FROM rust:latest AS builder

# Set the working directory
WORKDIR /app

# First copy just the workspace Cargo.toml
COPY Cargo.toml .
COPY --parents metabased-sequencer/**/Cargo.toml .
COPY --parents metabased-translator/**/Cargo.toml .

# Create dummy source files for dependency caching
RUN for path in $(find metabased-translator -name Cargo.toml); do mkdir $(dirname $path)/src && echo "fn main() {}" > $(dirname $path)/src/main.rs; done
RUN for path in $(find metabased-sequencer -name Cargo.toml); do mkdir $(dirname $path)/src && echo "fn main() {}" > $(dirname $path)/src/main.rs; done

# Build dependencies only
RUN cargo build --release -p interceptor

# Now copy the actual source code
COPY metabased-sequencer metabased-sequencer/

# Build the binary
RUN cargo build --release -p interceptor

# Stage 2: Create the runtime image
FROM debian:bookworm-slim

# Install required certificates for HTTPS requests and OpenSSL 3 for cryptography support
RUN apt-get update && apt-get install -y ca-certificates openssl libssl-dev && rm -rf /var/lib/apt/lists/*

# Set the working directory
WORKDIR /usr/local/bin

# Copy the compiled binary from the builder stage
COPY --from=builder /app/target/release/interceptor .

# Ensure the binary has execute permissions
RUN chmod +x interceptor

# Expose port 8456
EXPOSE 8456

# Set the entrypoint to the interceptor binary
ENTRYPOINT ["./interceptor"]
