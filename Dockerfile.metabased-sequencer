# NOTE: This only builds for the `interceptor` profile

# Stage 1: Build the Rust application
FROM rust:latest AS builder

# Set the working directory
WORKDIR /app

# First copy workspace root Cargo.toml and workspace member Cargo.toml files
COPY Cargo.toml Cargo.toml
COPY metabased-sequencer/interceptor/Cargo.toml metabased-sequencer/interceptor/Cargo.toml
COPY metabased-sequencer/proxy/Cargo.toml metabased-sequencer/proxy/Cargo.toml
COPY metabased-translator/crates/block-builder/Cargo.toml metabased-translator/crates/block-builder/Cargo.toml
COPY metabased-translator/crates/ingestor/Cargo.toml metabased-translator/crates/ingestor/Cargo.toml
COPY metabased-translator/tests/Cargo.toml metabased-translator/tests/Cargo.toml

# Create dummy source files for all workspace members
RUN mkdir -p \
    metabased-sequencer/interceptor/src \
    metabased-sequencer/proxy/src \
    metabased-translator/crates/block-builder/src \
    metabased-translator/crates/ingestor/src \
    metabased-translator/tests/src && \
    echo "fn main() {}" > metabased-sequencer/interceptor/src/main.rs && \
    echo "fn main() {}" > metabased-sequencer/proxy/src/main.rs && \
    echo "pub fn main() {}" > metabased-translator/crates/block-builder/src/lib.rs && \
    echo "pub fn main() {}" > metabased-translator/crates/ingestor/src/lib.rs && \
    echo "pub fn main() {}" > metabased-translator/tests/src/lib.rs

# Copy all source code
COPY metabased-sequencer metabased-sequencer/
COPY metabased-translator metabased-translator/

# Build the interceptor binary
WORKDIR /app/metabased-sequencer
RUN cargo build --release -p interceptor && \
    ls -la /app/metabased-sequencer/target/release/interceptor

# Create directory structure for the final image
RUN mkdir -p /app/bin && \
    cp /app/metabased-sequencer/target/release/interceptor /app/bin/

# Return to root directory
WORKDIR /app

# Stage 2: Create the runtime image
FROM debian:bookworm-slim

# Install required certificates for HTTPS requests and OpenSSL 3 for cryptography support
RUN apt-get update && apt-get install -y ca-certificates openssl libssl-dev && rm -rf /var/lib/apt/lists/*

# Set the working directory
WORKDIR /usr/local/bin

# Copy the compiled binary from the builder stage
COPY --from=builder /app/bin/interceptor .

# Ensure the binary has execute permissions
RUN chmod +x interceptor

# Expose port 8456
EXPOSE 8456

# Set the entrypoint to the interceptor binary
ENTRYPOINT ["./interceptor"]
