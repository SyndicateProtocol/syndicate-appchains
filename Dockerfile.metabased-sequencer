# NOTE: This only builds for the `interceptor` profile

# Stage 1: Build the Rust application
FROM rust:latest AS builder

# Set the working directory for the build
WORKDIR /app

# First copy workspace root Cargo.toml and interceptor package files
COPY Cargo.toml Cargo.toml
COPY metabased-sequencer/interceptor metabased-sequencer/interceptor/

# Create dummy source files for workspace members required by interceptor
RUN mkdir -p metabased-sequencer/interceptor/src && \
    echo "fn main() {}" > metabased-sequencer/interceptor/src/main.rs

# Build dependencies only for interceptor
RUN cargo build --release -p interceptor

# Copy actual interceptor source code
COPY metabased-sequencer/interceptor metabased-sequencer/interceptor/

# Build the interceptor binary
RUN cargo build --release -p interceptor && \
    mkdir -p /app/bin && \
    cp target/release/interceptor /app/bin/interceptor

# Create directory structure for the final image
RUN mkdir -p /app/bin

# Return to root directory
WORKDIR /app

# Stage 2: Create the runtime image
FROM debian:bookworm-slim

# Install required certificates for HTTPS requests and OpenSSL 3 for cryptography support
RUN apt-get update && apt-get install -y ca-certificates openssl libssl-dev && rm -rf /var/lib/apt/lists/*

# Set the working directory
WORKDIR /usr/local/bin

# Copy the compiled binary from the builder stage
COPY --from=builder /app/bin/interceptor .

# Ensure the binary has execute permissions
RUN chmod +x interceptor

# Expose port 8456
EXPOSE 8456

# Set the entrypoint to the interceptor binary
ENTRYPOINT ["./interceptor"]
