name: Dev Container Tests

on:
  pull_request:
    branches: [ main ]

jobs:
  arb-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Infra + Run Arbitrum L2 + Run Metabased Sequencer + Test transaction
        timeout-minutes: 15
        uses: devcontainers/ci@v0.3
        with:
          imageName: ghcr.io/syndicateprotocol/metabased-devcontainer
          imageTag: cache-pr-${{ github.event.pull_request.number }}
          # Enable caching
          push: always
          # Pull cached images from both main branch and PR branch
          cacheFrom: |
            ghcr.io/syndicateprotocol/metabased-devcontainer:cache-main
            ghcr.io/syndicateprotocol/metabased-devcontainer:cache-pr-${{ github.event.pull_request.number }}
          runCmd: |
            # Set up network
            RESPONSE=$(just -f .devcontainer/justfile arb-network-setup)
            echo "Network setup: $RESPONSE"
            
            # Wait for network setup to complete
            if echo "$RESPONSE" || ! grep -q "Ready to bring up the Arbitrum Orbit devnet"; then
              echo "[✓] Network setup succeeded"
            else
              echo "[✗] Network setup failed"
              exit 1
            fi
            
            # Start Arbitrum node in background
            just -f .devcontainer/justfile arb-up &

            # Wait for Arbitrum node to be ready via health check
            echo "[STATUS] Waiting for Arbitrum node to be ready..."
            until just -f .devcontainer/justfile arb-health-check | grep -q "result"; do
              sleep 10
            done
            echo "[STATUS] Arbitrum node is ready"
            
            # Run sequencer setup
            just -f .devcontainer/justfile arb-sequencer-plus-setup &
            
            # Some time for Rust build to compile. Refactor this to look for completion string
            sleep 60
            
            # Wait for sequencer setup completion via health check
            echo "[STATUS] Waiting for sequencer setup to complete..."
            until just -f .devcontainer/justfile sequencer-health-check | grep -q "result"; do
              sleep 10
            done
            echo "[STATUS] Sequencer setup complete"

            # Exit on error
            set -e
            
            # Run the test command and capture response
            echo "[STATUS] Running test transaction..."
            RESPONSE=$(just -f .devcontainer/justfile arb-test-sendRawTransaction)
            echo "Response: $RESPONSE"
            
            # Check if response contains an error
            if echo "$RESPONSE" | grep -q '"error"'; then
              echo "[ERROR] Transaction failed with error:"
              echo "$RESPONSE"
              exit 1
            fi
            
            # Check if response contains expected result
            if ! echo "$RESPONSE" | grep -q '"result"'; then
              echo "[ERROR] Transaction response missing result field:"
              echo "$RESPONSE"
              exit 1
            fi
            echo "[STATUS] Test L3 -> Arbitrum L2 transaction completed successfully"

      - name: Run OP-Translator
        timeout-minutes: 5
        uses: devcontainers/ci@v0.3
        with:
          imageName: ghcr.io/syndicateprotocol/metabased-devcontainer
          imageTag: cache-pr-${{ github.event.pull_request.number }}
          # Enable caching
          push: always
          # Pull cached images from both main branch and PR branch
          cacheFrom: |
            ghcr.io/syndicateprotocol/metabased-devcontainer:cache-main
            ghcr.io/syndicateprotocol/metabased-devcontainer:cache-pr-${{ github.event.pull_request.number }}
          runCmd: |
            # Start OP-translator in background
            just -f .devcontainer/justfile run-op-translator &
            
            # Wait for OP-translator to be ready via health check
            echo "[STATUS] Waiting for OP-translator to be ready..."
            until just -f .devcontainer/justfile op-translator-health-check | grep -q "result"; do
              sleep 10
            done
            echo "[STATUS] op-translator is ready"


      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: debug-logs
          path: |
            /tmp/sequencer.log
            /tmp/postCreateOutput