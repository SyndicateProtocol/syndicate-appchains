thread 'rustc' panicked at /rustc/99db2737c91d1e4b36b2ffc17dcda5878bcae625/compiler/rustc_query_system/src/query/plumbing.rs:731:9:
Found unstable fingerprints for optimized_mir(ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}): Body { basic_blocks: BasicBlocks { basic_blocks: [BasicBlockData { statements: [_596 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _595 = discriminant((*_596))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: switchInt(move _595) -> [0: bb1, 1: bb515, 2: bb514, 3: bb512, 4: bb513, otherwise: bb93] }), is_cleanup: false }, BasicBlockData { statements: [_594 = move _2, _567 = const false, _597 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), (((*_597) as variant#4).7: bool) = const false, _565 = const false, _564 = const false, _563 = const false, _598 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _599 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), (((*_598) as variant#4).0: &mut ingestor::ingestor::Ingestor) = move ((*_599).0: &mut ingestor::ingestor::Ingestor), StorageLive(_5), StorageLive(_6), _600 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _601 = deref_copy (((*_600) as variant#4).0: &mut ingestor::ingestor::Ingestor), _6 = copy ((*_601).2: u64), StorageLive(_7), StorageLive(_8), StorageLive(_9), StorageLive(_10), _602 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _603 = deref_copy (((*_602) as variant#4).0: &mut ingestor::ingestor::Ingestor), _10 = copy ((*_603).3: u64), StorageLive(_11), _604 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _605 = deref_copy (((*_604) as variant#4).0: &mut ingestor::ingestor::Ingestor), _11 = copy ((*_605).2: u64)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:17: 134:72 (#0), scope: scope[1] }, kind: _9 = std::cmp::max::<u64>(move _10, move _11) -> [return: bb2, unwind: bb500] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_11), StorageDead(_10), _12 = AddWithOverflow(copy _9, const 1_u64)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:17: 134:76 (#0), scope: scope[1] }, kind: assert(!move (_12.1: bool), "attempt to compute `{} + {}`, which would overflow", move _9, const 1_u64) -> [success: bb3, unwind: bb501] }), is_cleanup: false }, BasicBlockData { statements: [_8 = move (_12.0: u64), StorageDead(_9), StorageLive(_13), StorageLive(_14), _606 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _607 = deref_copy (((*_606) as variant#4).0: &mut ingestor::ingestor::Ingestor), _14 = copy ((*_607).2: u64), StorageLive(_15), _608 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _609 = deref_copy (((*_608) as variant#4).0: &mut ingestor::ingestor::Ingestor), _15 = copy ((*_609).4: u64), _16 = AddWithOverflow(copy _14, copy _15)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:135:17: 135:68 (#0), scope: scope[1] }, kind: assert(!move (_16.1: bool), "attempt to compute `{} + {}`, which would overflow", move _14, move _15) -> [success: bb4, unwind: bb498] }), is_cleanup: false }, BasicBlockData { statements: [_13 = move (_16.0: u64), StorageDead(_15), StorageDead(_14)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:133:13: 136:14 (#0), scope: scope[1] }, kind: _7 = std::cmp::min::<u64>(move _8, move _13) -> [return: bb5, unwind: bb499] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_13), StorageDead(_8), _5 = std::ops::Range::<u64> { start: move _6, end: move _7 }, StorageDead(_7), StorageDead(_6), _610 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:29: 137:23 (#0), scope: scope[1] }, kind: (((*_610) as variant#4).1: std::vec::Vec<u64>) = <std::ops::Range<u64> as std::iter::Iterator>::collect::<std::vec::Vec<u64>>(move _5) -> [return: bb6, unwind: bb503] }), is_cleanup: false }, BasicBlockData { statements: [_567 = const true, StorageDead(_5), StorageLive(_17), StorageLive(_18), StorageLive(_19), StorageLive(_20), _562 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[20], _20 = &(*_562), StorageLive(_22), _561 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[19], _22 = &(*_561)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#1924), scope: scope[2] }, kind: _19 = <tracing::Level as std::cmp::PartialOrd<tracing::level_filters::LevelFilter>>::le(move _20, move _22) -> [return: bb7, unwind: bb494] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#1924), scope: scope[2] }, kind: switchInt(move _19) -> [0: bb13, otherwise: bb8] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_22), StorageDead(_20), StorageLive(_24), StorageLive(_25), _560 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[18], _25 = &(*_560), StorageLive(_27), StorageLive(_28)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#1924), scope: scope[2] }, kind: _28 = tracing::level_filters::LevelFilter::current() -> [return: bb9, unwind: bb492] }), is_cleanup: false }, BasicBlockData { statements: [_27 = &_28], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#1924), scope: scope[2] }, kind: _24 = <tracing::Level as std::cmp::PartialOrd<tracing::level_filters::LevelFilter>>::le(move _25, move _27) -> [return: bb10, unwind: bb492] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#1924), scope: scope[2] }, kind: switchInt(move _24) -> [0: bb12, otherwise: bb11] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_28), StorageDead(_27), StorageDead(_25), StorageLive(_29), StorageLive(_30), StorageLive(_31), _31 = const {alloc17: &tracing::callsite::DefaultCallsite}, _30 = &(*_31)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:49 (#1920), scope: scope[2] }, kind: _29 = tracing::callsite::DefaultCallsite::interest(move _30) -> [return: bb15, unwind: bb490] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_28), StorageDead(_27), StorageDead(_25)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[2] }, kind: goto -> bb14 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_22), StorageDead(_20)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[2] }, kind: goto -> bb14 }), is_cleanup: false }, BasicBlockData { statements: [_18 = const false], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:23: 870:10 (#1920), scope: scope[2] }, kind: goto -> bb22 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_30), StorageDead(_31), StorageLive(_32), StorageLive(_33), _33 = &_29], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#1920), scope: scope[4] }, kind: _32 = tracing::subscriber::Interest::is_never(move _33) -> [return: bb16, unwind: bb488] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#1920), scope: scope[4] }, kind: switchInt(move _32) -> [0: bb18, otherwise: bb17] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_33), _18 = const false], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:13: 869:107 (#1920), scope: scope[4] }, kind: goto -> bb21 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_33), StorageLive(_34), StorageLive(_35), StorageLive(_36), StorageLive(_37), _37 = const {alloc17: &tracing::callsite::DefaultCallsite}, _36 = &(*_37)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#1920), scope: scope[4] }, kind: _35 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _36) -> [return: bb19, unwind: bb486] }), is_cleanup: false }, BasicBlockData { statements: [_34 = &(*_35), StorageDead(_36), StorageLive(_38), _38 = move _29], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:37: 869:107 (#1920), scope: scope[4] }, kind: _18 = tracing::__macro_support::__is_enabled(move _34, move _38) -> [return: bb20, unwind: bb485] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_38), StorageDead(_37), StorageDead(_35), StorageDead(_34)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:13: 869:107 (#1920), scope: scope[4] }, kind: goto -> bb21 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_32), StorageDead(_29)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:23: 870:10 (#1920), scope: scope[2] }, kind: goto -> bb22 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_24), StorageDead(_19), StorageLive(_39), _39 = copy _18], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:12: 871:19 (#1920), scope: scope[3] }, kind: switchInt(move _39) -> [0: bb36, otherwise: bb23] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_40), StorageLive(_41), _557 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[15], _41 = &(*_557), StorageLive(_43), StorageLive(_44), StorageLive(_45), StorageLive(_46), StorageLive(_47), StorageLive(_48), StorageLive(_49), StorageLive(_50), StorageLive(_51), _51 = const {alloc17: &tracing::callsite::DefaultCallsite}, _50 = &(*_51)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1920), scope: scope[3] }, kind: _49 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _50) -> [return: bb24, unwind: bb480] }), is_cleanup: false }, BasicBlockData { statements: [_48 = &(*_49), StorageDead(_50)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1920), scope: scope[3] }, kind: _47 = tracing::Metadata::<'_>::fields(move _48) -> [return: bb25, unwind: bb481] }), is_cleanup: false }, BasicBlockData { statements: [_46 = &(*_47), StorageDead(_48)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#1927), scope: scope[3] }, kind: _45 = tracing::field::FieldSet::iter(move _46) -> [return: bb26, unwind: bb482] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_46), StorageDead(_51), StorageDead(_49), StorageDead(_47), StorageLive(_52), StorageLive(_53), StorageLive(_54), StorageLive(_55), StorageLive(_56), StorageLive(_57), _57 = const {alloc17: &tracing::callsite::DefaultCallsite}, _56 = &(*_57)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1920), scope: scope[5] }, kind: _55 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _56) -> [return: bb27, unwind: bb477] }), is_cleanup: false }, BasicBlockData { statements: [_54 = &(*_55), StorageDead(_56)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1920), scope: scope[5] }, kind: _53 = tracing::Metadata::<'_>::fields(move _54) -> [return: bb28, unwind: bb478] }), is_cleanup: false }, BasicBlockData { statements: [_52 = &(*_53), StorageDead(_54), StorageLive(_58), StorageLive(_59), StorageLive(_60), StorageLive(_61), StorageLive(_62), StorageLive(_63), StorageLive(_64), StorageLive(_65), StorageLive(_66), _66 = &mut _45, _65 = &mut (*_66)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#1927), scope: scope[5] }, kind: _64 = <tracing::field::Iter as std::iter::Iterator>::next(move _65) -> [return: bb29, unwind: bb475] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_65), StorageLive(_67), StorageLive(_68), _68 = const "FieldSet corrupted (this is a bug)", _67 = &(*_68)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#1927), scope: scope[5] }, kind: _63 = std::option::Option::<tracing::field::Field>::expect(move _64, move _67) -> [return: bb30, unwind: bb473] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_67), StorageDead(_64), _62 = &_63, StorageLive(_69), StorageLive(_70), StorageLive(_71), StorageLive(_72), StorageLive(_73), StorageLive(_74), StorageLive(_75), StorageLive(_76), _556 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[14], _76 = &(*_556), _75 = &(*_76), StorageLive(_78), StorageLive(_79), StorageLive(_80), StorageLive(_81), StorageLive(_82), StorageLive(_83), _611 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _83 = &(((*_611) as variant#4).1: std::vec::Vec<u64>), _82 = &(*_83)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:33: 138:37 (#1933), scope: scope[5] }, kind: _81 = core::fmt::rt::Argument::<'_>::new_debug::<std::vec::Vec<u64>>(move _82) -> [return: bb31, unwind: bb471] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_82), StorageLive(_84), StorageLive(_85), StorageLive(_86), _612 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _613 = deref_copy (((*_612) as variant#4).0: &mut ingestor::ingestor::Ingestor), _86 = &((*_613).0: common::types::Chain), _85 = &(*_86)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:41: 138:45 (#1933), scope: scope[5] }, kind: _84 = core::fmt::rt::Argument::<'_>::new_debug::<common::types::Chain>(move _85) -> [return: bb32, unwind: bb467] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_85), _80 = [move _81, move _84], StorageDead(_84), StorageDead(_81), _79 = &_80, _78 = &(*_79)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1933), scope: scope[5] }, kind: _74 = std::fmt::Arguments::<'_>::new_v1::<2, 2>(move _75, move _78) -> [return: bb33, unwind: bb468] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_78), StorageDead(_75), _73 = &_74, _72 = &(*_73), _71 = move _72 as &dyn tracing::Value (PointerCoercion(Unsize, AsCast)), StorageDead(_72), _70 = copy _71, _69 = std::option::Option::<&dyn tracing::Value>::Some(move _70), StorageDead(_70), _61 = (move _62, move _69), StorageDead(_69), StorageDead(_62), _60 = [move _61], StorageDead(_61), _59 = &_60, _58 = &(*_59)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#1927), scope: scope[5] }, kind: _44 = tracing::field::FieldSet::value_set::<'_, [(&tracing::field::Field, std::option::Option<&dyn tracing::Value>); 1]>(move _52, move _58) -> [return: bb34, unwind: bb469] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_58), StorageDead(_52), StorageDead(_45), _43 = (move _44,)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#1920), scope: scope[3] }, kind: _40 = <{closure@ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::{closure#0}} as std::ops::Fn<(tracing::field::ValueSet<'_>,)>>::call(move _41, move _43) -> [return: bb35, unwind: bb470] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_44), StorageDead(_43), StorageDead(_41), StorageDead(_86), StorageDead(_83), StorageDead(_80), StorageDead(_79), StorageDead(_76), StorageDead(_74), StorageDead(_73), StorageDead(_71), StorageDead(_68), StorageDead(_66), StorageDead(_63), StorageDead(_60), StorageDead(_59), StorageDead(_57), StorageDead(_55), StorageDead(_53), StorageDead(_40), _17 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#1920), scope: scope[3] }, kind: goto -> bb85 }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_87), StorageLive(_88), StorageLive(_89), StorageLive(_90), StorageLive(_91), _91 = const tracing::Level::TRACE, _92 = discriminant((_91.0: tracing::metadata::LevelInner))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3056:9 (#1939), scope: scope[3] }, kind: switchInt(move _92) -> [1: bb38, 2: bb39, 3: bb40, 4: bb41, otherwise: bb37] }), is_cleanup: false }, BasicBlockData { statements: [_90 = tracing::log::Level::Trace], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3061:18: 3061:43 (#1939), scope: scope[3] }, kind: goto -> bb42 }), is_cleanup: false }, BasicBlockData { statements: [_90 = tracing::log::Level::Debug], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3060:37: 3060:62 (#1939), scope: scope[3] }, kind: goto -> bb42 }), is_cleanup: false }, BasicBlockData { statements: [_90 = tracing::log::Level::Info], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3059:36: 3059:60 (#1939), scope: scope[3] }, kind: goto -> bb42 }), is_cleanup: false }, BasicBlockData { statements: [_90 = tracing::log::Level::Warn], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3058:36: 3058:60 (#1939), scope: scope[3] }, kind: goto -> bb42 }), is_cleanup: false }, BasicBlockData { statements: [_90 = tracing::log::Level::Error], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:37: 3057:62 (#1939), scope: scope[3] }, kind: goto -> bb42 }), is_cleanup: false }, BasicBlockData { statements: [_89 = &_90, StorageLive(_93), _559 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[17], _93 = &(*_559)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#1935), scope: scope[3] }, kind: _88 = <tracing::log::Level as std::cmp::PartialOrd<tracing::log::LevelFilter>>::le(move _89, move _93) -> [return: bb43, unwind: bb465] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#1935), scope: scope[3] }, kind: switchInt(move _88) -> [0: bb83, otherwise: bb44] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_93), StorageDead(_91), StorageDead(_90), StorageDead(_89), StorageLive(_95)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#1935), scope: scope[3] }, kind: _95 = tracing::dispatcher::has_been_set() -> [return: bb45, unwind: bb464] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#1935), scope: scope[3] }, kind: switchInt(move _95) -> [0: bb46, otherwise: bb81] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_96), StorageLive(_97), _97 = const tracing::Level::TRACE, _98 = discriminant((_97.0: tracing::metadata::LevelInner))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3056:9 (#1942), scope: scope[3] }, kind: switchInt(move _98) -> [1: bb48, 2: bb49, 3: bb50, 4: bb51, otherwise: bb47] }), is_cleanup: false }, BasicBlockData { statements: [_96 = tracing::log::Level::Trace], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3061:18: 3061:43 (#1942), scope: scope[3] }, kind: goto -> bb52 }), is_cleanup: false }, BasicBlockData { statements: [_96 = tracing::log::Level::Debug], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3060:37: 3060:62 (#1942), scope: scope[3] }, kind: goto -> bb52 }), is_cleanup: false }, BasicBlockData { statements: [_96 = tracing::log::Level::Info], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3059:36: 3059:60 (#1942), scope: scope[3] }, kind: goto -> bb52 }), is_cleanup: false }, BasicBlockData { statements: [_96 = tracing::log::Level::Warn], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3058:36: 3058:60 (#1942), scope: scope[3] }, kind: goto -> bb52 }), is_cleanup: false }, BasicBlockData { statements: [_96 = tracing::log::Level::Error], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:37: 3057:62 (#1942), scope: scope[3] }, kind: goto -> bb52 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_97), StorageLive(_99), StorageLive(_100), _100 = &_96, StorageLive(_101), StorageLive(_102)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#1941), scope: scope[6] }, kind: _102 = tracing::log::max_level() -> [return: bb53, unwind: bb462] }), is_cleanup: false }, BasicBlockData { statements: [_101 = &_102], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#1941), scope: scope[6] }, kind: _99 = <tracing::log::Level as std::cmp::PartialOrd<tracing::log::LevelFilter>>::le(move _100, move _101) -> [return: bb54, unwind: bb462] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#1941), scope: scope[6] }, kind: switchInt(move _99) -> [0: bb79, otherwise: bb55] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_102), StorageDead(_101), StorageDead(_100), StorageLive(_103), StorageLive(_104), StorageLive(_105), _105 = const {alloc17: &tracing::callsite::DefaultCallsite}, _104 = &(*_105)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:28: 3090:48 (#1941), scope: scope[6] }, kind: _103 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _104) -> [return: bb56, unwind: bb460] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_104), StorageDead(_105), StorageLive(_106), StorageLive(_107), StorageLive(_108), StorageLive(_109), StorageLive(_110), StorageLive(_111), StorageLive(_112)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#1941), scope: scope[7] }, kind: _112 = tracing::log::Metadata::<'_>::builder() -> [return: bb57, unwind: bb457] }), is_cleanup: false }, BasicBlockData { statements: [_111 = &mut _112, StorageLive(_113), _113 = copy _96], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#1941), scope: scope[7] }, kind: _110 = tracing::log::MetadataBuilder::<'_>::level(move _111, move _113) -> [return: bb58, unwind: bb456] }), is_cleanup: false }, BasicBlockData { statements: [_109 = &mut (*_110), StorageDead(_113), StorageDead(_111), StorageLive(_114), StorageLive(_115), StorageLive(_116), _116 = &(*_103)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#1941), scope: scope[7] }, kind: _115 = tracing::Metadata::<'_>::target(move _116) -> [return: bb59, unwind: bb453] }), is_cleanup: false }, BasicBlockData { statements: [_114 = &(*_115), StorageDead(_116)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#1941), scope: scope[7] }, kind: _108 = tracing::log::MetadataBuilder::<'_>::target(move _109, move _114) -> [return: bb60, unwind: bb454] }), is_cleanup: false }, BasicBlockData { statements: [_107 = &(*_108), StorageDead(_114), StorageDead(_109)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3094:29 (#1941), scope: scope[7] }, kind: _106 = tracing::log::MetadataBuilder::<'_>::build(move _107) -> [return: bb61, unwind: bb455] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_107), StorageDead(_115), StorageDead(_112), StorageDead(_110), StorageDead(_108), StorageLive(_117)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:30: 3095:43 (#1941), scope: scope[8] }, kind: _117 = tracing::log::logger() -> [return: bb62, unwind: bb452] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_118), StorageLive(_119), _119 = &(*_117), StorageLive(_120), StorageLive(_121), _121 = &_106, _120 = &(*_121)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#1941), scope: scope[9] }, kind: _118 = <dyn tracing::log::Log as tracing::log::Log>::enabled(move _119, move _120) -> [return: bb63, unwind: bb450] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#1941), scope: scope[9] }, kind: switchInt(move _118) -> [0: bb77, otherwise: bb64] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_121), StorageDead(_120), StorageDead(_119), StorageLive(_122), _122 = &(*_103), StorageLive(_123), StorageLive(_124), _124 = &(*_117), _123 = move _124 as &dyn tracing::log::Log (PointerCoercion(Unsize, Implicit)), StorageDead(_124), StorageLive(_125), _125 = move _106, StorageLive(_126), StorageLive(_127), StorageLive(_128), StorageLive(_129), StorageLive(_130), StorageLive(_131), StorageLive(_132), StorageLive(_133), StorageLive(_134), StorageLive(_135), _135 = const {alloc17: &tracing::callsite::DefaultCallsite}, _134 = &(*_135)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1920), scope: scope[9] }, kind: _133 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _134) -> [return: bb65, unwind: bb446] }), is_cleanup: false }, BasicBlockData { statements: [_132 = &(*_133), StorageDead(_134)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1920), scope: scope[9] }, kind: _131 = tracing::Metadata::<'_>::fields(move _132) -> [return: bb66, unwind: bb447] }), is_cleanup: false }, BasicBlockData { statements: [_130 = &(*_131), StorageDead(_132)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#1944), scope: scope[9] }, kind: _129 = tracing::field::FieldSet::iter(move _130) -> [return: bb67, unwind: bb448] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_130), StorageDead(_135), StorageDead(_133), StorageDead(_131), StorageLive(_136), StorageLive(_137), StorageLive(_138), StorageLive(_139), StorageLive(_140), StorageLive(_141), _141 = const {alloc17: &tracing::callsite::DefaultCallsite}, _140 = &(*_141)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1920), scope: scope[10] }, kind: _139 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _140) -> [return: bb68, unwind: bb443] }), is_cleanup: false }, BasicBlockData { statements: [_138 = &(*_139), StorageDead(_140)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1920), scope: scope[10] }, kind: _137 = tracing::Metadata::<'_>::fields(move _138) -> [return: bb69, unwind: bb444] }), is_cleanup: false }, BasicBlockData { statements: [_136 = &(*_137), StorageDead(_138), StorageLive(_142), StorageLive(_143), StorageLive(_144), StorageLive(_145), StorageLive(_146), StorageLive(_147), StorageLive(_148), StorageLive(_149), StorageLive(_150), _150 = &mut _129, _149 = &mut (*_150)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#1944), scope: scope[10] }, kind: _148 = <tracing::field::Iter as std::iter::Iterator>::next(move _149) -> [return: bb70, unwind: bb441] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_149), StorageLive(_151), StorageLive(_152), _152 = const "FieldSet corrupted (this is a bug)", _151 = &(*_152)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#1944), scope: scope[10] }, kind: _147 = std::option::Option::<tracing::field::Field>::expect(move _148, move _151) -> [return: bb71, unwind: bb439] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_151), StorageDead(_148), _146 = &_147, StorageLive(_153), StorageLive(_154), StorageLive(_155), StorageLive(_156), StorageLive(_157), StorageLive(_158), StorageLive(_159), StorageLive(_160), _558 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[16], _160 = &(*_558), _159 = &(*_160), StorageLive(_162), StorageLive(_163), StorageLive(_164), StorageLive(_165), StorageLive(_166), StorageLive(_167), _614 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _167 = &(((*_614) as variant#4).1: std::vec::Vec<u64>), _166 = &(*_167)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:33: 138:37 (#1950), scope: scope[10] }, kind: _165 = core::fmt::rt::Argument::<'_>::new_debug::<std::vec::Vec<u64>>(move _166) -> [return: bb72, unwind: bb437] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_166), StorageLive(_168), StorageLive(_169), StorageLive(_170), _615 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _616 = deref_copy (((*_615) as variant#4).0: &mut ingestor::ingestor::Ingestor), _170 = &((*_616).0: common::types::Chain), _169 = &(*_170)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:41: 138:45 (#1950), scope: scope[10] }, kind: _168 = core::fmt::rt::Argument::<'_>::new_debug::<common::types::Chain>(move _169) -> [return: bb73, unwind: bb433] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_169), _164 = [move _165, move _168], StorageDead(_168), StorageDead(_165), _163 = &_164, _162 = &(*_163)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1950), scope: scope[10] }, kind: _158 = std::fmt::Arguments::<'_>::new_v1::<2, 2>(move _159, move _162) -> [return: bb74, unwind: bb434] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_162), StorageDead(_159), _157 = &_158, _156 = &(*_157), _155 = move _156 as &dyn tracing::Value (PointerCoercion(Unsize, AsCast)), StorageDead(_156), _154 = copy _155, _153 = std::option::Option::<&dyn tracing::Value>::Some(move _154), StorageDead(_154), _145 = (move _146, move _153), StorageDead(_153), StorageDead(_146), _144 = [move _145], StorageDead(_145), _143 = &_144, _142 = &(*_143)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#1944), scope: scope[10] }, kind: _128 = tracing::field::FieldSet::value_set::<'_, [(&tracing::field::Field, std::option::Option<&dyn tracing::Value>); 1]>(move _136, move _142) -> [return: bb75, unwind: bb435] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_142), StorageDead(_136), StorageDead(_129), _127 = &_128, _126 = &(*_127)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:21: 3097:95 (#1941), scope: scope[9] }, kind: _87 = tracing::__macro_support::__tracing_log(move _122, move _123, move _125, move _126) -> [return: bb76, unwind: bb436] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_126), StorageDead(_125), StorageDead(_123), StorageDead(_122), StorageDead(_170), StorageDead(_167), StorageDead(_164), StorageDead(_163), StorageDead(_160), StorageDead(_158), StorageDead(_157), StorageDead(_155), StorageDead(_152), StorageDead(_150), StorageDead(_147), StorageDead(_144), StorageDead(_143), StorageDead(_141), StorageDead(_139), StorageDead(_137), StorageDead(_128), StorageDead(_127)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:17: 3098:18 (#1941), scope: scope[9] }, kind: goto -> bb78 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_121), StorageDead(_120), StorageDead(_119), _87 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:17: 3098:18 (#1941), scope: scope[9] }, kind: goto -> bb78 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_118), StorageDead(_117), StorageDead(_106), StorageDead(_103)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:13: 3099:14 (#1941), scope: scope[6] }, kind: goto -> bb80 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_102), StorageDead(_101), StorageDead(_100), _87 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:13: 3099:14 (#1941), scope: scope[6] }, kind: goto -> bb80 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_99), StorageDead(_96)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:13: 3135:14 (#1935), scope: scope[3] }, kind: goto -> bb82 }), is_cleanup: false }, BasicBlockData { statements: [_87 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:13: 3135:14 (#1935), scope: scope[3] }, kind: goto -> bb82 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_95)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#1935), scope: scope[3] }, kind: goto -> bb84 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_93), StorageDead(_91), StorageDead(_90), StorageDead(_89), _87 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#1935), scope: scope[3] }, kind: goto -> bb84 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_88), StorageDead(_87), _17 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#1920), scope: scope[3] }, kind: goto -> bb85 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_39), StorageDead(_18), StorageDead(_17), _617 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:140:26: 140:40 (#0), scope: scope[2] }, kind: (((*_617) as variant#4).2: tokio::time::Instant) = tokio::time::Instant::now() -> [return: bb86, unwind: bb497] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_173), StorageLive(_174), StorageLive(_175), StorageLive(_176), StorageLive(_177), _618 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _619 = deref_copy (((*_618) as variant#4).0: &mut ingestor::ingestor::Ingestor), _177 = &((*_619).1: std::sync::Arc<dyn ingestor::eth_client::RPCClient>)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:71 (#0), scope: scope[11] }, kind: _176 = <std::sync::Arc<dyn ingestor::eth_client::RPCClient> as std::ops::Deref>::deref(move _177) -> [return: bb87, unwind: bb428] }), is_cleanup: false }, BasicBlockData { statements: [_175 = &(*_176), StorageDead(_177), StorageLive(_178), _567 = const false, _620 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _178 = move (((*_620) as variant#4).1: std::vec::Vec<u64>)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:71 (#0), scope: scope[11] }, kind: _174 = <dyn ingestor::eth_client::RPCClient as ingestor::eth_client::RPCClient>::batch_get_blocks_and_receipts::<'_, '_>(move _175, move _178) -> [return: bb88, unwind: bb427] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_178), StorageDead(_175)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[11] }, kind: _173 = <std::pin::Pin<std::boxed::Box<dyn std::future::Future<Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>> + std::marker::Send>> as std::future::IntoFuture>::into_future(move _174) -> [return: bb89, unwind: bb430] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_174), _621 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), (((*_621) as variant#3).3: std::pin::Pin<std::boxed::Box<dyn std::future::Future<Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>> + std::marker::Send>>) = move _173], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[12] }, kind: goto -> bb90 }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_181), StorageLive(_182), StorageLive(_183), StorageLive(_184), StorageLive(_185), _622 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _185 = &mut (((*_622) as variant#3).3: std::pin::Pin<std::boxed::Box<dyn std::future::Future<Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>> + std::marker::Send>>), _184 = &mut (*_185)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[12] }, kind: _183 = std::pin::Pin::<&mut std::pin::Pin<std::boxed::Box<dyn std::future::Future<Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>> + std::marker::Send>>>::new_unchecked(move _184) -> [return: bb91, unwind: bb424] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_184), StorageLive(_186), StorageLive(_187), StorageLive(_188), _188 = copy _594, _187 = move _188, _186 = &mut (*_187), StorageDead(_188)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[12] }, kind: _182 = <std::pin::Pin<std::boxed::Box<dyn std::future::Future<Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>> + std::marker::Send>> as std::future::Future>::poll(move _183, move _186) -> [return: bb92, unwind: bb423] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_186), StorageDead(_183), _189 = discriminant(_182)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[12] }, kind: switchInt(move _189) -> [0: bb95, 1: bb94, otherwise: bb93] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[0] }, kind: unreachable }), is_cleanup: false }, BasicBlockData { statements: [_181 = const (), _568 = discriminant(_182), StorageDead(_187), StorageDead(_185), StorageDead(_182), StorageDead(_181), StorageLive(_192), StorageLive(_193), _193 = (), _0 = std::task::Poll::<()>::Pending, StorageDead(_173), StorageDead(_176), StorageDead(_192), StorageDead(_193), _624 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), discriminant((*_624)) = 3], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[12] }, kind: return }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_190), _190 = move ((_182 as Ready).0: std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>), _564 = const true, _565 = const true, _623 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), (((*_623) as variant#4).3: std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>) = move _190, StorageDead(_190), _570 = discriminant(_182), StorageDead(_187), StorageDead(_185), StorageDead(_182), StorageDead(_181), _625 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#1953), scope: scope[11] }, kind: drop((((*_625) as variant#3).3: std::pin::Pin<std::boxed::Box<dyn std::future::Future<Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>> + std::marker::Send>>)) -> [return: bb96, unwind: bb426] }), is_cleanup: false }, BasicBlockData { statements: [_626 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _627 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _194 = discriminant((((*_627) as variant#4).3: std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:9: 141:77 (#0), scope: scope[11] }, kind: switchInt(move _194) -> [0: bb98, 1: bb97, otherwise: bb93] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_387), _628 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _387 = move (((((*_628) as variant#4).3: std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>) as Err).0: ingestor::eth_client::RPCClientError), StorageLive(_388), StorageLive(_389), StorageLive(_390), StorageLive(_391), _548 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[6], _391 = &(*_548), StorageLive(_393), _547 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[5], _393 = &(*_547)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#1959), scope: scope[29] }, kind: _390 = <tracing::Level as std::cmp::PartialOrd<tracing::level_filters::LevelFilter>>::le(move _391, move _393) -> [return: bb197, unwind: bb339] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_195), _629 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), (((*_629) as variant#4).7: bool) = const true, _630 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _195 = move (((((*_630) as variant#4).3: std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>) as Ok).0: std::vec::Vec<common::types::BlockAndReceipts>), StorageLive(_196), StorageLive(_197), _631 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _197 = &(((*_631) as variant#4).2: tokio::time::Instant)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:143:32: 143:52 (#0), scope: scope[14] }, kind: _196 = tokio::time::Instant::elapsed(move _197) -> [return: bb99, unwind: bb419] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_197), StorageLive(_198), StorageLive(_199), _632 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _633 = deref_copy (((*_632) as variant#4).0: &mut ingestor::ingestor::Ingestor), _199 = &((*_633).7: ingestor::metrics::IngestorMetrics), StorageLive(_200), _634 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _635 = deref_copy (((*_634) as variant#4).0: &mut ingestor::ingestor::Ingestor), _200 = copy ((*_635).0: common::types::Chain), StorageLive(_201), _201 = copy _196], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:144:17: 148:18 (#0), scope: scope[15] }, kind: _198 = ingestor::metrics::IngestorMetrics::record_rpc_call(move _199, move _200, const "batch(eth_getBlockByNumber + eth_getBlockReceipts)", move _201) -> [return: bb100, unwind: bb418] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_201), StorageDead(_200), StorageDead(_199), StorageDead(_198), StorageLive(_202), StorageLive(_203), _636 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), (((*_636) as variant#4).7: bool) = const false, _203 = move _195], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#1962), scope: scope[15] }, kind: _202 = <std::vec::Vec<common::types::BlockAndReceipts> as std::iter::IntoIterator>::into_iter(move _203) -> [return: bb101, unwind: bb416] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_203), _637 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), (((*_637) as variant#4).4: std::vec::IntoIter<common::types::BlockAndReceipts>) = move _202], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:17: 156:18 (#1963), scope: scope[16] }, kind: goto -> bb102 }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_205), StorageLive(_207), StorageLive(_208), _638 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _208 = &mut (((*_638) as variant#4).4: std::vec::IntoIter<common::types::BlockAndReceipts>), _207 = &mut (*_208), _639 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#1962), scope: scope[16] }, kind: (((*_639) as variant#4).5: std::option::Option<common::types::BlockAndReceipts>) = <std::vec::IntoIter<common::types::BlockAndReceipts> as std::iter::Iterator>::next(move _207) -> [return: bb103, unwind: bb414] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_207), _640 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _641 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _209 = discriminant((((*_641) as variant#4).5: std::option::Option<common::types::BlockAndReceipts>))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#1962), scope: scope[16] }, kind: switchInt(move _209) -> [0: bb105, 1: bb104, otherwise: bb93] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_211), _642 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _211 = move (((((*_642) as variant#4).5: std::option::Option<common::types::BlockAndReceipts>) as Some).0: common::types::BlockAndReceipts), StorageLive(_212), StorageLive(_213), StorageLive(_214), StorageLive(_215), _643 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _644 = deref_copy (((*_643) as variant#4).0: &mut ingestor::ingestor::Ingestor), _215 = &mut (*_644), StorageLive(_216), _216 = move _211], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:74 (#0), scope: scope[18] }, kind: _214 = ingestor::ingestor::Ingestor::push_block_and_receipts(move _215, move _216) -> [return: bb106, unwind: bb411] }), is_cleanup: false }, BasicBlockData { statements: [_593 = const (), _665 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _572 = discriminant((((*_665) as variant#4).5: std::option::Option<common::types::BlockAndReceipts>)), StorageDead(_208), StorageDead(_205), _653 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[15] }, kind: drop((((*_653) as variant#4).4: std::vec::IntoIter<common::types::BlockAndReceipts>)) -> [return: bb196, unwind: bb417] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_216), StorageDead(_215)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[18] }, kind: _213 = <{async fn body of ingestor::ingestor::Ingestor::push_block_and_receipts()} as std::future::IntoFuture>::into_future(move _214) -> [return: bb107, unwind: bb412] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_214), _645 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), (((*_645) as variant#4).6: {async fn body of ingestor::ingestor::Ingestor::push_block_and_receipts()}) = move _213], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[19] }, kind: goto -> bb108 }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_218), StorageLive(_219), StorageLive(_220), StorageLive(_221), StorageLive(_222), _646 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _222 = &mut (((*_646) as variant#4).6: {async fn body of ingestor::ingestor::Ingestor::push_block_and_receipts()}), _221 = &mut (*_222)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[19] }, kind: _220 = std::pin::Pin::<&mut {async fn body of ingestor::ingestor::Ingestor::push_block_and_receipts()}>::new_unchecked(move _221) -> [return: bb109, unwind: bb409] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_221), StorageLive(_223), StorageLive(_224), StorageLive(_225), _225 = copy _594, _224 = move _225, _223 = &mut (*_224), StorageDead(_225)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[19] }, kind: _219 = <{async fn body of ingestor::ingestor::Ingestor::push_block_and_receipts()} as std::future::Future>::poll(move _220, move _223) -> [return: bb110, unwind: bb408] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_223), StorageDead(_220), _226 = discriminant(_219)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[19] }, kind: switchInt(move _226) -> [0: bb112, 1: bb111, otherwise: bb93] }), is_cleanup: false }, BasicBlockData { statements: [_218 = const (), _574 = discriminant(_219), StorageDead(_224), StorageDead(_222), StorageDead(_219), StorageDead(_218), StorageLive(_229), StorageLive(_230), _230 = (), _0 = std::task::Poll::<()>::Pending, StorageDead(_173), StorageDead(_176), StorageDead(_195), StorageDead(_196), StorageDead(_202), StorageDead(_205), StorageDead(_208), StorageDead(_211), StorageDead(_212), StorageDead(_213), StorageDead(_229), StorageDead(_230), _647 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), discriminant((*_647)) = 4], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[19] }, kind: return }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_227), _227 = move ((_219 as Ready).0: std::result::Result<(), eyre::Report>), _563 = const true, _212 = move _227, StorageDead(_227), _576 = discriminant(_219), StorageDead(_224), StorageDead(_222), StorageDead(_219), StorageDead(_218), _648 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:79: 150:80 (#1964), scope: scope[18] }, kind: drop((((*_648) as variant#4).6: {async fn body of ingestor::ingestor::Ingestor::push_block_and_receipts()})) -> [return: bb113, unwind: bb413] }), is_cleanup: false }, BasicBlockData { statements: [_231 = discriminant(_212)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:28: 150:36 (#0), scope: scope[18] }, kind: switchInt(move _231) -> [1: bb115, otherwise: bb114] }), is_cleanup: false }, BasicBlockData { statements: [_205 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:21: 155:22 (#0), scope: scope[17] }, kind: goto -> bb508 }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_232), _563 = const false, _232 = move ((_212 as Err).0: eyre::Report), StorageLive(_233), StorageLive(_234), StorageLive(_235), StorageLive(_236), _555 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[13], _236 = &(*_555), StorageLive(_238), _554 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[12], _238 = &(*_554)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#1970), scope: scope[18] }, kind: _235 = <tracing::Level as std::cmp::PartialOrd<tracing::level_filters::LevelFilter>>::le(move _236, move _238) -> [return: bb116, unwind: bb404] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#1970), scope: scope[18] }, kind: switchInt(move _235) -> [0: bb122, otherwise: bb117] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_238), StorageDead(_236), StorageLive(_240), StorageLive(_241), _553 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[11], _241 = &(*_553), StorageLive(_243), StorageLive(_244)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#1970), scope: scope[18] }, kind: _244 = tracing::level_filters::LevelFilter::current() -> [return: bb118, unwind: bb402] }), is_cleanup: false }, BasicBlockData { statements: [_243 = &_244], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#1970), scope: scope[18] }, kind: _240 = <tracing::Level as std::cmp::PartialOrd<tracing::level_filters::LevelFilter>>::le(move _241, move _243) -> [return: bb119, unwind: bb402] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#1970), scope: scope[18] }, kind: switchInt(move _240) -> [0: bb121, otherwise: bb120] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_244), StorageDead(_243), StorageDead(_241), StorageLive(_245), StorageLive(_246), StorageLive(_247), _247 = const {alloc18: &tracing::callsite::DefaultCallsite}, _246 = &(*_247)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:49 (#1966), scope: scope[18] }, kind: _245 = tracing::callsite::DefaultCallsite::interest(move _246) -> [return: bb124, unwind: bb400] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_244), StorageDead(_243), StorageDead(_241)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb123 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_238), StorageDead(_236)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb123 }), is_cleanup: false }, BasicBlockData { statements: [_234 = const false], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:23: 870:10 (#1966), scope: scope[18] }, kind: goto -> bb131 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_246), StorageDead(_247), StorageLive(_248), StorageLive(_249), _249 = &_245], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#1966), scope: scope[22] }, kind: _248 = tracing::subscriber::Interest::is_never(move _249) -> [return: bb125, unwind: bb398] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#1966), scope: scope[22] }, kind: switchInt(move _248) -> [0: bb127, otherwise: bb126] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_249), _234 = const false], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:13: 869:107 (#1966), scope: scope[22] }, kind: goto -> bb130 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_249), StorageLive(_250), StorageLive(_251), StorageLive(_252), StorageLive(_253), _253 = const {alloc18: &tracing::callsite::DefaultCallsite}, _252 = &(*_253)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#1966), scope: scope[22] }, kind: _251 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _252) -> [return: bb128, unwind: bb396] }), is_cleanup: false }, BasicBlockData { statements: [_250 = &(*_251), StorageDead(_252), StorageLive(_254), _254 = move _245], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:37: 869:107 (#1966), scope: scope[22] }, kind: _234 = tracing::__macro_support::__is_enabled(move _250, move _254) -> [return: bb129, unwind: bb395] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_254), StorageDead(_253), StorageDead(_251), StorageDead(_250)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:13: 869:107 (#1966), scope: scope[22] }, kind: goto -> bb130 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_248), StorageDead(_245)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:23: 870:10 (#1966), scope: scope[18] }, kind: goto -> bb131 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_240), StorageDead(_235), StorageLive(_255), _255 = copy _234], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:12: 871:19 (#1966), scope: scope[21] }, kind: switchInt(move _255) -> [0: bb145, otherwise: bb132] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_256), StorageLive(_257), _550 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[8], _257 = &(*_550), StorageLive(_259), StorageLive(_260), StorageLive(_261), StorageLive(_262), StorageLive(_263), StorageLive(_264), StorageLive(_265), StorageLive(_266), StorageLive(_267), _267 = const {alloc18: &tracing::callsite::DefaultCallsite}, _266 = &(*_267)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1966), scope: scope[21] }, kind: _265 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _266) -> [return: bb133, unwind: bb390] }), is_cleanup: false }, BasicBlockData { statements: [_264 = &(*_265), StorageDead(_266)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1966), scope: scope[21] }, kind: _263 = tracing::Metadata::<'_>::fields(move _264) -> [return: bb134, unwind: bb391] }), is_cleanup: false }, BasicBlockData { statements: [_262 = &(*_263), StorageDead(_264)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#1973), scope: scope[21] }, kind: _261 = tracing::field::FieldSet::iter(move _262) -> [return: bb135, unwind: bb392] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_262), StorageDead(_267), StorageDead(_265), StorageDead(_263), StorageLive(_268), StorageLive(_269), StorageLive(_270), StorageLive(_271), StorageLive(_272), StorageLive(_273), _273 = const {alloc18: &tracing::callsite::DefaultCallsite}, _272 = &(*_273)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1966), scope: scope[23] }, kind: _271 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _272) -> [return: bb136, unwind: bb387] }), is_cleanup: false }, BasicBlockData { statements: [_270 = &(*_271), StorageDead(_272)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1966), scope: scope[23] }, kind: _269 = tracing::Metadata::<'_>::fields(move _270) -> [return: bb137, unwind: bb388] }), is_cleanup: false }, BasicBlockData { statements: [_268 = &(*_269), StorageDead(_270), StorageLive(_274), StorageLive(_275), StorageLive(_276), StorageLive(_277), StorageLive(_278), StorageLive(_279), StorageLive(_280), StorageLive(_281), StorageLive(_282), _282 = &mut _261, _281 = &mut (*_282)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#1973), scope: scope[23] }, kind: _280 = <tracing::field::Iter as std::iter::Iterator>::next(move _281) -> [return: bb138, unwind: bb385] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_281), StorageLive(_283), StorageLive(_284), _284 = const "FieldSet corrupted (this is a bug)", _283 = &(*_284)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#1973), scope: scope[23] }, kind: _279 = std::option::Option::<tracing::field::Field>::expect(move _280, move _283) -> [return: bb139, unwind: bb383] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_283), StorageDead(_280), _278 = &_279, StorageLive(_285), StorageLive(_286), StorageLive(_287), StorageLive(_288), StorageLive(_289), StorageLive(_290), StorageLive(_291), StorageLive(_292), _549 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[7], _292 = &(*_549), _291 = &(*_292), StorageLive(_294), StorageLive(_295), StorageLive(_296), StorageLive(_297), StorageLive(_298), StorageLive(_299), _649 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _650 = deref_copy (((*_649) as variant#4).0: &mut ingestor::ingestor::Ingestor), _299 = &((*_650).0: common::types::Chain), _298 = &(*_299)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:74: 152:78 (#1979), scope: scope[23] }, kind: _297 = core::fmt::rt::Argument::<'_>::new_debug::<common::types::Chain>(move _298) -> [return: bb140, unwind: bb381] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_298), StorageLive(_300), StorageLive(_301), StorageLive(_302), _302 = &_232, _301 = &(*_302)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:80: 152:84 (#1979), scope: scope[23] }, kind: _300 = core::fmt::rt::Argument::<'_>::new_debug::<eyre::Report>(move _301) -> [return: bb141, unwind: bb377] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_301), _296 = [move _297, move _300], StorageDead(_300), StorageDead(_297), _295 = &_296, _294 = &(*_295)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1979), scope: scope[23] }, kind: _290 = std::fmt::Arguments::<'_>::new_v1::<3, 2>(move _291, move _294) -> [return: bb142, unwind: bb378] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_294), StorageDead(_291), _289 = &_290, _288 = &(*_289), _287 = move _288 as &dyn tracing::Value (PointerCoercion(Unsize, AsCast)), StorageDead(_288), _286 = copy _287, _285 = std::option::Option::<&dyn tracing::Value>::Some(move _286), StorageDead(_286), _277 = (move _278, move _285), StorageDead(_285), StorageDead(_278), _276 = [move _277], StorageDead(_277), _275 = &_276, _274 = &(*_275)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#1973), scope: scope[23] }, kind: _260 = tracing::field::FieldSet::value_set::<'_, [(&tracing::field::Field, std::option::Option<&dyn tracing::Value>); 1]>(move _268, move _274) -> [return: bb143, unwind: bb379] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_274), StorageDead(_268), StorageDead(_261), _259 = (move _260,)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#1966), scope: scope[21] }, kind: _256 = <{closure@ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::{closure#1}} as std::ops::Fn<(tracing::field::ValueSet<'_>,)>>::call(move _257, move _259) -> [return: bb144, unwind: bb380] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_260), StorageDead(_259), StorageDead(_257), StorageDead(_302), StorageDead(_299), StorageDead(_296), StorageDead(_295), StorageDead(_292), StorageDead(_290), StorageDead(_289), StorageDead(_287), StorageDead(_284), StorageDead(_282), StorageDead(_279), StorageDead(_276), StorageDead(_275), StorageDead(_273), StorageDead(_271), StorageDead(_269), StorageDead(_256), _233 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#1966), scope: scope[21] }, kind: goto -> bb194 }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_303), StorageLive(_304), StorageLive(_305), StorageLive(_306), StorageLive(_307), _307 = const tracing::Level::ERROR, _308 = discriminant((_307.0: tracing::metadata::LevelInner))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3056:9 (#1985), scope: scope[21] }, kind: switchInt(move _308) -> [1: bb147, 2: bb148, 3: bb149, 4: bb150, otherwise: bb146] }), is_cleanup: false }, BasicBlockData { statements: [_306 = tracing::log::Level::Trace], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3061:18: 3061:43 (#1985), scope: scope[21] }, kind: goto -> bb151 }), is_cleanup: false }, BasicBlockData { statements: [_306 = tracing::log::Level::Debug], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3060:37: 3060:62 (#1985), scope: scope[21] }, kind: goto -> bb151 }), is_cleanup: false }, BasicBlockData { statements: [_306 = tracing::log::Level::Info], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3059:36: 3059:60 (#1985), scope: scope[21] }, kind: goto -> bb151 }), is_cleanup: false }, BasicBlockData { statements: [_306 = tracing::log::Level::Warn], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3058:36: 3058:60 (#1985), scope: scope[21] }, kind: goto -> bb151 }), is_cleanup: false }, BasicBlockData { statements: [_306 = tracing::log::Level::Error], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:37: 3057:62 (#1985), scope: scope[21] }, kind: goto -> bb151 }), is_cleanup: false }, BasicBlockData { statements: [_305 = &_306, StorageLive(_309), _552 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[10], _309 = &(*_552)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#1981), scope: scope[21] }, kind: _304 = <tracing::log::Level as std::cmp::PartialOrd<tracing::log::LevelFilter>>::le(move _305, move _309) -> [return: bb152, unwind: bb375] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#1981), scope: scope[21] }, kind: switchInt(move _304) -> [0: bb192, otherwise: bb153] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_309), StorageDead(_307), StorageDead(_306), StorageDead(_305), StorageLive(_311)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#1981), scope: scope[21] }, kind: _311 = tracing::dispatcher::has_been_set() -> [return: bb154, unwind: bb374] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#1981), scope: scope[21] }, kind: switchInt(move _311) -> [0: bb155, otherwise: bb190] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_312), StorageLive(_313), _313 = const tracing::Level::ERROR, _314 = discriminant((_313.0: tracing::metadata::LevelInner))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3056:9 (#1988), scope: scope[21] }, kind: switchInt(move _314) -> [1: bb157, 2: bb158, 3: bb159, 4: bb160, otherwise: bb156] }), is_cleanup: false }, BasicBlockData { statements: [_312 = tracing::log::Level::Trace], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3061:18: 3061:43 (#1988), scope: scope[21] }, kind: goto -> bb161 }), is_cleanup: false }, BasicBlockData { statements: [_312 = tracing::log::Level::Debug], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3060:37: 3060:62 (#1988), scope: scope[21] }, kind: goto -> bb161 }), is_cleanup: false }, BasicBlockData { statements: [_312 = tracing::log::Level::Info], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3059:36: 3059:60 (#1988), scope: scope[21] }, kind: goto -> bb161 }), is_cleanup: false }, BasicBlockData { statements: [_312 = tracing::log::Level::Warn], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3058:36: 3058:60 (#1988), scope: scope[21] }, kind: goto -> bb161 }), is_cleanup: false }, BasicBlockData { statements: [_312 = tracing::log::Level::Error], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:37: 3057:62 (#1988), scope: scope[21] }, kind: goto -> bb161 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_313), StorageLive(_315), StorageLive(_316), _316 = &_312, StorageLive(_317), StorageLive(_318)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#1987), scope: scope[24] }, kind: _318 = tracing::log::max_level() -> [return: bb162, unwind: bb372] }), is_cleanup: false }, BasicBlockData { statements: [_317 = &_318], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#1987), scope: scope[24] }, kind: _315 = <tracing::log::Level as std::cmp::PartialOrd<tracing::log::LevelFilter>>::le(move _316, move _317) -> [return: bb163, unwind: bb372] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#1987), scope: scope[24] }, kind: switchInt(move _315) -> [0: bb188, otherwise: bb164] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_318), StorageDead(_317), StorageDead(_316), StorageLive(_319), StorageLive(_320), StorageLive(_321), _321 = const {alloc18: &tracing::callsite::DefaultCallsite}, _320 = &(*_321)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:28: 3090:48 (#1987), scope: scope[24] }, kind: _319 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _320) -> [return: bb165, unwind: bb370] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_320), StorageDead(_321), StorageLive(_322), StorageLive(_323), StorageLive(_324), StorageLive(_325), StorageLive(_326), StorageLive(_327), StorageLive(_328)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#1987), scope: scope[25] }, kind: _328 = tracing::log::Metadata::<'_>::builder() -> [return: bb166, unwind: bb367] }), is_cleanup: false }, BasicBlockData { statements: [_327 = &mut _328, StorageLive(_329), _329 = copy _312], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#1987), scope: scope[25] }, kind: _326 = tracing::log::MetadataBuilder::<'_>::level(move _327, move _329) -> [return: bb167, unwind: bb366] }), is_cleanup: false }, BasicBlockData { statements: [_325 = &mut (*_326), StorageDead(_329), StorageDead(_327), StorageLive(_330), StorageLive(_331), StorageLive(_332), _332 = &(*_319)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#1987), scope: scope[25] }, kind: _331 = tracing::Metadata::<'_>::target(move _332) -> [return: bb168, unwind: bb363] }), is_cleanup: false }, BasicBlockData { statements: [_330 = &(*_331), StorageDead(_332)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#1987), scope: scope[25] }, kind: _324 = tracing::log::MetadataBuilder::<'_>::target(move _325, move _330) -> [return: bb169, unwind: bb364] }), is_cleanup: false }, BasicBlockData { statements: [_323 = &(*_324), StorageDead(_330), StorageDead(_325)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3094:29 (#1987), scope: scope[25] }, kind: _322 = tracing::log::MetadataBuilder::<'_>::build(move _323) -> [return: bb170, unwind: bb365] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_323), StorageDead(_331), StorageDead(_328), StorageDead(_326), StorageDead(_324), StorageLive(_333)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:30: 3095:43 (#1987), scope: scope[26] }, kind: _333 = tracing::log::logger() -> [return: bb171, unwind: bb362] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_334), StorageLive(_335), _335 = &(*_333), StorageLive(_336), StorageLive(_337), _337 = &_322, _336 = &(*_337)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#1987), scope: scope[27] }, kind: _334 = <dyn tracing::log::Log as tracing::log::Log>::enabled(move _335, move _336) -> [return: bb172, unwind: bb360] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#1987), scope: scope[27] }, kind: switchInt(move _334) -> [0: bb186, otherwise: bb173] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_337), StorageDead(_336), StorageDead(_335), StorageLive(_338), _338 = &(*_319), StorageLive(_339), StorageLive(_340), _340 = &(*_333), _339 = move _340 as &dyn tracing::log::Log (PointerCoercion(Unsize, Implicit)), StorageDead(_340), StorageLive(_341), _341 = move _322, StorageLive(_342), StorageLive(_343), StorageLive(_344), StorageLive(_345), StorageLive(_346), StorageLive(_347), StorageLive(_348), StorageLive(_349), StorageLive(_350), StorageLive(_351), _351 = const {alloc18: &tracing::callsite::DefaultCallsite}, _350 = &(*_351)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1966), scope: scope[27] }, kind: _349 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _350) -> [return: bb174, unwind: bb356] }), is_cleanup: false }, BasicBlockData { statements: [_348 = &(*_349), StorageDead(_350)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1966), scope: scope[27] }, kind: _347 = tracing::Metadata::<'_>::fields(move _348) -> [return: bb175, unwind: bb357] }), is_cleanup: false }, BasicBlockData { statements: [_346 = &(*_347), StorageDead(_348)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#1990), scope: scope[27] }, kind: _345 = tracing::field::FieldSet::iter(move _346) -> [return: bb176, unwind: bb358] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_346), StorageDead(_351), StorageDead(_349), StorageDead(_347), StorageLive(_352), StorageLive(_353), StorageLive(_354), StorageLive(_355), StorageLive(_356), StorageLive(_357), _357 = const {alloc18: &tracing::callsite::DefaultCallsite}, _356 = &(*_357)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1966), scope: scope[28] }, kind: _355 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _356) -> [return: bb177, unwind: bb353] }), is_cleanup: false }, BasicBlockData { statements: [_354 = &(*_355), StorageDead(_356)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1966), scope: scope[28] }, kind: _353 = tracing::Metadata::<'_>::fields(move _354) -> [return: bb178, unwind: bb354] }), is_cleanup: false }, BasicBlockData { statements: [_352 = &(*_353), StorageDead(_354), StorageLive(_358), StorageLive(_359), StorageLive(_360), StorageLive(_361), StorageLive(_362), StorageLive(_363), StorageLive(_364), StorageLive(_365), StorageLive(_366), _366 = &mut _345, _365 = &mut (*_366)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#1990), scope: scope[28] }, kind: _364 = <tracing::field::Iter as std::iter::Iterator>::next(move _365) -> [return: bb179, unwind: bb351] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_365), StorageLive(_367), StorageLive(_368), _368 = const "FieldSet corrupted (this is a bug)", _367 = &(*_368)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#1990), scope: scope[28] }, kind: _363 = std::option::Option::<tracing::field::Field>::expect(move _364, move _367) -> [return: bb180, unwind: bb349] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_367), StorageDead(_364), _362 = &_363, StorageLive(_369), StorageLive(_370), StorageLive(_371), StorageLive(_372), StorageLive(_373), StorageLive(_374), StorageLive(_375), StorageLive(_376), _551 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[9], _376 = &(*_551), _375 = &(*_376), StorageLive(_378), StorageLive(_379), StorageLive(_380), StorageLive(_381), StorageLive(_382), StorageLive(_383), _651 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _652 = deref_copy (((*_651) as variant#4).0: &mut ingestor::ingestor::Ingestor), _383 = &((*_652).0: common::types::Chain), _382 = &(*_383)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:74: 152:78 (#1996), scope: scope[28] }, kind: _381 = core::fmt::rt::Argument::<'_>::new_debug::<common::types::Chain>(move _382) -> [return: bb181, unwind: bb347] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_382), StorageLive(_384), StorageLive(_385), StorageLive(_386), _386 = &_232, _385 = &(*_386)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:80: 152:84 (#1996), scope: scope[28] }, kind: _384 = core::fmt::rt::Argument::<'_>::new_debug::<eyre::Report>(move _385) -> [return: bb182, unwind: bb343] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_385), _380 = [move _381, move _384], StorageDead(_384), StorageDead(_381), _379 = &_380, _378 = &(*_379)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1996), scope: scope[28] }, kind: _374 = std::fmt::Arguments::<'_>::new_v1::<3, 2>(move _375, move _378) -> [return: bb183, unwind: bb344] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_378), StorageDead(_375), _373 = &_374, _372 = &(*_373), _371 = move _372 as &dyn tracing::Value (PointerCoercion(Unsize, AsCast)), StorageDead(_372), _370 = copy _371, _369 = std::option::Option::<&dyn tracing::Value>::Some(move _370), StorageDead(_370), _361 = (move _362, move _369), StorageDead(_369), StorageDead(_362), _360 = [move _361], StorageDead(_361), _359 = &_360, _358 = &(*_359)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#1990), scope: scope[28] }, kind: _344 = tracing::field::FieldSet::value_set::<'_, [(&tracing::field::Field, std::option::Option<&dyn tracing::Value>); 1]>(move _352, move _358) -> [return: bb184, unwind: bb345] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_358), StorageDead(_352), StorageDead(_345), _343 = &_344, _342 = &(*_343)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:21: 3097:95 (#1987), scope: scope[27] }, kind: _303 = tracing::__macro_support::__tracing_log(move _338, move _339, move _341, move _342) -> [return: bb185, unwind: bb346] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_342), StorageDead(_341), StorageDead(_339), StorageDead(_338), StorageDead(_386), StorageDead(_383), StorageDead(_380), StorageDead(_379), StorageDead(_376), StorageDead(_374), StorageDead(_373), StorageDead(_371), StorageDead(_368), StorageDead(_366), StorageDead(_363), StorageDead(_360), StorageDead(_359), StorageDead(_357), StorageDead(_355), StorageDead(_353), StorageDead(_344), StorageDead(_343)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:17: 3098:18 (#1987), scope: scope[27] }, kind: goto -> bb187 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_337), StorageDead(_336), StorageDead(_335), _303 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:17: 3098:18 (#1987), scope: scope[27] }, kind: goto -> bb187 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_334), StorageDead(_333), StorageDead(_322), StorageDead(_319)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:13: 3099:14 (#1987), scope: scope[24] }, kind: goto -> bb189 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_318), StorageDead(_317), StorageDead(_316), _303 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:13: 3099:14 (#1987), scope: scope[24] }, kind: goto -> bb189 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_315), StorageDead(_312)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:13: 3135:14 (#1981), scope: scope[21] }, kind: goto -> bb191 }), is_cleanup: false }, BasicBlockData { statements: [_303 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:13: 3135:14 (#1981), scope: scope[21] }, kind: goto -> bb191 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_311)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#1981), scope: scope[21] }, kind: goto -> bb193 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_309), StorageDead(_307), StorageDead(_306), StorageDead(_305), _303 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#1981), scope: scope[21] }, kind: goto -> bb193 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_304), StorageDead(_303), _233 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#1966), scope: scope[21] }, kind: goto -> bb194 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_255), StorageDead(_234), StorageDead(_233), _205 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:155:21: 155:22 (#0), scope: scope[17] }, kind: drop(_232) -> [return: bb195, unwind: bb407] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_232)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:21: 155:22 (#0), scope: scope[17] }, kind: goto -> bb508 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_202), StorageDead(_196), _654 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), (((*_654) as variant#4).7: bool) = const false, StorageDead(_195)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:157:13: 157:14 (#0), scope: scope[11] }, kind: goto -> bb277 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#1959), scope: scope[29] }, kind: switchInt(move _390) -> [0: bb203, otherwise: bb198] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_393), StorageDead(_391), StorageLive(_395), StorageLive(_396), _546 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[4], _396 = &(*_546), StorageLive(_398), StorageLive(_399)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#1959), scope: scope[29] }, kind: _399 = tracing::level_filters::LevelFilter::current() -> [return: bb199, unwind: bb337] }), is_cleanup: false }, BasicBlockData { statements: [_398 = &_399], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#1959), scope: scope[29] }, kind: _395 = <tracing::Level as std::cmp::PartialOrd<tracing::level_filters::LevelFilter>>::le(move _396, move _398) -> [return: bb200, unwind: bb337] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#1959), scope: scope[29] }, kind: switchInt(move _395) -> [0: bb202, otherwise: bb201] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_399), StorageDead(_398), StorageDead(_396), StorageLive(_400), StorageLive(_401), StorageLive(_402), _402 = const {alloc19: &tracing::callsite::DefaultCallsite}, _401 = &(*_402)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:49 (#1955), scope: scope[29] }, kind: _400 = tracing::callsite::DefaultCallsite::interest(move _401) -> [return: bb205, unwind: bb335] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_399), StorageDead(_398), StorageDead(_396)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[29] }, kind: goto -> bb204 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_393), StorageDead(_391)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[29] }, kind: goto -> bb204 }), is_cleanup: false }, BasicBlockData { statements: [_389 = const false], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:23: 870:10 (#1955), scope: scope[29] }, kind: goto -> bb212 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_401), StorageDead(_402), StorageLive(_403), StorageLive(_404), _404 = &_400], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#1955), scope: scope[31] }, kind: _403 = tracing::subscriber::Interest::is_never(move _404) -> [return: bb206, unwind: bb333] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#1955), scope: scope[31] }, kind: switchInt(move _403) -> [0: bb208, otherwise: bb207] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_404), _389 = const false], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:13: 869:107 (#1955), scope: scope[31] }, kind: goto -> bb211 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_404), StorageLive(_405), StorageLive(_406), StorageLive(_407), StorageLive(_408), _408 = const {alloc19: &tracing::callsite::DefaultCallsite}, _407 = &(*_408)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#1955), scope: scope[31] }, kind: _406 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _407) -> [return: bb209, unwind: bb331] }), is_cleanup: false }, BasicBlockData { statements: [_405 = &(*_406), StorageDead(_407), StorageLive(_409), _409 = move _400], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:37: 869:107 (#1955), scope: scope[31] }, kind: _389 = tracing::__macro_support::__is_enabled(move _405, move _409) -> [return: bb210, unwind: bb330] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_409), StorageDead(_408), StorageDead(_406), StorageDead(_405)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:13: 869:107 (#1955), scope: scope[31] }, kind: goto -> bb211 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_403), StorageDead(_400)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:23: 870:10 (#1955), scope: scope[29] }, kind: goto -> bb212 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_395), StorageDead(_390), StorageLive(_410), _410 = copy _389], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:12: 871:19 (#1955), scope: scope[30] }, kind: switchInt(move _410) -> [0: bb226, otherwise: bb213] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_411), StorageLive(_412), _543 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[1], _412 = &(*_543), StorageLive(_414), StorageLive(_415), StorageLive(_416), StorageLive(_417), StorageLive(_418), StorageLive(_419), StorageLive(_420), StorageLive(_421), StorageLive(_422), _422 = const {alloc19: &tracing::callsite::DefaultCallsite}, _421 = &(*_422)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1955), scope: scope[30] }, kind: _420 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _421) -> [return: bb214, unwind: bb325] }), is_cleanup: false }, BasicBlockData { statements: [_419 = &(*_420), StorageDead(_421)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1955), scope: scope[30] }, kind: _418 = tracing::Metadata::<'_>::fields(move _419) -> [return: bb215, unwind: bb326] }), is_cleanup: false }, BasicBlockData { statements: [_417 = &(*_418), StorageDead(_419)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#1999), scope: scope[30] }, kind: _416 = tracing::field::FieldSet::iter(move _417) -> [return: bb216, unwind: bb327] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_417), StorageDead(_422), StorageDead(_420), StorageDead(_418), StorageLive(_423), StorageLive(_424), StorageLive(_425), StorageLive(_426), StorageLive(_427), StorageLive(_428), _428 = const {alloc19: &tracing::callsite::DefaultCallsite}, _427 = &(*_428)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1955), scope: scope[32] }, kind: _426 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _427) -> [return: bb217, unwind: bb322] }), is_cleanup: false }, BasicBlockData { statements: [_425 = &(*_426), StorageDead(_427)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1955), scope: scope[32] }, kind: _424 = tracing::Metadata::<'_>::fields(move _425) -> [return: bb218, unwind: bb323] }), is_cleanup: false }, BasicBlockData { statements: [_423 = &(*_424), StorageDead(_425), StorageLive(_429), StorageLive(_430), StorageLive(_431), StorageLive(_432), StorageLive(_433), StorageLive(_434), StorageLive(_435), StorageLive(_436), StorageLive(_437), _437 = &mut _416, _436 = &mut (*_437)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#1999), scope: scope[32] }, kind: _435 = <tracing::field::Iter as std::iter::Iterator>::next(move _436) -> [return: bb219, unwind: bb320] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_436), StorageLive(_438), StorageLive(_439), _439 = const "FieldSet corrupted (this is a bug)", _438 = &(*_439)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#1999), scope: scope[32] }, kind: _434 = std::option::Option::<tracing::field::Field>::expect(move _435, move _438) -> [return: bb220, unwind: bb318] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_438), StorageDead(_435), _433 = &_434, StorageLive(_440), StorageLive(_441), StorageLive(_442), StorageLive(_443), StorageLive(_444), StorageLive(_445), StorageLive(_446), StorageLive(_447), _542 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[0], _447 = &(*_542), _446 = &(*_447), StorageLive(_449), StorageLive(_450), StorageLive(_451), StorageLive(_452), StorageLive(_453), StorageLive(_454), _655 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _656 = deref_copy (((*_655) as variant#4).0: &mut ingestor::ingestor::Ingestor), _454 = &((*_656).0: common::types::Chain), _453 = &(*_454)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:77: 160:81 (#2005), scope: scope[32] }, kind: _452 = core::fmt::rt::Argument::<'_>::new_debug::<common::types::Chain>(move _453) -> [return: bb221, unwind: bb316] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_453), StorageLive(_455), StorageLive(_456), StorageLive(_457), _457 = &_387, _456 = &(*_457)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:83: 160:87 (#2005), scope: scope[32] }, kind: _455 = core::fmt::rt::Argument::<'_>::new_debug::<ingestor::eth_client::RPCClientError>(move _456) -> [return: bb222, unwind: bb312] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_456), _451 = [move _452, move _455], StorageDead(_455), StorageDead(_452), _450 = &_451, _449 = &(*_450)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2005), scope: scope[32] }, kind: _445 = std::fmt::Arguments::<'_>::new_v1::<2, 2>(move _446, move _449) -> [return: bb223, unwind: bb313] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_449), StorageDead(_446), _444 = &_445, _443 = &(*_444), _442 = move _443 as &dyn tracing::Value (PointerCoercion(Unsize, AsCast)), StorageDead(_443), _441 = copy _442, _440 = std::option::Option::<&dyn tracing::Value>::Some(move _441), StorageDead(_441), _432 = (move _433, move _440), StorageDead(_440), StorageDead(_433), _431 = [move _432], StorageDead(_432), _430 = &_431, _429 = &(*_430)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#1999), scope: scope[32] }, kind: _415 = tracing::field::FieldSet::value_set::<'_, [(&tracing::field::Field, std::option::Option<&dyn tracing::Value>); 1]>(move _423, move _429) -> [return: bb224, unwind: bb314] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_429), StorageDead(_423), StorageDead(_416), _414 = (move _415,)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#1955), scope: scope[30] }, kind: _411 = <{closure@ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::{closure#2}} as std::ops::Fn<(tracing::field::ValueSet<'_>,)>>::call(move _412, move _414) -> [return: bb225, unwind: bb315] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_415), StorageDead(_414), StorageDead(_412), StorageDead(_457), StorageDead(_454), StorageDead(_451), StorageDead(_450), StorageDead(_447), StorageDead(_445), StorageDead(_444), StorageDead(_442), StorageDead(_439), StorageDead(_437), StorageDead(_434), StorageDead(_431), StorageDead(_430), StorageDead(_428), StorageDead(_426), StorageDead(_424), StorageDead(_411), _388 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#1955), scope: scope[30] }, kind: goto -> bb275 }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_458), StorageLive(_459), StorageLive(_460), StorageLive(_461), StorageLive(_462), _462 = const tracing::Level::ERROR, _463 = discriminant((_462.0: tracing::metadata::LevelInner))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3056:9 (#2011), scope: scope[30] }, kind: switchInt(move _463) -> [1: bb228, 2: bb229, 3: bb230, 4: bb231, otherwise: bb227] }), is_cleanup: false }, BasicBlockData { statements: [_461 = tracing::log::Level::Trace], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3061:18: 3061:43 (#2011), scope: scope[30] }, kind: goto -> bb232 }), is_cleanup: false }, BasicBlockData { statements: [_461 = tracing::log::Level::Debug], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3060:37: 3060:62 (#2011), scope: scope[30] }, kind: goto -> bb232 }), is_cleanup: false }, BasicBlockData { statements: [_461 = tracing::log::Level::Info], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3059:36: 3059:60 (#2011), scope: scope[30] }, kind: goto -> bb232 }), is_cleanup: false }, BasicBlockData { statements: [_461 = tracing::log::Level::Warn], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3058:36: 3058:60 (#2011), scope: scope[30] }, kind: goto -> bb232 }), is_cleanup: false }, BasicBlockData { statements: [_461 = tracing::log::Level::Error], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:37: 3057:62 (#2011), scope: scope[30] }, kind: goto -> bb232 }), is_cleanup: false }, BasicBlockData { statements: [_460 = &_461, StorageLive(_464), _545 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[3], _464 = &(*_545)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#2007), scope: scope[30] }, kind: _459 = <tracing::log::Level as std::cmp::PartialOrd<tracing::log::LevelFilter>>::le(move _460, move _464) -> [return: bb233, unwind: bb310] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#2007), scope: scope[30] }, kind: switchInt(move _459) -> [0: bb273, otherwise: bb234] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_464), StorageDead(_462), StorageDead(_461), StorageDead(_460), StorageLive(_466)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#2007), scope: scope[30] }, kind: _466 = tracing::dispatcher::has_been_set() -> [return: bb235, unwind: bb309] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#2007), scope: scope[30] }, kind: switchInt(move _466) -> [0: bb236, otherwise: bb271] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_467), StorageLive(_468), _468 = const tracing::Level::ERROR, _469 = discriminant((_468.0: tracing::metadata::LevelInner))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3056:9 (#2014), scope: scope[30] }, kind: switchInt(move _469) -> [1: bb238, 2: bb239, 3: bb240, 4: bb241, otherwise: bb237] }), is_cleanup: false }, BasicBlockData { statements: [_467 = tracing::log::Level::Trace], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3061:18: 3061:43 (#2014), scope: scope[30] }, kind: goto -> bb242 }), is_cleanup: false }, BasicBlockData { statements: [_467 = tracing::log::Level::Debug], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3060:37: 3060:62 (#2014), scope: scope[30] }, kind: goto -> bb242 }), is_cleanup: false }, BasicBlockData { statements: [_467 = tracing::log::Level::Info], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3059:36: 3059:60 (#2014), scope: scope[30] }, kind: goto -> bb242 }), is_cleanup: false }, BasicBlockData { statements: [_467 = tracing::log::Level::Warn], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3058:36: 3058:60 (#2014), scope: scope[30] }, kind: goto -> bb242 }), is_cleanup: false }, BasicBlockData { statements: [_467 = tracing::log::Level::Error], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:37: 3057:62 (#2014), scope: scope[30] }, kind: goto -> bb242 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_468), StorageLive(_470), StorageLive(_471), _471 = &_467, StorageLive(_472), StorageLive(_473)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2013), scope: scope[33] }, kind: _473 = tracing::log::max_level() -> [return: bb243, unwind: bb307] }), is_cleanup: false }, BasicBlockData { statements: [_472 = &_473], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#2013), scope: scope[33] }, kind: _470 = <tracing::log::Level as std::cmp::PartialOrd<tracing::log::LevelFilter>>::le(move _471, move _472) -> [return: bb244, unwind: bb307] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#2013), scope: scope[33] }, kind: switchInt(move _470) -> [0: bb269, otherwise: bb245] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_473), StorageDead(_472), StorageDead(_471), StorageLive(_474), StorageLive(_475), StorageLive(_476), _476 = const {alloc19: &tracing::callsite::DefaultCallsite}, _475 = &(*_476)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:28: 3090:48 (#2013), scope: scope[33] }, kind: _474 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _475) -> [return: bb246, unwind: bb305] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_475), StorageDead(_476), StorageLive(_477), StorageLive(_478), StorageLive(_479), StorageLive(_480), StorageLive(_481), StorageLive(_482), StorageLive(_483)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2013), scope: scope[34] }, kind: _483 = tracing::log::Metadata::<'_>::builder() -> [return: bb247, unwind: bb302] }), is_cleanup: false }, BasicBlockData { statements: [_482 = &mut _483, StorageLive(_484), _484 = copy _467], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2013), scope: scope[34] }, kind: _481 = tracing::log::MetadataBuilder::<'_>::level(move _482, move _484) -> [return: bb248, unwind: bb301] }), is_cleanup: false }, BasicBlockData { statements: [_480 = &mut (*_481), StorageDead(_484), StorageDead(_482), StorageLive(_485), StorageLive(_486), StorageLive(_487), _487 = &(*_474)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2013), scope: scope[34] }, kind: _486 = tracing::Metadata::<'_>::target(move _487) -> [return: bb249, unwind: bb298] }), is_cleanup: false }, BasicBlockData { statements: [_485 = &(*_486), StorageDead(_487)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2013), scope: scope[34] }, kind: _479 = tracing::log::MetadataBuilder::<'_>::target(move _480, move _485) -> [return: bb250, unwind: bb299] }), is_cleanup: false }, BasicBlockData { statements: [_478 = &(*_479), StorageDead(_485), StorageDead(_480)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3094:29 (#2013), scope: scope[34] }, kind: _477 = tracing::log::MetadataBuilder::<'_>::build(move _478) -> [return: bb251, unwind: bb300] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_478), StorageDead(_486), StorageDead(_483), StorageDead(_481), StorageDead(_479), StorageLive(_488)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:30: 3095:43 (#2013), scope: scope[35] }, kind: _488 = tracing::log::logger() -> [return: bb252, unwind: bb297] }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_489), StorageLive(_490), _490 = &(*_488), StorageLive(_491), StorageLive(_492), _492 = &_477, _491 = &(*_492)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#2013), scope: scope[36] }, kind: _489 = <dyn tracing::log::Log as tracing::log::Log>::enabled(move _490, move _491) -> [return: bb253, unwind: bb295] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#2013), scope: scope[36] }, kind: switchInt(move _489) -> [0: bb267, otherwise: bb254] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_492), StorageDead(_491), StorageDead(_490), StorageLive(_493), _493 = &(*_474), StorageLive(_494), StorageLive(_495), _495 = &(*_488), _494 = move _495 as &dyn tracing::log::Log (PointerCoercion(Unsize, Implicit)), StorageDead(_495), StorageLive(_496), _496 = move _477, StorageLive(_497), StorageLive(_498), StorageLive(_499), StorageLive(_500), StorageLive(_501), StorageLive(_502), StorageLive(_503), StorageLive(_504), StorageLive(_505), StorageLive(_506), _506 = const {alloc19: &tracing::callsite::DefaultCallsite}, _505 = &(*_506)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1955), scope: scope[36] }, kind: _504 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _505) -> [return: bb255, unwind: bb291] }), is_cleanup: false }, BasicBlockData { statements: [_503 = &(*_504), StorageDead(_505)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1955), scope: scope[36] }, kind: _502 = tracing::Metadata::<'_>::fields(move _503) -> [return: bb256, unwind: bb292] }), is_cleanup: false }, BasicBlockData { statements: [_501 = &(*_502), StorageDead(_503)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#2016), scope: scope[36] }, kind: _500 = tracing::field::FieldSet::iter(move _501) -> [return: bb257, unwind: bb293] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_501), StorageDead(_506), StorageDead(_504), StorageDead(_502), StorageLive(_507), StorageLive(_508), StorageLive(_509), StorageLive(_510), StorageLive(_511), StorageLive(_512), _512 = const {alloc19: &tracing::callsite::DefaultCallsite}, _511 = &(*_512)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1955), scope: scope[37] }, kind: _510 = <tracing::callsite::DefaultCallsite as tracing::Callsite>::metadata(move _511) -> [return: bb258, unwind: bb288] }), is_cleanup: false }, BasicBlockData { statements: [_509 = &(*_510), StorageDead(_511)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1955), scope: scope[37] }, kind: _508 = tracing::Metadata::<'_>::fields(move _509) -> [return: bb259, unwind: bb289] }), is_cleanup: false }, BasicBlockData { statements: [_507 = &(*_508), StorageDead(_509), StorageLive(_513), StorageLive(_514), StorageLive(_515), StorageLive(_516), StorageLive(_517), StorageLive(_518), StorageLive(_519), StorageLive(_520), StorageLive(_521), _521 = &mut _500, _520 = &mut (*_521)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2016), scope: scope[37] }, kind: _519 = <tracing::field::Iter as std::iter::Iterator>::next(move _520) -> [return: bb260, unwind: bb286] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_520), StorageLive(_522), StorageLive(_523), _523 = const "FieldSet corrupted (this is a bug)", _522 = &(*_523)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2016), scope: scope[37] }, kind: _518 = std::option::Option::<tracing::field::Field>::expect(move _519, move _522) -> [return: bb261, unwind: bb284] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_522), StorageDead(_519), _517 = &_518, StorageLive(_524), StorageLive(_525), StorageLive(_526), StorageLive(_527), StorageLive(_528), StorageLive(_529), StorageLive(_530), StorageLive(_531), _544 = const ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}::promoted[2], _531 = &(*_544), _530 = &(*_531), StorageLive(_533), StorageLive(_534), StorageLive(_535), StorageLive(_536), StorageLive(_537), StorageLive(_538), _657 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _658 = deref_copy (((*_657) as variant#4).0: &mut ingestor::ingestor::Ingestor), _538 = &((*_658).0: common::types::Chain), _537 = &(*_538)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:77: 160:81 (#2022), scope: scope[37] }, kind: _536 = core::fmt::rt::Argument::<'_>::new_debug::<common::types::Chain>(move _537) -> [return: bb262, unwind: bb282] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_537), StorageLive(_539), StorageLive(_540), StorageLive(_541), _541 = &_387, _540 = &(*_541)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:83: 160:87 (#2022), scope: scope[37] }, kind: _539 = core::fmt::rt::Argument::<'_>::new_debug::<ingestor::eth_client::RPCClientError>(move _540) -> [return: bb263, unwind: bb278] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_540), _535 = [move _536, move _539], StorageDead(_539), StorageDead(_536), _534 = &_535, _533 = &(*_534)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2022), scope: scope[37] }, kind: _529 = std::fmt::Arguments::<'_>::new_v1::<2, 2>(move _530, move _533) -> [return: bb264, unwind: bb279] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_533), StorageDead(_530), _528 = &_529, _527 = &(*_528), _526 = move _527 as &dyn tracing::Value (PointerCoercion(Unsize, AsCast)), StorageDead(_527), _525 = copy _526, _524 = std::option::Option::<&dyn tracing::Value>::Some(move _525), StorageDead(_525), _516 = (move _517, move _524), StorageDead(_524), StorageDead(_517), _515 = [move _516], StorageDead(_516), _514 = &_515, _513 = &(*_514)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#2016), scope: scope[37] }, kind: _499 = tracing::field::FieldSet::value_set::<'_, [(&tracing::field::Field, std::option::Option<&dyn tracing::Value>); 1]>(move _507, move _513) -> [return: bb265, unwind: bb280] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_513), StorageDead(_507), StorageDead(_500), _498 = &_499, _497 = &(*_498)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:21: 3097:95 (#2013), scope: scope[36] }, kind: _458 = tracing::__macro_support::__tracing_log(move _493, move _494, move _496, move _497) -> [return: bb266, unwind: bb281] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_497), StorageDead(_496), StorageDead(_494), StorageDead(_493), StorageDead(_541), StorageDead(_538), StorageDead(_535), StorageDead(_534), StorageDead(_531), StorageDead(_529), StorageDead(_528), StorageDead(_526), StorageDead(_523), StorageDead(_521), StorageDead(_518), StorageDead(_515), StorageDead(_514), StorageDead(_512), StorageDead(_510), StorageDead(_508), StorageDead(_499), StorageDead(_498)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:17: 3098:18 (#2013), scope: scope[36] }, kind: goto -> bb268 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_492), StorageDead(_491), StorageDead(_490), _458 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:17: 3098:18 (#2013), scope: scope[36] }, kind: goto -> bb268 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_489), StorageDead(_488), StorageDead(_477), StorageDead(_474)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:13: 3099:14 (#2013), scope: scope[33] }, kind: goto -> bb270 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_473), StorageDead(_472), StorageDead(_471), _458 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:13: 3099:14 (#2013), scope: scope[33] }, kind: goto -> bb270 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_470), StorageDead(_467)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:13: 3135:14 (#2007), scope: scope[30] }, kind: goto -> bb272 }), is_cleanup: false }, BasicBlockData { statements: [_458 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:13: 3135:14 (#2007), scope: scope[30] }, kind: goto -> bb272 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_466)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#2007), scope: scope[30] }, kind: goto -> bb274 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_464), StorageDead(_462), StorageDead(_461), StorageDead(_460), _458 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#2007), scope: scope[30] }, kind: goto -> bb274 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_459), StorageDead(_458), _388 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#1955), scope: scope[30] }, kind: goto -> bb275 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_410), StorageDead(_389), StorageDead(_388), _593 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:163:13: 163:14 (#0), scope: scope[11] }, kind: drop(_387) -> [return: bb276, unwind: bb342] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_387)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:163:13: 163:14 (#0), scope: scope[11] }, kind: goto -> bb277 }), is_cleanup: false }, BasicBlockData { statements: [_567 = const false, _667 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _582 = discriminant((((*_667) as variant#4).3: std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>)), StorageDead(_176), StorageDead(_173), _564 = const false, _565 = const false, _0 = std::task::Poll::<()>::Ready(move _593), _659 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), discriminant((*_659)) = 1], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:6: 165:6 (#0), scope: scope[0] }, kind: return }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_540), StorageDead(_539), StorageDead(_536)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[37] }, kind: goto -> bb279 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_533), StorageDead(_530), StorageDead(_527), StorageDead(_525), StorageDead(_524), StorageDead(_517), StorageDead(_516)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[37] }, kind: goto -> bb280 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_513), StorageDead(_507), StorageDead(_500)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb281 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_497), StorageDead(_496), StorageDead(_494), StorageDead(_493), StorageDead(_541)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb283 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_537), StorageDead(_536), StorageDead(_533), StorageDead(_530), StorageDead(_527), StorageDead(_525), StorageDead(_524), StorageDead(_517), StorageDead(_516), StorageDead(_513), StorageDead(_507), StorageDead(_500), StorageDead(_497), StorageDead(_496), StorageDead(_494), StorageDead(_493)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb283 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_538), StorageDead(_535), StorageDead(_534), StorageDead(_531), StorageDead(_529), StorageDead(_528), StorageDead(_526)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb285 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_522), StorageDead(_519), StorageDead(_517), StorageDead(_516), StorageDead(_513), StorageDead(_507), StorageDead(_500), StorageDead(_497), StorageDead(_496), StorageDead(_494), StorageDead(_493)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb285 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_523)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb287 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_520), StorageDead(_519), StorageDead(_517), StorageDead(_516), StorageDead(_513), StorageDead(_507), StorageDead(_500), StorageDead(_497), StorageDead(_496), StorageDead(_494), StorageDead(_493)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb287 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_521), StorageDead(_518), StorageDead(_515), StorageDead(_514)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb290 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_511)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[37] }, kind: goto -> bb289 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_509), StorageDead(_507), StorageDead(_500), StorageDead(_497), StorageDead(_496), StorageDead(_494), StorageDead(_493)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb290 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_512), StorageDead(_510), StorageDead(_508)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb294 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_505)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb292 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_503)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb293 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_501), StorageDead(_506), StorageDead(_504), StorageDead(_502), StorageDead(_500), StorageDead(_497), StorageDead(_496), StorageDead(_494), StorageDead(_493)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb294 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_499), StorageDead(_498)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb296 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_492), StorageDead(_491), StorageDead(_490)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb296 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_489)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[36] }, kind: goto -> bb297 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_488)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[35] }, kind: goto -> bb304 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_487)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[34] }, kind: goto -> bb299 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_485), StorageDead(_480)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[34] }, kind: goto -> bb300 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_478), StorageDead(_486)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[34] }, kind: goto -> bb303 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_484)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[34] }, kind: goto -> bb302 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_482), StorageDead(_480), StorageDead(_478)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[34] }, kind: goto -> bb303 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_483), StorageDead(_481), StorageDead(_479)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[34] }, kind: goto -> bb304 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_477)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[34] }, kind: goto -> bb306 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_475), StorageDead(_476)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[33] }, kind: goto -> bb306 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_474)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[33] }, kind: goto -> bb308 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_473), StorageDead(_472), StorageDead(_471)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[33] }, kind: goto -> bb308 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_470), StorageDead(_467)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb309 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_466)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb311 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_464), StorageDead(_462), StorageDead(_461), StorageDead(_460)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb311 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_459), StorageDead(_458)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb329 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_456), StorageDead(_455), StorageDead(_452)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[32] }, kind: goto -> bb313 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_449), StorageDead(_446), StorageDead(_443), StorageDead(_441), StorageDead(_440), StorageDead(_433), StorageDead(_432)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[32] }, kind: goto -> bb314 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_429), StorageDead(_423), StorageDead(_416)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb315 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_415), StorageDead(_414), StorageDead(_412), StorageDead(_457)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb317 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_453), StorageDead(_452), StorageDead(_449), StorageDead(_446), StorageDead(_443), StorageDead(_441), StorageDead(_440), StorageDead(_433), StorageDead(_432), StorageDead(_429), StorageDead(_423), StorageDead(_416), StorageDead(_415), StorageDead(_414), StorageDead(_412)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb317 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_454), StorageDead(_451), StorageDead(_450), StorageDead(_447), StorageDead(_445), StorageDead(_444), StorageDead(_442)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb319 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_438), StorageDead(_435), StorageDead(_433), StorageDead(_432), StorageDead(_429), StorageDead(_423), StorageDead(_416), StorageDead(_415), StorageDead(_414), StorageDead(_412)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb319 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_439)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb321 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_436), StorageDead(_435), StorageDead(_433), StorageDead(_432), StorageDead(_429), StorageDead(_423), StorageDead(_416), StorageDead(_415), StorageDead(_414), StorageDead(_412)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb321 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_437), StorageDead(_434), StorageDead(_431), StorageDead(_430)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb324 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_427)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[32] }, kind: goto -> bb323 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_425), StorageDead(_423), StorageDead(_416), StorageDead(_415), StorageDead(_414), StorageDead(_412)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb324 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_428), StorageDead(_426), StorageDead(_424)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb328 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_421)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb326 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_419)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb327 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_417), StorageDead(_422), StorageDead(_420), StorageDead(_418), StorageDead(_416), StorageDead(_415), StorageDead(_414), StorageDead(_412)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb328 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_411)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb329 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_410)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[30] }, kind: goto -> bb341 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_409)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[31] }, kind: goto -> bb332 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_407)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[31] }, kind: goto -> bb332 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_408), StorageDead(_406), StorageDead(_405)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[31] }, kind: goto -> bb334 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_404)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[31] }, kind: goto -> bb334 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_403)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[31] }, kind: goto -> bb336 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_401), StorageDead(_402)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[29] }, kind: goto -> bb336 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_400)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[29] }, kind: goto -> bb338 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_399), StorageDead(_398), StorageDead(_396)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[29] }, kind: goto -> bb338 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_395)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[29] }, kind: goto -> bb340 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_393), StorageDead(_391)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[29] }, kind: goto -> bb340 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_390)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[29] }, kind: goto -> bb341 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_389), StorageDead(_388)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:163:13: 163:14 (#0), scope: scope[11] }, kind: drop(_387) -> [return: bb342, unwind terminate(cleanup)] }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_387)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[11] }, kind: goto -> bb422 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_385), StorageDead(_384), StorageDead(_381)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[28] }, kind: goto -> bb344 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_378), StorageDead(_375), StorageDead(_372), StorageDead(_370), StorageDead(_369), StorageDead(_362), StorageDead(_361)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[28] }, kind: goto -> bb345 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_358), StorageDead(_352), StorageDead(_345)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb346 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_342), StorageDead(_341), StorageDead(_339), StorageDead(_338), StorageDead(_386)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb348 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_382), StorageDead(_381), StorageDead(_378), StorageDead(_375), StorageDead(_372), StorageDead(_370), StorageDead(_369), StorageDead(_362), StorageDead(_361), StorageDead(_358), StorageDead(_352), StorageDead(_345), StorageDead(_342), StorageDead(_341), StorageDead(_339), StorageDead(_338)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb348 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_383), StorageDead(_380), StorageDead(_379), StorageDead(_376), StorageDead(_374), StorageDead(_373), StorageDead(_371)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb350 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_367), StorageDead(_364), StorageDead(_362), StorageDead(_361), StorageDead(_358), StorageDead(_352), StorageDead(_345), StorageDead(_342), StorageDead(_341), StorageDead(_339), StorageDead(_338)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb350 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_368)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb352 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_365), StorageDead(_364), StorageDead(_362), StorageDead(_361), StorageDead(_358), StorageDead(_352), StorageDead(_345), StorageDead(_342), StorageDead(_341), StorageDead(_339), StorageDead(_338)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb352 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_366), StorageDead(_363), StorageDead(_360), StorageDead(_359)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb355 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_356)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[28] }, kind: goto -> bb354 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_354), StorageDead(_352), StorageDead(_345), StorageDead(_342), StorageDead(_341), StorageDead(_339), StorageDead(_338)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb355 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_357), StorageDead(_355), StorageDead(_353)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb359 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_350)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb357 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_348)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb358 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_346), StorageDead(_351), StorageDead(_349), StorageDead(_347), StorageDead(_345), StorageDead(_342), StorageDead(_341), StorageDead(_339), StorageDead(_338)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb359 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_344), StorageDead(_343)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb361 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_337), StorageDead(_336), StorageDead(_335)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb361 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_334)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[27] }, kind: goto -> bb362 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_333)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[26] }, kind: goto -> bb369 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_332)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[25] }, kind: goto -> bb364 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_330), StorageDead(_325)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[25] }, kind: goto -> bb365 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_323), StorageDead(_331)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[25] }, kind: goto -> bb368 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_329)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[25] }, kind: goto -> bb367 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_327), StorageDead(_325), StorageDead(_323)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[25] }, kind: goto -> bb368 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_328), StorageDead(_326), StorageDead(_324)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[25] }, kind: goto -> bb369 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_322)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[25] }, kind: goto -> bb371 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_320), StorageDead(_321)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[24] }, kind: goto -> bb371 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_319)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[24] }, kind: goto -> bb373 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_318), StorageDead(_317), StorageDead(_316)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[24] }, kind: goto -> bb373 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_315), StorageDead(_312)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb374 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_311)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb376 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_309), StorageDead(_307), StorageDead(_306), StorageDead(_305)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb376 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_304), StorageDead(_303)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb394 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_301), StorageDead(_300), StorageDead(_297)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[23] }, kind: goto -> bb378 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_294), StorageDead(_291), StorageDead(_288), StorageDead(_286), StorageDead(_285), StorageDead(_278), StorageDead(_277)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[23] }, kind: goto -> bb379 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_274), StorageDead(_268), StorageDead(_261)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb380 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_260), StorageDead(_259), StorageDead(_257), StorageDead(_302)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb382 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_298), StorageDead(_297), StorageDead(_294), StorageDead(_291), StorageDead(_288), StorageDead(_286), StorageDead(_285), StorageDead(_278), StorageDead(_277), StorageDead(_274), StorageDead(_268), StorageDead(_261), StorageDead(_260), StorageDead(_259), StorageDead(_257)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb382 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_299), StorageDead(_296), StorageDead(_295), StorageDead(_292), StorageDead(_290), StorageDead(_289), StorageDead(_287)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb384 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_283), StorageDead(_280), StorageDead(_278), StorageDead(_277), StorageDead(_274), StorageDead(_268), StorageDead(_261), StorageDead(_260), StorageDead(_259), StorageDead(_257)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb384 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_284)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb386 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_281), StorageDead(_280), StorageDead(_278), StorageDead(_277), StorageDead(_274), StorageDead(_268), StorageDead(_261), StorageDead(_260), StorageDead(_259), StorageDead(_257)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb386 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_282), StorageDead(_279), StorageDead(_276), StorageDead(_275)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb389 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_272)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[23] }, kind: goto -> bb388 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_270), StorageDead(_268), StorageDead(_261), StorageDead(_260), StorageDead(_259), StorageDead(_257)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb389 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_273), StorageDead(_271), StorageDead(_269)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb393 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_266)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb391 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_264)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb392 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_262), StorageDead(_267), StorageDead(_265), StorageDead(_263), StorageDead(_261), StorageDead(_260), StorageDead(_259), StorageDead(_257)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb393 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_256)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb394 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_255)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[21] }, kind: goto -> bb406 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_254)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[22] }, kind: goto -> bb397 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_252)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[22] }, kind: goto -> bb397 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_253), StorageDead(_251), StorageDead(_250)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[22] }, kind: goto -> bb399 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_249)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[22] }, kind: goto -> bb399 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_248)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[22] }, kind: goto -> bb401 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_246), StorageDead(_247)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb401 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_245)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb403 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_244), StorageDead(_243), StorageDead(_241)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb403 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_240)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb405 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_238), StorageDead(_236)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb405 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_235)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb406 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_234), StorageDead(_233)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:155:21: 155:22 (#0), scope: scope[17] }, kind: drop(_232) -> [return: bb407, unwind terminate(cleanup)] }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_232), _588 = discriminant(_212)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[16] }, kind: goto -> bb413 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_223), StorageDead(_220), StorageDead(_224)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[19] }, kind: goto -> bb410 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_221), StorageDead(_220)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[19] }, kind: goto -> bb410 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_222), StorageDead(_219), StorageDead(_218), _660 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:79: 150:80 (#1964), scope: scope[18] }, kind: drop((((*_660) as variant#4).6: {async fn body of ingestor::ingestor::Ingestor::push_block_and_receipts()})) -> [return: bb413, unwind terminate(cleanup)] }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_216), StorageDead(_215)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb412 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_214)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[18] }, kind: goto -> bb413 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_213), _563 = const false, StorageDead(_212), StorageDead(_211), _668 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _589 = discriminant((((*_668) as variant#4).5: std::option::Option<common::types::BlockAndReceipts>))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[16] }, kind: goto -> bb415 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_207)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[16] }, kind: goto -> bb415 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_208), StorageDead(_205), _661 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[15] }, kind: drop((((*_661) as variant#4).4: std::vec::IntoIter<common::types::BlockAndReceipts>)) -> [return: bb417, unwind terminate(cleanup)] }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_203)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[15] }, kind: goto -> bb417 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_202)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[15] }, kind: goto -> bb420 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_201), StorageDead(_200), StorageDead(_199), StorageDead(_198)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[15] }, kind: goto -> bb420 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_197)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[14] }, kind: goto -> bb420 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_196), _669 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:157:13: 157:14 (#0), scope: scope[11] }, kind: switchInt(copy (((*_669) as variant#4).7: bool)) -> [0: bb421, otherwise: bb509] }), is_cleanup: true }, BasicBlockData { statements: [_662 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), (((*_662) as variant#4).7: bool) = const false, StorageDead(_195)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[11] }, kind: goto -> bb422 }), is_cleanup: true }, BasicBlockData { statements: [_567 = const false, _670 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _590 = discriminant((((*_670) as variant#4).3: std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb432 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_186), StorageDead(_183), StorageDead(_187)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[12] }, kind: goto -> bb425 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_184), StorageDead(_183)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[12] }, kind: goto -> bb425 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_185), StorageDead(_182), StorageDead(_181), _663 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#1953), scope: scope[11] }, kind: drop((((*_663) as variant#3).3: std::pin::Pin<std::boxed::Box<dyn std::future::Future<Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>> + std::marker::Send>>)) -> [return: bb426, unwind terminate(cleanup)] }), is_cleanup: true }, BasicBlockData { statements: [_567 = const false], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb432 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_178)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[11] }, kind: goto -> bb429 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_177)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[11] }, kind: goto -> bb429 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_175)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[11] }, kind: goto -> bb430 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_174)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: switchInt(copy _567) -> [0: bb431, otherwise: bb510] }), is_cleanup: true }, BasicBlockData { statements: [_567 = const false], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb432 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_176), StorageDead(_173), _564 = const false, _565 = const false], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb511 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_169), StorageDead(_168), StorageDead(_165)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[10] }, kind: goto -> bb434 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_162), StorageDead(_159), StorageDead(_156), StorageDead(_154), StorageDead(_153), StorageDead(_146), StorageDead(_145)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[10] }, kind: goto -> bb435 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_142), StorageDead(_136), StorageDead(_129)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb436 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_126), StorageDead(_125), StorageDead(_123), StorageDead(_122), StorageDead(_170)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb438 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_166), StorageDead(_165), StorageDead(_162), StorageDead(_159), StorageDead(_156), StorageDead(_154), StorageDead(_153), StorageDead(_146), StorageDead(_145), StorageDead(_142), StorageDead(_136), StorageDead(_129), StorageDead(_126), StorageDead(_125), StorageDead(_123), StorageDead(_122)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb438 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_167), StorageDead(_164), StorageDead(_163), StorageDead(_160), StorageDead(_158), StorageDead(_157), StorageDead(_155)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb440 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_151), StorageDead(_148), StorageDead(_146), StorageDead(_145), StorageDead(_142), StorageDead(_136), StorageDead(_129), StorageDead(_126), StorageDead(_125), StorageDead(_123), StorageDead(_122)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb440 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_152)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb442 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_149), StorageDead(_148), StorageDead(_146), StorageDead(_145), StorageDead(_142), StorageDead(_136), StorageDead(_129), StorageDead(_126), StorageDead(_125), StorageDead(_123), StorageDead(_122)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb442 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_150), StorageDead(_147), StorageDead(_144), StorageDead(_143)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb445 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_140)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[10] }, kind: goto -> bb444 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_138), StorageDead(_136), StorageDead(_129), StorageDead(_126), StorageDead(_125), StorageDead(_123), StorageDead(_122)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb445 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_141), StorageDead(_139), StorageDead(_137)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb449 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_134)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb447 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_132)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb448 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_130), StorageDead(_135), StorageDead(_133), StorageDead(_131), StorageDead(_129), StorageDead(_126), StorageDead(_125), StorageDead(_123), StorageDead(_122)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb449 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_128), StorageDead(_127)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb451 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_121), StorageDead(_120), StorageDead(_119)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb451 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_118)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[9] }, kind: goto -> bb452 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_117)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[8] }, kind: goto -> bb459 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_116)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[7] }, kind: goto -> bb454 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_114), StorageDead(_109)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[7] }, kind: goto -> bb455 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_107), StorageDead(_115)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[7] }, kind: goto -> bb458 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_113)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[7] }, kind: goto -> bb457 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_111), StorageDead(_109), StorageDead(_107)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[7] }, kind: goto -> bb458 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_112), StorageDead(_110), StorageDead(_108)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[7] }, kind: goto -> bb459 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_106)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[7] }, kind: goto -> bb461 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_104), StorageDead(_105)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[6] }, kind: goto -> bb461 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_103)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[6] }, kind: goto -> bb463 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_102), StorageDead(_101), StorageDead(_100)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[6] }, kind: goto -> bb463 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_99), StorageDead(_96)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb464 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_95)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb466 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_93), StorageDead(_91), StorageDead(_90), StorageDead(_89)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb466 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_88), StorageDead(_87)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb484 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_85), StorageDead(_84), StorageDead(_81)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[5] }, kind: goto -> bb468 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_78), StorageDead(_75), StorageDead(_72), StorageDead(_70), StorageDead(_69), StorageDead(_62), StorageDead(_61)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[5] }, kind: goto -> bb469 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_58), StorageDead(_52), StorageDead(_45)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb470 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_44), StorageDead(_43), StorageDead(_41), StorageDead(_86)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb472 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_82), StorageDead(_81), StorageDead(_78), StorageDead(_75), StorageDead(_72), StorageDead(_70), StorageDead(_69), StorageDead(_62), StorageDead(_61), StorageDead(_58), StorageDead(_52), StorageDead(_45), StorageDead(_44), StorageDead(_43), StorageDead(_41)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb472 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_83), StorageDead(_80), StorageDead(_79), StorageDead(_76), StorageDead(_74), StorageDead(_73), StorageDead(_71)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb474 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_67), StorageDead(_64), StorageDead(_62), StorageDead(_61), StorageDead(_58), StorageDead(_52), StorageDead(_45), StorageDead(_44), StorageDead(_43), StorageDead(_41)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb474 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_68)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb476 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_65), StorageDead(_64), StorageDead(_62), StorageDead(_61), StorageDead(_58), StorageDead(_52), StorageDead(_45), StorageDead(_44), StorageDead(_43), StorageDead(_41)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb476 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_66), StorageDead(_63), StorageDead(_60), StorageDead(_59)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb479 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_56)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[5] }, kind: goto -> bb478 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_54), StorageDead(_52), StorageDead(_45), StorageDead(_44), StorageDead(_43), StorageDead(_41)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb479 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_57), StorageDead(_55), StorageDead(_53)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb483 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_50)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb481 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_48)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb482 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_46), StorageDead(_51), StorageDead(_49), StorageDead(_47), StorageDead(_45), StorageDead(_44), StorageDead(_43), StorageDead(_41)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb483 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_40)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb484 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_39)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[3] }, kind: goto -> bb496 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_38)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[4] }, kind: goto -> bb487 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_36)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[4] }, kind: goto -> bb487 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_37), StorageDead(_35), StorageDead(_34)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[4] }, kind: goto -> bb489 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_33)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[4] }, kind: goto -> bb489 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_32)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[4] }, kind: goto -> bb491 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_30), StorageDead(_31)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[2] }, kind: goto -> bb491 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_29)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[2] }, kind: goto -> bb493 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_28), StorageDead(_27), StorageDead(_25)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[2] }, kind: goto -> bb493 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_24)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[2] }, kind: goto -> bb495 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_22), StorageDead(_20)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[2] }, kind: goto -> bb495 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_19)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[2] }, kind: goto -> bb496 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_18), StorageDead(_17)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[2] }, kind: goto -> bb497 }), is_cleanup: true }, BasicBlockData { statements: [_664 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: drop((((*_664) as variant#4).1: std::vec::Vec<u64>)) -> [return: bb504, unwind terminate(cleanup)] }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_15), StorageDead(_14)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb499 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_13)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb502 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_11), StorageDead(_10)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb501 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_9)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb502 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_8), StorageDead(_7), StorageDead(_6)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb503 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_5)], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb504 }), is_cleanup: true }, BasicBlockData { statements: [_567 = const false], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb511 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_213), _563 = const false, StorageDead(_212), StorageDead(_211), _666 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), _580 = discriminant((((*_666) as variant#4).5: std::option::Option<common::types::BlockAndReceipts>)), StorageDead(_208), StorageDead(_205), _180 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:17: 156:18 (#1963), scope: scope[16] }, kind: goto -> bb102 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[16] }, kind: switchInt(copy _563) -> [0: bb505, otherwise: bb507] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[16] }, kind: drop(((_212 as Err).0: eyre::Report)) -> [return: bb505, unwind: bb413] }), is_cleanup: false }, BasicBlockData { statements: [_578 = discriminant(_212)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[16] }, kind: switchInt(move _578) -> [1: bb506, otherwise: bb505] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:157:13: 157:14 (#0), scope: scope[11] }, kind: drop(_195) -> [return: bb421, unwind terminate(cleanup)] }), is_cleanup: true }, BasicBlockData { statements: [_671 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: drop((((*_671) as variant#4).1: std::vec::Vec<u64>)) -> [return: bb431, unwind terminate(cleanup)] }), is_cleanup: true }, BasicBlockData { statements: [_672 = deref_copy (_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}), discriminant((*_672)) = 2], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: resume }), is_cleanup: true }, BasicBlockData { statements: [StorageLive(_173), StorageLive(_176), StorageLive(_192), StorageLive(_193), _192 = move _2, StorageDead(_193), _594 = move _192, StorageDead(_192), _180 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[12] }, kind: goto -> bb90 }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_173), StorageLive(_176), StorageLive(_195), StorageLive(_196), StorageLive(_202), StorageLive(_205), StorageLive(_208), StorageLive(_211), StorageLive(_212), StorageLive(_213), StorageLive(_229), StorageLive(_230), _229 = move _2, StorageDead(_230), _594 = move _229, StorageDead(_229), _180 = const ()], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[19] }, kind: goto -> bb108 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: assert(const false, "`async fn` resumed after panicking") -> [success: bb514, unwind continue] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: assert(const false, "`async fn` resumed after completion") -> [success: bb515, unwind continue] }), is_cleanup: false }], cache: Cache { predecessors: OnceLock(<uninit>), switch_sources: OnceLock(<uninit>), reverse_postorder: OnceLock(<uninit>), dominators: OnceLock(<uninit>) } }, phase: Runtime(Optimized), pass_count: 1, source: MirSource { instance: Item(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0})), promoted: None }, source_scopes: [SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), parent_scope: None, inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#2025), parent_scope: Some(scope[0]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:9: 165:6 (#0), parent_scope: Some(scope[1]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:9: 892:6 (#1920), parent_scope: Some(scope[2]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:13: 870:10 (#1920), parent_scope: Some(scope[2]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#1927), parent_scope: Some(scope[3]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:13: 3100:10 (#1941), parent_scope: Some(scope[3]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:17: 3099:14 (#1941), parent_scope: Some(scope[6]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:17: 3099:14 (#1941), parent_scope: Some(scope[7]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:17: 3099:14 (#1941), parent_scope: Some(scope[8]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#1944), parent_scope: Some(scope[9]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:140:9: 165:6 (#0), parent_scope: Some(scope[2]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), parent_scope: Some(scope[11]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#1954), parent_scope: Some(scope[12]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:142:13: 157:14 (#0), parent_scope: Some(scope[11]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:143:17: 157:14 (#0), parent_scope: Some(scope[14]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:17: 156:18 (#1963), parent_scope: Some(scope[15]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:37: 156:18 (#0), parent_scope: Some(scope[16]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:81: 155:22 (#0), parent_scope: Some(scope[17]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), parent_scope: Some(scope[18]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:80 (#1965), parent_scope: Some(scope[19]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:9: 892:6 (#1966), parent_scope: Some(scope[18]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:13: 870:10 (#1966), parent_scope: Some(scope[18]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#1973), parent_scope: Some(scope[21]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:13: 3100:10 (#1987), parent_scope: Some(scope[21]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:17: 3099:14 (#1987), parent_scope: Some(scope[24]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:17: 3099:14 (#1987), parent_scope: Some(scope[25]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:17: 3099:14 (#1987), parent_scope: Some(scope[26]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#1990), parent_scope: Some(scope[27]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:158:13: 163:14 (#0), parent_scope: Some(scope[11]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:9: 892:6 (#1955), parent_scope: Some(scope[29]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:13: 870:10 (#1955), parent_scope: Some(scope[29]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#1999), parent_scope: Some(scope[30]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:13: 3100:10 (#2013), parent_scope: Some(scope[30]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:17: 3099:14 (#2013), parent_scope: Some(scope[33]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:17: 3099:14 (#2013), parent_scope: Some(scope[34]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:17: 3099:14 (#2013), parent_scope: Some(scope[35]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#2016), parent_scope: Some(scope[36]), inlined: None, inlined_parent_scope: None, local_data: Clear }], coroutine: Some(CoroutineInfo { yield_ty: None, resume_ty: None, coroutine_drop: Some(Body { basic_blocks: BasicBlocks { basic_blocks: [BasicBlockData { statements: [_595 = discriminant((*_1))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: switchInt(move _595) -> [0: bb44, 3: bb47, 4: bb48, otherwise: bb49] }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_230), StorageDead(_229)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:79: 150:80 (#1964), scope: scope[18] }, kind: drop((((*_1) as variant#4).6: {async fn body of ingestor::ingestor::Ingestor::push_block_and_receipts()})) -> [return: bb2, unwind: bb17] }), is_cleanup: false }, BasicBlockData { statements: [nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[16] }, kind: goto -> bb3 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_213), _563 = const false, StorageDead(_212)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[16] }, kind: goto -> bb4 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_211)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[16] }, kind: goto -> bb32 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_208), nop, StorageDead(_205)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[15] }, kind: drop((((*_1) as variant#4).4: std::vec::IntoIter<common::types::BlockAndReceipts>)) -> [return: bb6, unwind: bb21] }), is_cleanup: false }, BasicBlockData { statements: [nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[15] }, kind: goto -> bb7 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_202), StorageDead(_196)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:157:13: 157:14 (#0), scope: scope[11] }, kind: goto -> bb8 }), is_cleanup: false }, BasicBlockData { statements: [(((*_1) as variant#4).7: bool) = const false, StorageDead(_195), nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb9 }), is_cleanup: false }, BasicBlockData { statements: [_567 = const false, nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb36 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_193), StorageDead(_192)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#1953), scope: scope[11] }, kind: drop((((*_1) as variant#3).3: std::pin::Pin<std::boxed::Box<dyn std::future::Future<Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>> + std::marker::Send>>)) -> [return: bb11, unwind: bb25] }), is_cleanup: false }, BasicBlockData { statements: [nop, nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb12 }), is_cleanup: false }, BasicBlockData { statements: [_567 = const false, nop], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb13 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb14 }), is_cleanup: false }, BasicBlockData { statements: [StorageDead(_176), StorageDead(_173), _564 = const false, _565 = const false, nop, nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#2025), scope: scope[0] }, kind: goto -> bb45 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: return }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: resume }), is_cleanup: true }, BasicBlockData { statements: [nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[16] }, kind: goto -> bb18 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_213), _563 = const false, StorageDead(_212)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[16] }, kind: goto -> bb19 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_211)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[16] }, kind: goto -> bb39 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_208), nop, StorageDead(_205)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[15] }, kind: drop((((*_1) as variant#4).4: std::vec::IntoIter<common::types::BlockAndReceipts>)) -> [return: bb21, unwind terminate(cleanup)] }), is_cleanup: true }, BasicBlockData { statements: [nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[15] }, kind: goto -> bb22 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_202), StorageDead(_196)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:157:13: 157:14 (#0), scope: scope[11] }, kind: goto -> bb23 }), is_cleanup: true }, BasicBlockData { statements: [(((*_1) as variant#4).7: bool) = const false, StorageDead(_195), nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb24 }), is_cleanup: true }, BasicBlockData { statements: [_567 = const false, nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb42 }), is_cleanup: true }, BasicBlockData { statements: [nop, nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb26 }), is_cleanup: true }, BasicBlockData { statements: [_567 = const false, nop], terminator: Some(Terminator { source_info: SourceInfo { span: no-location (#0), scope: scope[1] }, kind: goto -> bb27 }), is_cleanup: true }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb28 }), is_cleanup: true }, BasicBlockData { statements: [StorageDead(_176), StorageDead(_173), _564 = const false, _565 = const false, nop, nop], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#2025), scope: scope[0] }, kind: goto -> bb16 }), is_cleanup: true }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[16] }, kind: goto -> bb5 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[16] }, kind: goto -> bb29 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[16] }, kind: goto -> bb29 }), is_cleanup: false }, BasicBlockData { statements: [_584 = discriminant((((*_1) as variant#4).5: std::option::Option<common::types::BlockAndReceipts>))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[16] }, kind: switchInt(move _584) -> [1: bb30, otherwise: bb31] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb13 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb33 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb33 }), is_cleanup: false }, BasicBlockData { statements: [_586 = discriminant((((*_1) as variant#4).3: std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: switchInt(move _586) -> [0: bb34, otherwise: bb35] }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[16] }, kind: goto -> bb20 }), is_cleanup: true }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[16] }, kind: goto -> bb20 }), is_cleanup: true }, BasicBlockData { statements: [_591 = discriminant((((*_1) as variant#4).5: std::option::Option<common::types::BlockAndReceipts>))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[16] }, kind: switchInt(move _591) -> [1: bb37, otherwise: bb38] }), is_cleanup: true }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb27 }), is_cleanup: true }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: goto -> bb27 }), is_cleanup: true }, BasicBlockData { statements: [_592 = discriminant((((*_1) as variant#4).3: std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>))], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[1] }, kind: switchInt(move _592) -> [0: bb40, otherwise: bb41] }), is_cleanup: true }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: return }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: goto -> bb46 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#2025), scope: scope[0] }, kind: goto -> bb15 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: goto -> bb43 }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_173), StorageLive(_176), StorageLive(_192), StorageLive(_193)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: goto -> bb10 }), is_cleanup: false }, BasicBlockData { statements: [StorageLive(_173), StorageLive(_176), StorageLive(_195), StorageLive(_196), StorageLive(_202), StorageLive(_205), StorageLive(_208), StorageLive(_211), StorageLive(_212), StorageLive(_213), StorageLive(_229), StorageLive(_230)], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: goto -> bb1 }), is_cleanup: false }, BasicBlockData { statements: [], terminator: Some(Terminator { source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] }, kind: return }), is_cleanup: false }], cache: Cache { predecessors: OnceLock(<uninit>), switch_sources: OnceLock(<uninit>), reverse_postorder: OnceLock(<uninit>), dominators: OnceLock(<uninit>) } }, phase: Analysis(PostCleanup), pass_count: 8, source: MirSource { instance: DropGlue(DefId(2:2837 ~ core[49ae]::ptr::drop_in_place), Some(Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]))), promoted: None }, source_scopes: [SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), parent_scope: None, inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#2025), parent_scope: Some(scope[0]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:9: 165:6 (#0), parent_scope: Some(scope[1]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:9: 892:6 (#1920), parent_scope: Some(scope[2]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:13: 870:10 (#1920), parent_scope: Some(scope[2]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#1927), parent_scope: Some(scope[3]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:13: 3100:10 (#1941), parent_scope: Some(scope[3]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:17: 3099:14 (#1941), parent_scope: Some(scope[6]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:17: 3099:14 (#1941), parent_scope: Some(scope[7]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:17: 3099:14 (#1941), parent_scope: Some(scope[8]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#1944), parent_scope: Some(scope[9]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:140:9: 165:6 (#0), parent_scope: Some(scope[2]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), parent_scope: Some(scope[11]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#1954), parent_scope: Some(scope[12]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:142:13: 157:14 (#0), parent_scope: Some(scope[11]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:143:17: 157:14 (#0), parent_scope: Some(scope[14]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:17: 156:18 (#1963), parent_scope: Some(scope[15]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:37: 156:18 (#0), parent_scope: Some(scope[16]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:81: 155:22 (#0), parent_scope: Some(scope[17]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), parent_scope: Some(scope[18]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:80 (#1965), parent_scope: Some(scope[19]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:9: 892:6 (#1966), parent_scope: Some(scope[18]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:13: 870:10 (#1966), parent_scope: Some(scope[18]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#1973), parent_scope: Some(scope[21]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:13: 3100:10 (#1987), parent_scope: Some(scope[21]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:17: 3099:14 (#1987), parent_scope: Some(scope[24]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:17: 3099:14 (#1987), parent_scope: Some(scope[25]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:17: 3099:14 (#1987), parent_scope: Some(scope[26]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#1990), parent_scope: Some(scope[27]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:158:13: 163:14 (#0), parent_scope: Some(scope[11]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:9: 892:6 (#1955), parent_scope: Some(scope[29]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:13: 870:10 (#1955), parent_scope: Some(scope[29]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#1999), parent_scope: Some(scope[30]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:13: 3100:10 (#2013), parent_scope: Some(scope[30]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:17: 3099:14 (#2013), parent_scope: Some(scope[33]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:17: 3099:14 (#2013), parent_scope: Some(scope[34]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:17: 3099:14 (#2013), parent_scope: Some(scope[35]), inlined: None, inlined_parent_scope: None, local_data: Clear }, SourceScopeData { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:13: 2975:10 (#2016), parent_scope: Some(scope[36]), inlined: None, inlined_parent_scope: None, local_data: Clear }], coroutine: None, local_decls: [LocalDecl { mutability: Mut, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: *mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:35: 131:44 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:13: 132:26 (#0), scope: scope[1] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::ops::Range<u64>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:29: 136:15 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:30: 132:55 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:133:13: 136:14 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:17: 134:76 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:17: 134:72 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:21: 134:44 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:46: 134:71 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (u64, bool), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:17: 134:76 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:135:17: 135:68 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:135:17: 135:42 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:135:45: 135:68 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (u64, bool), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:135:17: 135:68 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:13: 867:20 (#1920), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#1924), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#1926), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#1926), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#1924), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#1924), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#1924), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#1926), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#1926), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#1924), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#1924), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:17: 868:25 (#1920), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:22 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:98: 869:106 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:12: 871:19 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:486 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#0}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: Closure(DefId(278:486 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#0}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (tracing::field::ValueSet<'{erased}>,), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#1927), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#1927), scope: scope[3] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#1929), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#1929), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#1929), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#1932), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#1932), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#1927), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#1927), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#1927), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#1927), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#1927), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#1927), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#1932), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#1932), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#1932), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#1932), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#1932), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1933), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1933), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1933), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1933), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:33: 138:37 (#1933), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:48: 138:61 (#1933), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:48: 138:61 (#1933), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:41: 138:45 (#1933), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:63: 138:73 (#1933), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:63: 138:73 (#1933), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#1935), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#1935), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#1939), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#1939), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#1926), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#1939), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#1935), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#1935), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#1935), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:17: 3088:22 (#1941), scope: scope[3] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#1926), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#1942), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:21 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#1941), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#1941), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:21: 3090:25 (#1941), scope: scope[6] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:21: 3091:29 (#1941), scope: scope[7] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#1941), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3092:28: 3092:33 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#1941), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:33 (#1941), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:21: 3095:27 (#1941), scope: scope[8] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:26 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#1941), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:60: 3097:64 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:74: 3097:82 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#1944), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#1944), scope: scope[9] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#1946), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#1946), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#1946), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#1949), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#1949), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#1944), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#1944), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#1944), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#1944), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#1944), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#1944), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#1949), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#1949), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#1949), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#1949), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#1949), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1950), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1950), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1950), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1950), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:33: 138:37 (#1950), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:48: 138:61 (#1950), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:48: 138:61 (#1950), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:41: 138:45 (#1950), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:63: 138:73 (#1950), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:63: 138:73 (#1950), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tokio::time::Instant, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:140:13: 140:23 (#0), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::result::Result<std::vec::Vec<common::types::BlockAndReceipts, std::alloc::Global>, ingestor::eth_client::RPCClientError>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:71 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(ingestor::eth_client::RPCClient), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:26 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(ingestor::eth_client::RPCClient), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:71 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::sync::Arc<dyn [Binder { value: Trait(ingestor::eth_client::RPCClient), bound_vars: [] }] + '{erased}, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:26 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:57: 141:70 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#1954), scope: scope[11] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::task::Poll<std::result::Result<std::vec::Vec<common::types::BlockAndReceipts, std::alloc::Global>, ingestor::eth_client::RPCClientError>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<&'{erased} mut std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#1954), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#1954), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::result::Result<std::vec::Vec<common::types::BlockAndReceipts, std::alloc::Global>, ingestor::eth_client::RPCClientError>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#1954), scope: scope[12] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: !, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#1954), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:142:13: 142:23 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::vec::Vec<common::types::BlockAndReceipts, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:142:16: 142:22 (#0), scope: scope[11] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::time::Duration, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:143:21: 143:29 (#0), scope: scope[14] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tokio::time::Instant, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:143:32: 143:42 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:144:17: 148:18 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} ingestor::metrics::IngestorMetrics, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:144:17: 144:29 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:145:21: 145:31 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::time::Duration, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:147:21: 147:29 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::vec::IntoIter<common::types::BlockAndReceipts, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#1962), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::vec::Vec<common::types::BlockAndReceipts, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::vec::IntoIter<common::types::BlockAndReceipts, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#1962), scope: scope[15] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#1962), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<common::types::BlockAndReceipts>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#1962), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::vec::IntoIter<common::types::BlockAndReceipts, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#1962), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::vec::IntoIter<common::types::BlockAndReceipts, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#1962), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:17: 156:18 (#1963), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: !, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:17: 156:18 (#1963), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: common::types::BlockAndReceipts, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:21: 149:26 (#0), scope: scope[16] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::result::Result<(), eyre::Report>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:80 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: Coroutine(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, common::types::BlockAndReceipts)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: Coroutine(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, common::types::BlockAndReceipts)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:74 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:43 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: common::types::BlockAndReceipts, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:68: 150:73 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: Coroutine(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, common::types::BlockAndReceipts)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:80 (#1965), scope: scope[18] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::task::Poll<std::result::Result<(), eyre::Report>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<&'{erased} mut Coroutine(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, common::types::BlockAndReceipts)])>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, common::types::BlockAndReceipts)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, common::types::BlockAndReceipts)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:80 (#1965), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:80 (#1965), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::result::Result<(), eyre::Report>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:80 (#1965), scope: scope[19] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: !, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:80 (#1965), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:28: 150:36 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: eyre::Report, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:32: 150:35 (#0), scope: scope[18] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:13: 867:20 (#1966), scope: scope[18] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#1970), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1972), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1972), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#1970), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#1970), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#1970), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1972), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1972), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#1970), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#1970), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:17: 868:25 (#1966), scope: scope[18] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:22 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:98: 869:106 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:12: 871:19 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:500 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#1}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: Closure(DefId(278:500 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#1}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (tracing::field::ValueSet<'{erased}>,), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#1973), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#1973), scope: scope[21] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#1975), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#1975), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#1975), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#1978), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#1978), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#1973), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#1973), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#1973), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#1973), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#1973), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#1973), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#1978), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#1978), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#1978), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#1978), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#1978), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1979), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1979), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1979), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1979), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:74: 152:78 (#1979), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:29: 153:39 (#1979), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:29: 153:39 (#1979), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:80: 152:84 (#1979), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} eyre::Report, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:41: 153:44 (#1979), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} eyre::Report, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:41: 153:44 (#1979), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#1981), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#1981), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#1985), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#1985), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1972), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#1985), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#1981), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#1981), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#1981), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:17: 3088:22 (#1987), scope: scope[21] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1972), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#1988), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:21 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#1987), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#1987), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:21: 3090:25 (#1987), scope: scope[24] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:21: 3091:29 (#1987), scope: scope[25] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#1987), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3092:28: 3092:33 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#1987), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:33 (#1987), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:21: 3095:27 (#1987), scope: scope[26] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:26 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#1987), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:60: 3097:64 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:74: 3097:82 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#1990), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#1990), scope: scope[27] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#1992), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#1992), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#1992), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#1995), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#1995), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#1990), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#1990), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#1990), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#1990), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#1990), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#1990), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#1995), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#1995), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#1995), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#1995), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#1995), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1996), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1996), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1996), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1996), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:74: 152:78 (#1996), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:29: 153:39 (#1996), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:29: 153:39 (#1996), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:80: 152:84 (#1996), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} eyre::Report, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:41: 153:44 (#1996), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} eyre::Report, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:41: 153:44 (#1996), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: ingestor::eth_client::RPCClientError, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:158:17: 158:20 (#0), scope: scope[11] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:13: 867:20 (#1955), scope: scope[29] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#1959), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1961), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1961), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#1959), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#1959), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#1959), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1961), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1961), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#1959), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#1959), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:17: 868:25 (#1955), scope: scope[29] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:22 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:98: 869:106 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:12: 871:19 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:514 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#2}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: Closure(DefId(278:514 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#2}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (tracing::field::ValueSet<'{erased}>,), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#1999), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#1999), scope: scope[30] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2001), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2001), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#2001), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#2004), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#2004), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#1999), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#1999), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#1999), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#1999), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#1999), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#1999), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#2004), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2004), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2004), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2004), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2004), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2005), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2005), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2005), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2005), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:77: 160:81 (#2005), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:21: 161:31 (#2005), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:21: 161:31 (#2005), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:83: 160:87 (#2005), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} ingestor::eth_client::RPCClientError, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:33: 161:36 (#2005), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} ingestor::eth_client::RPCClientError, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:33: 161:36 (#2005), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#2007), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#2007), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#2011), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#2011), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1961), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#2011), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2007), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2007), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#2007), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:17: 3088:22 (#2013), scope: scope[30] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1961), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#2014), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:21 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2013), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2013), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:21: 3090:25 (#2013), scope: scope[33] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:21: 3091:29 (#2013), scope: scope[34] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2013), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3092:28: 3092:33 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2013), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:33 (#2013), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:21: 3095:27 (#2013), scope: scope[35] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:26 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#2013), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:60: 3097:64 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:74: 3097:82 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#2016), scope: scope[36] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2018), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2018), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#2018), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#2021), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#2021), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2016), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#2021), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2021), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2021), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2021), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2021), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2022), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2022), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2022), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2022), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:77: 160:81 (#2022), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:21: 161:31 (#2022), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:21: 161:31 (#2022), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:83: 160:87 (#2022), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} ingestor::eth_client::RPCClientError, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:33: 161:36 (#2022), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} ingestor::eth_client::RPCClientError, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:33: 161:36 (#2022), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[32] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:514 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#2}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#1955), scope: scope[30] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[37] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2007), scope: scope[30] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1961), scope: scope[29] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#1959), scope: scope[29] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1961), scope: scope[29] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[23] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:500 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#1}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#1966), scope: scope[21] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[28] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#1981), scope: scope[21] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1972), scope: scope[18] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#1970), scope: scope[18] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1972), scope: scope[18] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[5] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:486 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#0}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#1920), scope: scope[3] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[10] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#1935), scope: scope[3] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#1926), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#1924), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#1926), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:157:13: 157:14 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:79: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:79: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:79: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:79: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u32, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }], user_type_annotations: [], arg_count: 1, spread_arg: None, var_debug_info: [_task_context => _594, self => ((*_1).0: &mut ingestor::ingestor::Ingestor), self => (((*_1) as variant#4).0: &mut ingestor::ingestor::Ingestor), block_numbers => (((*_1) as variant#4).1: std::vec::Vec<u64>), enabled => _18, interest => _29, iter => _45, level => _96, meta => _103, log_meta => _106, logger => _117, iter => _129, start_time => (((*_1) as variant#4).2: tokio::time::Instant), __awaitee => (((*_1) as variant#3).3: std::pin::Pin<std::boxed::Box<dyn std::future::Future<Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>> + std::marker::Send>>), result => _190, blocks => _195, duration => _196, iter => (((*_1) as variant#4).4: std::vec::IntoIter<common::types::BlockAndReceipts>), block => _211, __awaitee => (((*_1) as variant#4).6: {async fn body of ingestor::ingestor::Ingestor::push_block_and_receipts()}), result => _227, err => _232, enabled => _234, interest => _245, iter => _261, level => _312, meta => _319, log_meta => _322, logger => _333, iter => _345, err => _387, enabled => _389, interest => _400, iter => _416, level => _467, meta => _474, log_meta => _477, logger => _488, iter => _500], span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), required_consts: Some([const tracing::Level::TRACE, const tracing::level_filters::STATIC_MAX_LEVEL, const tracing::Level::TRACE, const tracing::Level::TRACE, const tracing::log::STATIC_MAX_LEVEL, const tracing::Level::TRACE, const tracing::Level::ERROR, const tracing::level_filters::STATIC_MAX_LEVEL, const tracing::Level::ERROR, const tracing::Level::ERROR, const tracing::log::STATIC_MAX_LEVEL, const tracing::Level::ERROR, const tracing::Level::ERROR, const tracing::level_filters::STATIC_MAX_LEVEL, const tracing::Level::ERROR, const tracing::Level::ERROR, const tracing::log::STATIC_MAX_LEVEL, const tracing::Level::ERROR]), mentioned_items: None, is_polymorphic: false, injection_phase: None, tainted_by_errors: None, coverage_info_hi: None, function_coverage_info: None }), coroutine_layout: Some(CoroutineLayout { field_tys: {_0: CoroutineSavedTy { ty: &'{erased} mut ingestor::ingestor::Ingestor, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:35: 131:44 (#0), scope: scope[0] }, ignore_for_traits: false }, _1: CoroutineSavedTy { ty: std::vec::Vec<u64, std::alloc::Global>, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:13: 132:26 (#0), scope: scope[1] }, ignore_for_traits: false }, _2: CoroutineSavedTy { ty: tokio::time::Instant, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:140:13: 140:23 (#0), scope: scope[2] }, ignore_for_traits: false }, _3: CoroutineSavedTy { ty: std::result::Result<std::vec::Vec<common::types::BlockAndReceipts, std::alloc::Global>, ingestor::eth_client::RPCClientError>, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#0), scope: scope[0] }, ignore_for_traits: false }, _4: CoroutineSavedTy { ty: std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#1954), scope: scope[11] }, ignore_for_traits: false }, _5: CoroutineSavedTy { ty: std::vec::IntoIter<common::types::BlockAndReceipts, std::alloc::Global>, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#1962), scope: scope[15] }, ignore_for_traits: false }, _6: CoroutineSavedTy { ty: std::option::Option<common::types::BlockAndReceipts>, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#1962), scope: scope[0] }, ignore_for_traits: false }, _7: CoroutineSavedTy { ty: Coroutine(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, common::types::BlockAndReceipts)]), source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:80 (#1965), scope: scope[18] }, ignore_for_traits: false }, _8: CoroutineSavedTy { ty: bool, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:157:13: 157:14 (#0), scope: scope[0] }, ignore_for_traits: false }}, variant_fields: {Unresumed: [], Returned: [], Panicked: [], Suspend0: [_0, _1, _2, _4], Suspend1: [_0, _1, _2, _3, _5, _6, _7, _8]}, storage_conflicts: BitMatrix(9x9) {(_0, _0), (_0, _1), (_0, _2), (_0, _3), (_0, _4), (_0, _5), (_0, _6), (_0, _7), (_0, _8), (_1, _0), (_1, _1), (_1, _2), (_1, _3), (_1, _4), (_1, _5), (_1, _6), (_1, _7), (_1, _8), (_2, _0), (_2, _1), (_2, _2), (_2, _3), (_2, _4), (_2, _5), (_2, _6), (_2, _7), (_2, _8), (_3, _0), (_3, _1), (_3, _2), (_3, _3), (_3, _4), (_3, _5), (_3, _6), (_3, _7), (_3, _8), (_4, _0), (_4, _1), (_4, _2), (_4, _3), (_4, _4), (_4, _8), (_5, _0), (_5, _1), (_5, _2), (_5, _3), (_5, _5), (_5, _6), (_5, _7), (_5, _8), (_6, _0), (_6, _1), (_6, _2), (_6, _3), (_6, _5), (_6, _6), (_6, _7), (_6, _8), (_7, _0), (_7, _1), (_7, _2), (_7, _3), (_7, _5), (_7, _6), (_7, _7), (_7, _8), (_8, _0), (_8, _1), (_8, _2), (_8, _3), (_8, _4), (_8, _5), (_8, _6), (_8, _7), (_8, _8)} }), coroutine_kind: Desugared(Async, Fn) }), local_decls: [LocalDecl { mutability: Mut, local_info: Clear, ty: std::task::Poll<()>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<&'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)])>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:35: 131:44 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:13: 132:26 (#0), scope: scope[1] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::ops::Range<u64>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:29: 136:15 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:30: 132:55 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:133:13: 136:14 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:17: 134:76 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:17: 134:72 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:21: 134:44 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:46: 134:71 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (u64, bool), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:17: 134:76 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:135:17: 135:68 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:135:17: 135:42 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u64, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:135:45: 135:68 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (u64, bool), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:135:17: 135:68 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:13: 867:20 (#1920), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#1924), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#1926), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#1926), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#1924), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#1924), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#1924), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#1926), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#1926), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#1924), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#1924), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:17: 868:25 (#1920), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:22 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:98: 869:106 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:12: 871:19 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:486 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#0}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: Closure(DefId(278:486 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#0}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (tracing::field::ValueSet<'{erased}>,), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#1927), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#1927), scope: scope[3] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#1929), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#1929), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#1929), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#1932), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#1932), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#1927), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#1927), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#1927), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#1927), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#1927), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#1927), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#1932), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#1932), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#1932), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#1932), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#1932), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1933), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1933), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1933), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1933), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:33: 138:37 (#1933), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:48: 138:61 (#1933), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:48: 138:61 (#1933), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:41: 138:45 (#1933), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:63: 138:73 (#1933), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:63: 138:73 (#1933), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#1935), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#1935), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#1939), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#1939), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#1926), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#1939), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#1935), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#1935), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#1935), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:17: 3088:22 (#1941), scope: scope[3] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#1926), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#1942), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:21 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#1941), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#1941), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:21: 3090:25 (#1941), scope: scope[6] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:21: 3091:29 (#1941), scope: scope[7] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#1941), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3092:28: 3092:33 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#1941), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:33 (#1941), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:21: 3095:27 (#1941), scope: scope[8] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:26 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#1941), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:60: 3097:64 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:74: 3097:82 (#1941), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#1944), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#1944), scope: scope[9] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1920), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1920), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#1946), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#1946), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#1946), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#1949), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#1949), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#1944), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#1944), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#1944), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#1944), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#1944), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#1944), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#1949), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#1949), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#1949), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#1949), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#1949), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1950), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1950), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1950), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1950), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:33: 138:37 (#1950), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:48: 138:61 (#1950), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:48: 138:61 (#1950), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:41: 138:45 (#1950), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:63: 138:73 (#1950), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:63: 138:73 (#1950), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tokio::time::Instant, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:140:13: 140:23 (#0), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::result::Result<std::vec::Vec<common::types::BlockAndReceipts, std::alloc::Global>, ingestor::eth_client::RPCClientError>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:71 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(ingestor::eth_client::RPCClient), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:26 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(ingestor::eth_client::RPCClient), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:71 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::sync::Arc<dyn [Binder { value: Trait(ingestor::eth_client::RPCClient), bound_vars: [] }] + '{erased}, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:26 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::vec::Vec<u64, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:57: 141:70 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#1954), scope: scope[11] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::task::Poll<std::result::Result<std::vec::Vec<common::types::BlockAndReceipts, std::alloc::Global>, ingestor::eth_client::RPCClientError>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<&'{erased} mut std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#1954), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#1954), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::result::Result<std::vec::Vec<common::types::BlockAndReceipts, std::alloc::Global>, ingestor::eth_client::RPCClientError>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#1954), scope: scope[12] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: !, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:77 (#1954), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:142:13: 142:23 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::vec::Vec<common::types::BlockAndReceipts, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:142:16: 142:22 (#0), scope: scope[11] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::time::Duration, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:143:21: 143:29 (#0), scope: scope[14] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tokio::time::Instant, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:143:32: 143:42 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:144:17: 148:18 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} ingestor::metrics::IngestorMetrics, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:144:17: 144:29 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:145:21: 145:31 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::time::Duration, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:147:21: 147:29 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::vec::IntoIter<common::types::BlockAndReceipts, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#1962), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::vec::Vec<common::types::BlockAndReceipts, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::vec::IntoIter<common::types::BlockAndReceipts, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#1962), scope: scope[15] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#1962), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<common::types::BlockAndReceipts>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#1962), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::vec::IntoIter<common::types::BlockAndReceipts, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#1962), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::vec::IntoIter<common::types::BlockAndReceipts, std::alloc::Global>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#1962), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:17: 156:18 (#1963), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: !, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:17: 156:18 (#1963), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: common::types::BlockAndReceipts, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:21: 149:26 (#0), scope: scope[16] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::result::Result<(), eyre::Report>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:80 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: Coroutine(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, common::types::BlockAndReceipts)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: Coroutine(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, common::types::BlockAndReceipts)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:74 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:43 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: common::types::BlockAndReceipts, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:68: 150:73 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: Coroutine(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, common::types::BlockAndReceipts)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:80 (#1965), scope: scope[18] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::task::Poll<std::result::Result<(), eyre::Report>>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::pin::Pin<&'{erased} mut Coroutine(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, common::types::BlockAndReceipts)])>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, common::types::BlockAndReceipts)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, common::types::BlockAndReceipts)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:80 (#1965), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:80 (#1965), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::result::Result<(), eyre::Report>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:80 (#1965), scope: scope[19] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: !, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:80 (#1965), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:28: 150:36 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: eyre::Report, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:32: 150:35 (#0), scope: scope[18] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:13: 867:20 (#1966), scope: scope[18] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#1970), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1972), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1972), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#1970), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#1970), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#1970), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1972), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1972), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#1970), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#1970), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:17: 868:25 (#1966), scope: scope[18] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:22 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:98: 869:106 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:12: 871:19 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:500 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#1}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: Closure(DefId(278:500 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#1}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (tracing::field::ValueSet<'{erased}>,), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#1973), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#1973), scope: scope[21] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#1975), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#1975), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#1975), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#1978), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#1978), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#1973), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#1973), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#1973), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#1973), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#1973), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#1973), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#1978), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#1978), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#1978), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#1978), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#1978), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1979), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1979), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1979), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1979), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:74: 152:78 (#1979), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:29: 153:39 (#1979), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:29: 153:39 (#1979), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:80: 152:84 (#1979), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} eyre::Report, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:41: 153:44 (#1979), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} eyre::Report, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:41: 153:44 (#1979), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#1981), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#1981), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#1985), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#1985), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1972), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#1985), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#1981), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#1981), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#1981), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:17: 3088:22 (#1987), scope: scope[21] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1972), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#1988), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:21 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#1987), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#1987), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:21: 3090:25 (#1987), scope: scope[24] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:21: 3091:29 (#1987), scope: scope[25] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#1987), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3092:28: 3092:33 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#1987), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:33 (#1987), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:21: 3095:27 (#1987), scope: scope[26] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:26 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#1987), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:60: 3097:64 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:74: 3097:82 (#1987), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#1990), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#1990), scope: scope[27] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1966), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1966), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#1992), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#1992), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#1992), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#1995), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#1995), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#1990), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#1990), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#1990), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#1990), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#1990), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#1990), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#1995), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#1995), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#1995), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#1995), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#1995), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1996), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1996), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1996), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1996), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:74: 152:78 (#1996), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:29: 153:39 (#1996), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:29: 153:39 (#1996), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:80: 152:84 (#1996), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} eyre::Report, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:41: 153:44 (#1996), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} eyre::Report, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:153:41: 153:44 (#1996), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: ingestor::eth_client::RPCClientError, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:158:17: 158:20 (#0), scope: scope[11] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:9: 891:10 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:867:13: 867:20 (#1955), scope: scope[29] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#1959), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1961), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1961), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#1959), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#1959), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#1959), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1961), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1961), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#1959), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#1959), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:17: 868:25 (#1955), scope: scope[29] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:38 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:22 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:85 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::subscriber::Interest, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:98: 869:106 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:871:12: 871:19 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:514 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#2}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: Closure(DefId(278:514 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#2}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (tracing::field::ValueSet<'{erased}>,), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#1999), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#1999), scope: scope[30] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:44 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2001), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2001), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#2001), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#2004), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#2004), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#1999), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#1999), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#1999), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#1999), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#1999), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#1999), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#2004), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2004), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2004), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2004), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2004), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2005), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2005), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2005), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2005), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:77: 160:81 (#2005), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:21: 161:31 (#2005), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:21: 161:31 (#2005), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:83: 160:87 (#2005), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} ingestor::eth_client::RPCClientError, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:33: 161:36 (#2005), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} ingestor::eth_client::RPCClientError, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:33: 161:36 (#2005), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:9: 3138:10 (#2007), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#2007), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#2011), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3056:9: 3062:10 (#2011), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1961), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#2011), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2007), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2007), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#2007), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3088:17: 3088:22 (#2013), scope: scope[30] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1961), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: usize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3057:13: 3057:33 (#2014), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:21 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2013), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2013), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:21: 3090:25 (#2013), scope: scope[33] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:888:17: 888:27 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:21: 3091:29 (#2013), scope: scope[34] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2013), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::MetadataBuilder<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3092:28: 3092:33 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2013), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:33 (#2013), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:21: 3095:27 (#2013), scope: scope[35] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:26 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#2013), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:35: 3096:44 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:60: 3097:64 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::log::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:74: 3097:82 (#2013), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:17: 889:80 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::ValueSet<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2966:9: 2975:10 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:17: 2969:25 (#2016), scope: scope[36] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::field::FieldSet, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::Metadata<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1955), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} tracing::callsite::DefaultCallsite, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:46 (#1955), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2018), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:9: 2788:23 (#2018), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2788:10: 2788:23 (#2018), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:31: 2961:143 (#2021), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:32: 2961:38 (#2021), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: tracing::field::Field, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<tracing::field::Field>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut tracing::field::Iter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:57: 2972:66 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2016), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} str, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:75: 2972:111 (#2016), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:40: 2961:142 (#2021), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2021), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2021), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2021), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:127 (#2021), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: std::fmt::Arguments<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2022), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2022), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2022), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: [core::fmt::rt::Argument<'{erased}>; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2022), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:77: 160:81 (#2022), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:21: 161:31 (#2022), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} common::types::Chain, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:21: 161:31 (#2022), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: core::fmt::rt::Argument<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:83: 160:87 (#2022), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} ingestor::eth_client::RPCClientError, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:33: 161:36 (#2022), scope: scope[0] } }, LocalDecl { mutability: Not, local_info: Clear, ty: &'{erased} ingestor::eth_client::RPCClientError, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:161:33: 161:36 (#2022), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[32] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:514 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#2}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#1955), scope: scope[30] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:21: 160:88 (#0), scope: scope[37] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#2007), scope: scope[30] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1961), scope: scope[29] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#1959), scope: scope[29] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1961), scope: scope[29] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[23] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:500 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#1}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#1966), scope: scope[21] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 3_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:29: 152:98 (#0), scope: scope[28] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#1981), scope: scope[21] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1972), scope: scope[18] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#1970), scope: scope[18] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2668:13: 2668:33 (#1972), scope: scope[18] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[5] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} Closure(DefId(278:486 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#0}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:15 (#1920), scope: scope[3] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} [&'{erased} str; 2_usize], user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:16: 138:46 (#0), scope: scope[10] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::log::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:43: 3130:72 (#1935), scope: scope[3] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#1926), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::level_filters::LevelFilter, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:17: 2777:56 (#1924), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} tracing::Level, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:1549:13: 1549:33 (#1926), scope: scope[2] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:157:13: 157:14 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: bool, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#1953), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:79: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:79: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:79: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:79: 150:80 (#1964), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: isize, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: (), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut std::task::Context<'{erased}>, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: u32, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut ingestor::ingestor::Ingestor, user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }, LocalDecl { mutability: Mut, local_info: Clear, ty: &'{erased} mut Coroutine(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), [(), std::future::ResumeTy, (), (), CoroutineWitness(DefId(278:102 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor,)]), user_ty: None, source_info: SourceInfo { span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), scope: scope[0] } }], user_type_annotations: [], arg_count: 2, spread_arg: None, var_debug_info: [_task_context => _594, self => ((*(_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})).0: &mut ingestor::ingestor::Ingestor), self => (((*(_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})) as variant#4).0: &mut ingestor::ingestor::Ingestor), block_numbers => (((*(_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})) as variant#4).1: std::vec::Vec<u64>), enabled => _18, interest => _29, iter => _45, level => _96, meta => _103, log_meta => _106, logger => _117, iter => _129, start_time => (((*(_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})) as variant#4).2: tokio::time::Instant), __awaitee => (((*(_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})) as variant#3).3: std::pin::Pin<std::boxed::Box<dyn std::future::Future<Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>> + std::marker::Send>>), result => _190, blocks => _195, duration => _196, iter => (((*(_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})) as variant#4).4: std::vec::IntoIter<common::types::BlockAndReceipts>), block => _211, __awaitee => (((*(_1.0: &mut {async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()})) as variant#4).6: {async fn body of ingestor::ingestor::Ingestor::push_block_and_receipts()}), result => _227, err => _232, enabled => _234, interest => _245, iter => _261, level => _312, meta => _319, log_meta => _322, logger => _333, iter => _345, err => _387, enabled => _389, interest => _400, iter => _416, level => _467, meta => _474, log_meta => _477, logger => _488, iter => _500], span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:131:46: 165:6 (#0), required_consts: Some([const tracing::Level::TRACE, const tracing::level_filters::STATIC_MAX_LEVEL, const tracing::Level::TRACE, const tracing::Level::TRACE, const tracing::log::STATIC_MAX_LEVEL, const tracing::Level::TRACE, const tracing::Level::ERROR, const tracing::level_filters::STATIC_MAX_LEVEL, const tracing::Level::ERROR, const tracing::Level::ERROR, const tracing::log::STATIC_MAX_LEVEL, const tracing::Level::ERROR, const tracing::Level::ERROR, const tracing::level_filters::STATIC_MAX_LEVEL, const tracing::Level::ERROR, const tracing::Level::ERROR, const tracing::log::STATIC_MAX_LEVEL, const tracing::Level::ERROR]), mentioned_items: Some([Spanned { node: Fn(FnDef(DefId(2:3106 ~ core[49ae]::cmp::max), [u64])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:134:17: 134:72 (#0) }, Spanned { node: Fn(FnDef(DefId(2:3096 ~ core[49ae]::cmp::min), [u64])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:133:13: 136:14 (#0) }, Spanned { node: Fn(FnDef(DefId(2:8978 ~ core[49ae]::iter::traits::iterator::Iterator::collect), [std::ops::Range<u64>, std::vec::Vec<u64, std::alloc::Global>])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:132:29: 137:23 (#0) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::Level, tracing::level_filters::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#1924) }, Spanned { node: Fn(FnDef(DefId(81:587 ~ tracing_core[67d7]::metadata::{impl#13}::current), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#1924) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::Level, tracing::level_filters::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#1924) }, Spanned { node: Fn(FnDef(DefId(81:59 ~ tracing_core[67d7]::callsite::{impl#0}::interest), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:49 (#1920) }, Spanned { node: Fn(FnDef(DefId(81:749 ~ tracing_core[67d7]::subscriber::{impl#4}::is_never), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#1920) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#1920) }, Spanned { node: Fn(FnDef(DefId(80:288 ~ tracing[5571]::__macro_support::__is_enabled), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:37: 869:107 (#1920) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1920) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1920) }, Spanned { node: Fn(FnDef(DefId(81:445 ~ tracing_core[67d7]::field::{impl#48}::iter), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#1927) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1920) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1920) }, Spanned { node: Fn(FnDef(DefId(2:8915 ~ core[49ae]::iter::traits::iterator::Iterator::next), [tracing::field::Iter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#1927) }, Spanned { node: Fn(FnDef(DefId(2:9700 ~ core[49ae]::option::{impl#0}::expect), [tracing::field::Field])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#1927) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, std::vec::Vec<u64, std::alloc::Global>])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:33: 138:37 (#1933) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, common::types::Chain])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:41: 138:45 (#1933) }, Spanned { node: Fn(FnDef(DefId(2:11184 ~ core[49ae]::fmt::{impl#4}::new_v1), ['{erased}, 2_usize, 2_usize])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1933) }, Spanned { node: UnsizeCast { source_ty: &'{erased} std::fmt::Arguments<'{erased}>, target_ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased} }, span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#1932) }, Spanned { node: Fn(FnDef(DefId(81:446 ~ tracing_core[67d7]::field::{impl#48}::value_set), ['{erased}, [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize]])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#1927) }, Spanned { node: Fn(FnDef(DefId(2:3753 ~ core[49ae]::ops::function::Fn::call), [Closure(DefId(278:486 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#0}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), (tracing::field::ValueSet<'{erased}>,)])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#1920) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::log::Level, tracing::log::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#1935) }, Spanned { node: Fn(FnDef(DefId(81:169 ~ tracing_core[67d7]::dispatcher::has_been_set), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#1935) }, Spanned { node: Fn(FnDef(DefId(85:149 ~ log[2aff]::max_level), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#1941) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::log::Level, tracing::log::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#1941) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:28: 3090:48 (#1941) }, Spanned { node: Fn(FnDef(DefId(85:110 ~ log[2aff]::{impl#14}::builder), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#1941) }, Spanned { node: Fn(FnDef(DefId(85:116 ~ log[2aff]::{impl#15}::level), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#1941) }, Spanned { node: Fn(FnDef(DefId(81:521 ~ tracing_core[67d7]::metadata::{impl#0}::target), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#1941) }, Spanned { node: Fn(FnDef(DefId(85:117 ~ log[2aff]::{impl#15}::target), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#1941) }, Spanned { node: Fn(FnDef(DefId(85:118 ~ log[2aff]::{impl#15}::build), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3094:29 (#1941) }, Spanned { node: Fn(FnDef(DefId(85:163 ~ log[2aff]::logger), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:30: 3095:43 (#1941) }, Spanned { node: Fn(FnDef(DefId(85:123 ~ log[2aff]::Log::enabled), [dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#1941) }, Spanned { node: UnsizeCast { source_ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, target_ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased} }, span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#1941) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1920) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1920) }, Spanned { node: Fn(FnDef(DefId(81:445 ~ tracing_core[67d7]::field::{impl#48}::iter), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#1944) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1920) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1920) }, Spanned { node: Fn(FnDef(DefId(2:8915 ~ core[49ae]::iter::traits::iterator::Iterator::next), [tracing::field::Iter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#1944) }, Spanned { node: Fn(FnDef(DefId(2:9700 ~ core[49ae]::option::{impl#0}::expect), [tracing::field::Field])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#1944) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, std::vec::Vec<u64, std::alloc::Global>])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:33: 138:37 (#1950) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, common::types::Chain])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:138:41: 138:45 (#1950) }, Spanned { node: Fn(FnDef(DefId(2:11184 ~ core[49ae]::fmt::{impl#4}::new_v1), ['{erased}, 2_usize, 2_usize])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1950) }, Spanned { node: UnsizeCast { source_ty: &'{erased} std::fmt::Arguments<'{erased}>, target_ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased} }, span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#1949) }, Spanned { node: Fn(FnDef(DefId(81:446 ~ tracing_core[67d7]::field::{impl#48}::value_set), ['{erased}, [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize]])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#1944) }, Spanned { node: Fn(FnDef(DefId(80:291 ~ tracing[5571]::__macro_support::__tracing_log), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:21: 3097:95 (#1941) }, Spanned { node: Fn(FnDef(DefId(108:12017 ~ tokio[b0f5]::time::instant::{impl#0}::now), [])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:140:26: 140:40 (#0) }, Spanned { node: Fn(FnDef(DefId(2:3712 ~ core[49ae]::ops::deref::Deref::deref), [std::sync::Arc<dyn [Binder { value: Trait(ingestor::eth_client::RPCClient), bound_vars: [] }] + '{erased}, std::alloc::Global>])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:71 (#0) }, Spanned { node: Fn(FnDef(DefId(278:343 ~ ingestor[dea2]::eth_client::RPCClient::batch_get_blocks_and_receipts), [dyn [Binder { value: Trait(ingestor::eth_client::RPCClient), bound_vars: [] }] + '{erased}, '{erased}, '{erased}])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:15: 141:71 (#0) }, Spanned { node: Fn(FnDef(DefId(2:42463 ~ core[49ae]::future::into_future::IntoFuture::into_future), [std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953) }, Spanned { node: Fn(FnDef(DefId(2:10144 ~ core[49ae]::pin::{impl#6}::new_unchecked), [&'{erased} mut std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953) }, Spanned { node: Fn(FnDef(DefId(2:42459 ~ core[49ae]::future::future::Future::poll), [std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:72: 141:77 (#1953) }, Spanned { node: Drop(std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#1953) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::Level, tracing::level_filters::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#1959) }, Spanned { node: Fn(FnDef(DefId(108:12024 ~ tokio[b0f5]::time::instant::{impl#0}::elapsed), [])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:143:32: 143:52 (#0) }, Spanned { node: Fn(FnDef(DefId(278:120 ~ ingestor[dea2]::metrics::{impl#0}::record_rpc_call), [])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:144:17: 148:18 (#0) }, Spanned { node: Fn(FnDef(DefId(2:8783 ~ core[49ae]::iter::traits::collect::IntoIterator::into_iter), [std::vec::Vec<common::types::BlockAndReceipts, std::alloc::Global>])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#1962) }, Spanned { node: Fn(FnDef(DefId(2:8915 ~ core[49ae]::iter::traits::iterator::Iterator::next), [std::vec::IntoIter<common::types::BlockAndReceipts, std::alloc::Global>])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:149:30: 149:36 (#1962) }, Spanned { node: Fn(FnDef(DefId(278:94 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts), [])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:39: 150:74 (#0) }, Spanned { node: Drop(std::vec::IntoIter<common::types::BlockAndReceipts, std::alloc::Global>), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963) }, Spanned { node: Fn(FnDef(DefId(2:42463 ~ core[49ae]::future::into_future::IntoFuture::into_future), [Coroutine(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, common::types::BlockAndReceipts)])])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964) }, Spanned { node: Fn(FnDef(DefId(2:10144 ~ core[49ae]::pin::{impl#6}::new_unchecked), [&'{erased} mut Coroutine(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, common::types::BlockAndReceipts)])])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964) }, Spanned { node: Fn(FnDef(DefId(2:42459 ~ core[49ae]::future::future::Future::poll), [Coroutine(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, common::types::BlockAndReceipts)])])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:75: 150:80 (#1964) }, Spanned { node: Drop(Coroutine(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, common::types::BlockAndReceipts)])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:79: 150:80 (#1964) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::Level, tracing::level_filters::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2777:9: 2777:56 (#1970) }, Spanned { node: Fn(FnDef(DefId(81:587 ~ tracing_core[67d7]::metadata::{impl#13}::current), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#1970) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::Level, tracing::level_filters::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#1970) }, Spanned { node: Fn(FnDef(DefId(81:59 ~ tracing_core[67d7]::callsite::{impl#0}::interest), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:49 (#1966) }, Spanned { node: Fn(FnDef(DefId(81:749 ~ tracing_core[67d7]::subscriber::{impl#4}::is_never), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#1966) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#1966) }, Spanned { node: Fn(FnDef(DefId(80:288 ~ tracing[5571]::__macro_support::__is_enabled), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:37: 869:107 (#1966) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1966) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1966) }, Spanned { node: Fn(FnDef(DefId(81:445 ~ tracing_core[67d7]::field::{impl#48}::iter), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#1973) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1966) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1966) }, Spanned { node: Fn(FnDef(DefId(2:8915 ~ core[49ae]::iter::traits::iterator::Iterator::next), [tracing::field::Iter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#1973) }, Spanned { node: Fn(FnDef(DefId(2:9700 ~ core[49ae]::option::{impl#0}::expect), [tracing::field::Field])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#1973) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, common::types::Chain])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:74: 152:78 (#1979) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, eyre::Report])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:80: 152:84 (#1979) }, Spanned { node: Fn(FnDef(DefId(2:11184 ~ core[49ae]::fmt::{impl#4}::new_v1), ['{erased}, 3_usize, 2_usize])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1979) }, Spanned { node: UnsizeCast { source_ty: &'{erased} std::fmt::Arguments<'{erased}>, target_ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased} }, span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#1978) }, Spanned { node: Fn(FnDef(DefId(81:446 ~ tracing_core[67d7]::field::{impl#48}::value_set), ['{erased}, [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize]])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#1973) }, Spanned { node: Fn(FnDef(DefId(2:3753 ~ core[49ae]::ops::function::Fn::call), [Closure(DefId(278:500 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#1}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), (tracing::field::ValueSet<'{erased}>,)])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#1966) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::log::Level, tracing::log::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#1981) }, Spanned { node: Fn(FnDef(DefId(81:169 ~ tracing_core[67d7]::dispatcher::has_been_set), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#1981) }, Spanned { node: Fn(FnDef(DefId(85:149 ~ log[2aff]::max_level), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#1987) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::log::Level, tracing::log::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#1987) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:28: 3090:48 (#1987) }, Spanned { node: Fn(FnDef(DefId(85:110 ~ log[2aff]::{impl#14}::builder), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#1987) }, Spanned { node: Fn(FnDef(DefId(85:116 ~ log[2aff]::{impl#15}::level), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#1987) }, Spanned { node: Fn(FnDef(DefId(81:521 ~ tracing_core[67d7]::metadata::{impl#0}::target), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#1987) }, Spanned { node: Fn(FnDef(DefId(85:117 ~ log[2aff]::{impl#15}::target), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#1987) }, Spanned { node: Fn(FnDef(DefId(85:118 ~ log[2aff]::{impl#15}::build), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3094:29 (#1987) }, Spanned { node: Fn(FnDef(DefId(85:163 ~ log[2aff]::logger), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:30: 3095:43 (#1987) }, Spanned { node: Fn(FnDef(DefId(85:123 ~ log[2aff]::Log::enabled), [dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#1987) }, Spanned { node: UnsizeCast { source_ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, target_ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased} }, span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#1987) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1966) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1966) }, Spanned { node: Fn(FnDef(DefId(81:445 ~ tracing_core[67d7]::field::{impl#48}::iter), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#1990) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1966) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1966) }, Spanned { node: Fn(FnDef(DefId(2:8915 ~ core[49ae]::iter::traits::iterator::Iterator::next), [tracing::field::Iter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#1990) }, Spanned { node: Fn(FnDef(DefId(2:9700 ~ core[49ae]::option::{impl#0}::expect), [tracing::field::Field])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#1990) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, common::types::Chain])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:74: 152:78 (#1996) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, eyre::Report])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:152:80: 152:84 (#1996) }, Spanned { node: Fn(FnDef(DefId(2:11184 ~ core[49ae]::fmt::{impl#4}::new_v1), ['{erased}, 3_usize, 2_usize])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#1996) }, Spanned { node: UnsizeCast { source_ty: &'{erased} std::fmt::Arguments<'{erased}>, target_ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased} }, span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#1995) }, Spanned { node: Fn(FnDef(DefId(81:446 ~ tracing_core[67d7]::field::{impl#48}::value_set), ['{erased}, [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize]])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#1990) }, Spanned { node: Fn(FnDef(DefId(80:291 ~ tracing[5571]::__macro_support::__tracing_log), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:21: 3097:95 (#1987) }, Spanned { node: Drop(eyre::Report), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:155:21: 155:22 (#0) }, Spanned { node: Fn(FnDef(DefId(81:587 ~ tracing_core[67d7]::metadata::{impl#13}::current), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:24: 2778:69 (#1959) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::Level, tracing::level_filters::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2778:16: 2778:69 (#1959) }, Spanned { node: Fn(FnDef(DefId(81:59 ~ tracing_core[67d7]::callsite::{impl#0}::interest), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:868:28: 868:49 (#1955) }, Spanned { node: Fn(FnDef(DefId(81:749 ~ tracing_core[67d7]::subscriber::{impl#4}::is_never), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:14: 869:33 (#1955) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:75: 869:96 (#1955) }, Spanned { node: Fn(FnDef(DefId(80:288 ~ tracing[5571]::__macro_support::__is_enabled), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:869:37: 869:107 (#1955) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1955) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1955) }, Spanned { node: Fn(FnDef(DefId(81:445 ~ tracing_core[67d7]::field::{impl#48}::iter), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#1999) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:55 (#1955) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:884:34: 884:64 (#1955) }, Spanned { node: Fn(FnDef(DefId(2:8915 ~ core[49ae]::iter::traits::iterator::Iterator::next), [tracing::field::Iter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#1999) }, Spanned { node: Fn(FnDef(DefId(2:9700 ~ core[49ae]::option::{impl#0}::expect), [tracing::field::Field])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#1999) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, common::types::Chain])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:77: 160:81 (#2005) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, ingestor::eth_client::RPCClientError])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:83: 160:87 (#2005) }, Spanned { node: Fn(FnDef(DefId(2:11184 ~ core[49ae]::fmt::{impl#4}::new_v1), ['{erased}, 2_usize, 2_usize])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2005) }, Spanned { node: UnsizeCast { source_ty: &'{erased} std::fmt::Arguments<'{erased}>, target_ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased} }, span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2004) }, Spanned { node: Fn(FnDef(DefId(81:446 ~ tracing_core[67d7]::field::{impl#48}::value_set), ['{erased}, [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize]])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#1999) }, Spanned { node: Fn(FnDef(DefId(2:3753 ~ core[49ae]::ops::function::Fn::call), [Closure(DefId(278:514 ~ ingestor[dea2]::ingestor::{impl#0}::fetch_and_push_batch::{closure#0}::{closure#2}), [i8, Binder { value: extern "RustCall" fn((tracing::field::ValueSet<'^0>,)), bound_vars: [Region(BrAnon)] }, ()]), (tracing::field::ValueSet<'{erased}>,)])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:872:13: 884:79 (#1955) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::log::Level, tracing::log::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3130:12: 3130:72 (#2007) }, Spanned { node: Fn(FnDef(DefId(81:169 ~ tracing_core[67d7]::dispatcher::has_been_set), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3131:17: 3131:51 (#2007) }, Spanned { node: Fn(FnDef(DefId(85:149 ~ log[2aff]::max_level), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:25: 3089:41 (#2013) }, Spanned { node: Fn(FnDef(DefId(2:3092 ~ core[49ae]::cmp::PartialOrd::le), [tracing::log::Level, tracing::log::LevelFilter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3089:16: 3089:41 (#2013) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3090:28: 3090:48 (#2013) }, Spanned { node: Fn(FnDef(DefId(85:110 ~ log[2aff]::{impl#14}::builder), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3091:56 (#2013) }, Spanned { node: Fn(FnDef(DefId(85:116 ~ log[2aff]::{impl#15}::level), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3092:34 (#2013) }, Spanned { node: Fn(FnDef(DefId(81:521 ~ tracing_core[67d7]::metadata::{impl#0}::target), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3093:29: 3093:42 (#2013) }, Spanned { node: Fn(FnDef(DefId(85:117 ~ log[2aff]::{impl#15}::target), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3093:43 (#2013) }, Spanned { node: Fn(FnDef(DefId(85:118 ~ log[2aff]::{impl#15}::build), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3091:32: 3094:29 (#2013) }, Spanned { node: Fn(FnDef(DefId(85:163 ~ log[2aff]::logger), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3095:30: 3095:43 (#2013) }, Spanned { node: Fn(FnDef(DefId(85:123 ~ log[2aff]::Log::enabled), [dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3096:20: 3096:45 (#2013) }, Spanned { node: UnsizeCast { source_ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased}, target_ty: &'{erased} dyn [Binder { value: Trait(tracing::log::Log), bound_vars: [] }] + '{erased} }, span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:66: 3097:72 (#2013) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1955) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1955) }, Spanned { node: Fn(FnDef(DefId(81:445 ~ tracing_core[67d7]::field::{impl#48}::iter), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2969:28: 2969:42 (#2016) }, Spanned { node: Fn(FnDef(DefId(81:40 ~ tracing_core[67d7]::callsite::Callsite::metadata), [tracing::callsite::DefaultCallsite])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:57 (#1955) }, Spanned { node: Fn(FnDef(DefId(81:518 ~ tracing_core[67d7]::metadata::{impl#0}::fields), ['{erased}])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:889:36: 889:66 (#1955) }, Spanned { node: Fn(FnDef(DefId(2:8915 ~ core[49ae]::iter::traits::iterator::Iterator::next), [tracing::field::Iter])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:67 (#2016) }, Spanned { node: Fn(FnDef(DefId(2:9700 ~ core[49ae]::option::{impl#0}::expect), [tracing::field::Field])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2972:17: 2972:112 (#2016) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, common::types::Chain])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:77: 160:81 (#2022) }, Spanned { node: Fn(FnDef(DefId(2:11085 ~ core[49ae]::fmt::rt::{impl#1}::new_debug), ['{erased}, ingestor::eth_client::RPCClientError])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:160:83: 160:87 (#2022) }, Spanned { node: Fn(FnDef(DefId(2:11184 ~ core[49ae]::fmt::{impl#4}::new_v1), ['{erased}, 2_usize, 2_usize])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:79: 2961:127 (#2022) }, Spanned { node: UnsizeCast { source_ty: &'{erased} std::fmt::Arguments<'{erased}>, target_ty: &'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased} }, span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2961:78: 2961:141 (#2021) }, Spanned { node: Fn(FnDef(DefId(81:446 ~ tracing_core[67d7]::field::{impl#48}::value_set), ['{erased}, [(&'{erased} tracing::field::Field, std::option::Option<&'{erased} dyn [Binder { value: Trait(tracing::Value), bound_vars: [] }] + '{erased}>); 1_usize]])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:2970:13: 2974:15 (#2016) }, Spanned { node: Fn(FnDef(DefId(80:291 ~ tracing[5571]::__macro_support::__tracing_log), [])), span: /Users/ericvelazquez/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/tracing-0.1.41/src/macros.rs:3097:21: 3097:95 (#2013) }, Spanned { node: Drop(ingestor::eth_client::RPCClientError), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:163:13: 163:14 (#0) }, Spanned { node: Drop(ingestor::eth_client::RPCClientError), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:163:13: 163:14 (#0) }, Spanned { node: Drop(eyre::Report), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:155:21: 155:22 (#0) }, Spanned { node: Drop(Coroutine(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), [(), std::future::ResumeTy, (), std::result::Result<(), eyre::Report>, CoroutineWitness(DefId(278:96 ~ ingestor[dea2]::ingestor::{impl#0}::push_block_and_receipts::{closure#0}), []), (&'{erased} mut ingestor::ingestor::Ingestor, common::types::BlockAndReceipts)])), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:150:79: 150:80 (#1964) }, Spanned { node: Drop(std::vec::IntoIter<common::types::BlockAndReceipts, std::alloc::Global>), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#1963) }, Spanned { node: Drop(std::pin::Pin<std::boxed::Box<dyn [Binder { value: Trait(std::future::Future), bound_vars: [] }, Binder { value: Projection(Output = std::result::Result<std::vec::Vec<common::types::BlockAndReceipts>, ingestor::eth_client::RPCClientError>), bound_vars: [] }, Binder { value: AutoTrait(DefId(2:27960 ~ core[49ae]::marker::Send)), bound_vars: [] }] + '{erased}, std::alloc::Global>>), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:141:76: 141:77 (#1953) }, Spanned { node: Drop(std::vec::Vec<u64, std::alloc::Global>), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0) }, Spanned { node: Drop(eyre::Report), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:156:17: 156:18 (#0) }, Spanned { node: Drop(std::vec::Vec<common::types::BlockAndReceipts, std::alloc::Global>), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:157:13: 157:14 (#0) }, Spanned { node: Drop(std::vec::Vec<u64, std::alloc::Global>), span: /Users/ericvelazquez/Syndicate/metabased-rollup/metabased-translator/crates/ingestor/src/ingestor.rs:165:5: 165:6 (#0) }]), is_polymorphic: false, injection_phase: None, tainted_by_errors: None, coverage_info_hi: None, function_coverage_info: None }
stack backtrace:
   0:        0x10c50fc14 - std::backtrace::Backtrace::create::h384992e32ef1ba37
   1:        0x10a7793c4 - std[20377fa5e773de1a]::panicking::update_hook::<alloc[cc2ded26e308a1b3]::boxed::Box<rustc_driver_impl[b3715a2fa479255b]::install_ice_hook::{closure#1}>>::{closure#0}
   2:        0x10c52b15c - std::panicking::rust_panic_with_hook::h5f18f9068b2f58c3
   3:        0x10c52acf0 - std::panicking::begin_panic_handler::{{closure}}::hb8b81e303c9213f3
   4:        0x10c528644 - std::sys::backtrace::__rust_end_short_backtrace::h3731a6d781287c17
   5:        0x10c52a9b4 - _rust_begin_unwind
   6:        0x10ebf8d20 - core::panicking::panic_fmt::h6b8bac135d5bea0b
   7:        0x10ecc2128 - rustc_query_system[228f95b585b62d3]::query::plumbing::incremental_verify_ich_failed::<rustc_middle[f9c8550300ab6f09]::ty::context::TyCtxt>
   8:        0x10bb0e600 - rustc_query_system[228f95b585b62d3]::query::plumbing::incremental_verify_ich::<rustc_middle[f9c8550300ab6f09]::ty::context::TyCtxt, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 8usize]>>
   9:        0x10ba7ae6c - rustc_query_system[228f95b585b62d3]::query::plumbing::try_execute_query::<rustc_query_impl[f26de731c7db3cdf]::DynamicConfig<rustc_query_system[228f95b585b62d3]::query::caches::DefIdCache<rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 8usize]>>, false, false, false>, rustc_query_impl[f26de731c7db3cdf]::plumbing::QueryCtxt, true>
  10:        0x10bccde24 - rustc_query_impl[f26de731c7db3cdf]::query_impl::optimized_mir::get_query_incr::__rust_end_short_backtrace
  11:        0x10b3a339c - rustc_middle[f9c8550300ab6f09]::query::plumbing::query_get_at::<rustc_query_system[228f95b585b62d3]::query::caches::DefIdCache<rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 8usize]>>>
  12:        0x10b38cca4 - <rustc_middle[f9c8550300ab6f09]::ty::context::TyCtxt>::coroutine_layout
  13:        0x10c48e030 - rustc_ty_utils[a794283e4f113795]::layout::coroutine_layout
  14:        0x10c49e234 - rustc_ty_utils[a794283e4f113795]::layout::layout_of
  15:        0x10bcb869c - rustc_query_impl[f26de731c7db3cdf]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2}::{closure#0}, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>
  16:        0x10bc8b41c - <rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2} as core[49ae705414b57eee]::ops::function::FnOnce<(rustc_middle[f9c8550300ab6f09]::ty::context::TyCtxt, rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>)>>::call_once
  17:        0x10baa90b8 - rustc_query_system[228f95b585b62d3]::query::plumbing::try_execute_query::<rustc_query_impl[f26de731c7db3cdf]::DynamicConfig<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>, false, true, false>, rustc_query_impl[f26de731c7db3cdf]::plumbing::QueryCtxt, true>
  18:        0x10bcff720 - rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::get_query_incr::__rust_end_short_backtrace
  19:        0x10c42d018 - rustc_middle[f9c8550300ab6f09]::query::plumbing::query_get_at::<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>>
  20:        0x10c44abbc - <core[49ae705414b57eee]::iter::adapters::GenericShunt<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::next
  21:        0x10c420b34 - core[49ae705414b57eee]::iter::adapters::try_process::<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}>>, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>, <core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::try_collect<rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::VariantIdx, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>>>::{closure#0}, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::VariantIdx, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>>>
  22:        0x10c49df70 - rustc_ty_utils[a794283e4f113795]::layout::layout_of
  23:        0x10bcb869c - rustc_query_impl[f26de731c7db3cdf]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2}::{closure#0}, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>
  24:        0x10bc8b41c - <rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2} as core[49ae705414b57eee]::ops::function::FnOnce<(rustc_middle[f9c8550300ab6f09]::ty::context::TyCtxt, rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>)>>::call_once
  25:        0x10baa90b8 - rustc_query_system[228f95b585b62d3]::query::plumbing::try_execute_query::<rustc_query_impl[f26de731c7db3cdf]::DynamicConfig<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>, false, true, false>, rustc_query_impl[f26de731c7db3cdf]::plumbing::QueryCtxt, true>
  26:        0x10bcff720 - rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::get_query_incr::__rust_end_short_backtrace
  27:        0x10c42d018 - rustc_middle[f9c8550300ab6f09]::query::plumbing::query_get_at::<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>>
  28:        0x10c44acb4 - <core[49ae705414b57eee]::iter::adapters::GenericShunt<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::next
  29:        0x10c420b34 - core[49ae705414b57eee]::iter::adapters::try_process::<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}>>, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>, <core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::try_collect<rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::VariantIdx, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>>>::{closure#0}, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::VariantIdx, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>>>
  30:        0x10c49df70 - rustc_ty_utils[a794283e4f113795]::layout::layout_of
  31:        0x10bcb869c - rustc_query_impl[f26de731c7db3cdf]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2}::{closure#0}, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>
  32:        0x10bc8b41c - <rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2} as core[49ae705414b57eee]::ops::function::FnOnce<(rustc_middle[f9c8550300ab6f09]::ty::context::TyCtxt, rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>)>>::call_once
  33:        0x10baa90b8 - rustc_query_system[228f95b585b62d3]::query::plumbing::try_execute_query::<rustc_query_impl[f26de731c7db3cdf]::DynamicConfig<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>, false, true, false>, rustc_query_impl[f26de731c7db3cdf]::plumbing::QueryCtxt, true>
  34:        0x10bcff720 - rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::get_query_incr::__rust_end_short_backtrace
  35:        0x10c42d018 - rustc_middle[f9c8550300ab6f09]::query::plumbing::query_get_at::<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>>
  36:        0x10c449e3c - <core[49ae705414b57eee]::iter::adapters::GenericShunt<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::iter::adapters::filter::Filter<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::mir::query::CoroutineSavedLocal>, rustc_ty_utils[a794283e4f113795]::layout::coroutine_layout::{closure#5}::{closure#0}>, rustc_ty_utils[a794283e4f113795]::layout::coroutine_layout::{closure#5}::{closure#1}>, rustc_ty_utils[a794283e4f113795]::layout::coroutine_layout::{closure#5}::{closure#2}>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::next
  37:        0x10c44a08c - <core[49ae705414b57eee]::iter::adapters::GenericShunt<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::iter::adapters::enumerate::Enumerate<core[49ae705414b57eee]::slice::iter::Iter<rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_middle[f9c8550300ab6f09]::mir::query::CoroutineSavedLocal>>>, <rustc_index[b2a6cc6fa1d3293a]::slice::IndexSlice<rustc_abi[d814e14c25533a60]::layout::ty::VariantIdx, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_middle[f9c8550300ab6f09]::mir::query::CoroutineSavedLocal>>>::iter_enumerated::{closure#0}>, rustc_ty_utils[a794283e4f113795]::layout::coroutine_layout::{closure#5}>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::next
  38:        0x10c48f284 - rustc_ty_utils[a794283e4f113795]::layout::coroutine_layout
  39:        0x10c49e234 - rustc_ty_utils[a794283e4f113795]::layout::layout_of
  40:        0x10bcb869c - rustc_query_impl[f26de731c7db3cdf]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2}::{closure#0}, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>
  41:        0x10bc8b41c - <rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2} as core[49ae705414b57eee]::ops::function::FnOnce<(rustc_middle[f9c8550300ab6f09]::ty::context::TyCtxt, rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>)>>::call_once
  42:        0x10baa90b8 - rustc_query_system[228f95b585b62d3]::query::plumbing::try_execute_query::<rustc_query_impl[f26de731c7db3cdf]::DynamicConfig<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>, false, true, false>, rustc_query_impl[f26de731c7db3cdf]::plumbing::QueryCtxt, true>
  43:        0x10bcff720 - rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::get_query_incr::__rust_end_short_backtrace
  44:        0x10c42d018 - rustc_middle[f9c8550300ab6f09]::query::plumbing::query_get_at::<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>>
  45:        0x10c44abbc - <core[49ae705414b57eee]::iter::adapters::GenericShunt<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::next
  46:        0x10c420b34 - core[49ae705414b57eee]::iter::adapters::try_process::<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}>>, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>, <core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::try_collect<rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::VariantIdx, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>>>::{closure#0}, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::VariantIdx, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>>>
  47:        0x10c49df70 - rustc_ty_utils[a794283e4f113795]::layout::layout_of
  48:        0x10bcb869c - rustc_query_impl[f26de731c7db3cdf]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2}::{closure#0}, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>
  49:        0x10bc8b41c - <rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2} as core[49ae705414b57eee]::ops::function::FnOnce<(rustc_middle[f9c8550300ab6f09]::ty::context::TyCtxt, rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>)>>::call_once
  50:        0x10baa90b8 - rustc_query_system[228f95b585b62d3]::query::plumbing::try_execute_query::<rustc_query_impl[f26de731c7db3cdf]::DynamicConfig<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>, false, true, false>, rustc_query_impl[f26de731c7db3cdf]::plumbing::QueryCtxt, true>
  51:        0x10bcff720 - rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::get_query_incr::__rust_end_short_backtrace
  52:        0x10c42d018 - rustc_middle[f9c8550300ab6f09]::query::plumbing::query_get_at::<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>>
  53:        0x10c44acb4 - <core[49ae705414b57eee]::iter::adapters::GenericShunt<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::next
  54:        0x10c420b34 - core[49ae705414b57eee]::iter::adapters::try_process::<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}>>, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>, <core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::VariantDef>, rustc_ty_utils[a794283e4f113795]::layout::layout_of_uncached::{closure#13}> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::try_collect<rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::VariantIdx, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>>>::{closure#0}, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::VariantIdx, rustc_index[b2a6cc6fa1d3293a]::vec::IndexVec<rustc_abi[d814e14c25533a60]::layout::ty::FieldIdx, rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>>>>
  55:        0x10c49df70 - rustc_ty_utils[a794283e4f113795]::layout::layout_of
  56:        0x10bcb869c - rustc_query_impl[f26de731c7db3cdf]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2}::{closure#0}, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>
  57:        0x10bc8b41c - <rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2} as core[49ae705414b57eee]::ops::function::FnOnce<(rustc_middle[f9c8550300ab6f09]::ty::context::TyCtxt, rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>)>>::call_once
  58:        0x10baa90b8 - rustc_query_system[228f95b585b62d3]::query::plumbing::try_execute_query::<rustc_query_impl[f26de731c7db3cdf]::DynamicConfig<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>, false, true, false>, rustc_query_impl[f26de731c7db3cdf]::plumbing::QueryCtxt, true>
  59:        0x10bcff720 - rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::get_query_incr::__rust_end_short_backtrace
  60:        0x10c42d018 - rustc_middle[f9c8550300ab6f09]::query::plumbing::query_get_at::<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>>
  61:        0x10c483ce8 - <rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutCx as rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutOf>::spanned_layout_of
  62:        0x10c44b14c - <core[49ae705414b57eee]::iter::adapters::GenericShunt<core[49ae705414b57eee]::iter::adapters::by_ref_sized::ByRefSized<core[49ae705414b57eee]::iter::adapters::chain::Chain<core[49ae705414b57eee]::iter::adapters::chain::Chain<core[49ae705414b57eee]::iter::adapters::map::Map<core[49ae705414b57eee]::iter::adapters::copied::Copied<core[49ae705414b57eee]::slice::iter::Iter<rustc_middle[f9c8550300ab6f09]::ty::Ty>>, rustc_ty_utils[a794283e4f113795]::layout::coroutine_layout::{closure#2}>, core[49ae705414b57eee]::iter::sources::once::Once<core[49ae705414b57eee]::result::Result<rustc_abi[d814e14c25533a60]::layout::ty::TyAndLayout<rustc_middle[f9c8550300ab6f09]::ty::Ty>, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>>>, core[49ae705414b57eee]::iter::adapters::map::Map<rustc_index[b2a6cc6fa1d3293a]::bit_set::BitIter<rustc_middle[f9c8550300ab6f09]::mir::query::CoroutineSavedLocal>, rustc_ty_utils[a794283e4f113795]::layout::coroutine_layout::{closure#1}>>>, core[49ae705414b57eee]::result::Result<core[49ae705414b57eee]::convert::Infallible, &rustc_middle[f9c8550300ab6f09]::ty::layout::LayoutError>> as core[49ae705414b57eee]::iter::traits::iterator::Iterator>::next
  63:        0x10c48ec90 - rustc_ty_utils[a794283e4f113795]::layout::coroutine_layout
  64:        0x10c49e234 - rustc_ty_utils[a794283e4f113795]::layout::layout_of
  65:        0x10bcb869c - rustc_query_impl[f26de731c7db3cdf]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2}::{closure#0}, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>
  66:        0x10bc8b41c - <rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::dynamic_query::{closure#2} as core[49ae705414b57eee]::ops::function::FnOnce<(rustc_middle[f9c8550300ab6f09]::ty::context::TyCtxt, rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>)>>::call_once
  67:        0x10baa90b8 - rustc_query_system[228f95b585b62d3]::query::plumbing::try_execute_query::<rustc_query_impl[f26de731c7db3cdf]::DynamicConfig<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>, false, true, false>, rustc_query_impl[f26de731c7db3cdf]::plumbing::QueryCtxt, true>
  68:        0x10bcff720 - rustc_query_impl[f26de731c7db3cdf]::query_impl::layout_of::get_query_incr::__rust_end_short_backtrace
  69:        0x100142504 - rustc_middle[f9c8550300ab6f09]::query::plumbing::query_get_at::<rustc_query_system[228f95b585b62d3]::query::caches::DefaultCache<rustc_middle[f9c8550300ab6f09]::ty::PseudoCanonicalInput<rustc_middle[f9c8550300ab6f09]::ty::Ty>, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 16usize]>>>
  70:        0x1002cdf68 - <clippy_lints[d836abbdd4ae0668]::large_stack_frames::LargeStackFrames as rustc_lint[424dd919a73c5d86]::passes::LateLintPass>::check_fn
  71:        0x10b0d73f8 - <rustc_lint[424dd919a73c5d86]::late::LateContextAndPass<rustc_lint[424dd919a73c5d86]::late::RuntimeCombinedLateLintPass>>::with_lint_attrs::<<rustc_lint[424dd919a73c5d86]::late::LateContextAndPass<rustc_lint[424dd919a73c5d86]::late::RuntimeCombinedLateLintPass> as rustc_hir[2bff6e7d85ea20b0]::intravisit::Visitor>::visit_expr::{closure#0}::{closure#0}>
  72:        0x10b0ddaf4 - <rustc_lint[424dd919a73c5d86]::late::LateContextAndPass<rustc_lint[424dd919a73c5d86]::late::RuntimeCombinedLateLintPass> as rustc_hir[2bff6e7d85ea20b0]::intravisit::Visitor>::visit_nested_body
  73:        0x10b0de6ec - <rustc_lint[424dd919a73c5d86]::late::LateContextAndPass<rustc_lint[424dd919a73c5d86]::late::RuntimeCombinedLateLintPass> as rustc_hir[2bff6e7d85ea20b0]::intravisit::Visitor>::visit_fn
  74:        0x10b0d82f4 - <rustc_lint[424dd919a73c5d86]::late::LateContextAndPass<rustc_lint[424dd919a73c5d86]::late::RuntimeCombinedLateLintPass>>::with_lint_attrs::<<rustc_lint[424dd919a73c5d86]::late::LateContextAndPass<rustc_lint[424dd919a73c5d86]::late::RuntimeCombinedLateLintPass> as rustc_hir[2bff6e7d85ea20b0]::intravisit::Visitor>::visit_item::{closure#0}>
  75:        0x10b014b1c - rustc_hir[2bff6e7d85ea20b0]::intravisit::walk_mod::<rustc_lint[424dd919a73c5d86]::late::LateContextAndPass<rustc_lint[424dd919a73c5d86]::late::RuntimeCombinedLateLintPass>>
  76:        0x10b0d8b08 - <rustc_lint[424dd919a73c5d86]::late::LateContextAndPass<rustc_lint[424dd919a73c5d86]::late::RuntimeCombinedLateLintPass>>::with_lint_attrs::<<rustc_lint[424dd919a73c5d86]::late::LateContextAndPass<rustc_lint[424dd919a73c5d86]::late::RuntimeCombinedLateLintPass> as rustc_hir[2bff6e7d85ea20b0]::intravisit::Visitor>::visit_item::{closure#0}>
  77:        0x10b014b1c - rustc_hir[2bff6e7d85ea20b0]::intravisit::walk_mod::<rustc_lint[424dd919a73c5d86]::late::LateContextAndPass<rustc_lint[424dd919a73c5d86]::late::RuntimeCombinedLateLintPass>>
  78:        0x10b0df3f4 - rustc_lint[424dd919a73c5d86]::late::check_crate::{closure#0}
  79:        0x10b0de8c0 - rustc_lint[424dd919a73c5d86]::late::check_crate
  80:        0x10afe0bf0 - rustc_interface[d1db228e7199bcd9]::passes::analysis
  81:        0x10bcb8308 - rustc_query_impl[f26de731c7db3cdf]::plumbing::__rust_begin_short_backtrace::<rustc_query_impl[f26de731c7db3cdf]::query_impl::analysis::dynamic_query::{closure#2}::{closure#0}, rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 0usize]>>
  82:        0x10ba7ee04 - rustc_query_system[228f95b585b62d3]::query::plumbing::try_execute_query::<rustc_query_impl[f26de731c7db3cdf]::DynamicConfig<rustc_query_system[228f95b585b62d3]::query::caches::SingleCache<rustc_middle[f9c8550300ab6f09]::query::erase::Erased<[u8; 0usize]>>, false, false, false>, rustc_query_impl[f26de731c7db3cdf]::plumbing::QueryCtxt, true>
  83:        0x10bcc35c8 - rustc_query_impl[f26de731c7db3cdf]::query_impl::analysis::get_query_incr::__rust_end_short_backtrace
  84:        0x10a76c888 - rustc_interface[d1db228e7199bcd9]::passes::create_and_enter_global_ctxt::<core[49ae705414b57eee]::option::Option<rustc_interface[d1db228e7199bcd9]::queries::Linker>, rustc_driver_impl[b3715a2fa479255b]::run_compiler::{closure#0}::{closure#2}>
  85:        0x10a77f6a0 - rustc_interface[d1db228e7199bcd9]::interface::run_compiler::<(), rustc_driver_impl[b3715a2fa479255b]::run_compiler::{closure#0}>::{closure#1}
  86:        0x10a76d9a0 - std[20377fa5e773de1a]::sys::backtrace::__rust_begin_short_backtrace::<rustc_interface[d1db228e7199bcd9]::util::run_in_thread_with_globals<rustc_interface[d1db228e7199bcd9]::util::run_in_thread_pool_with_globals<rustc_interface[d1db228e7199bcd9]::interface::run_compiler<(), rustc_driver_impl[b3715a2fa479255b]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>
  87:        0x10a782670 - <<std[20377fa5e773de1a]::thread::Builder>::spawn_unchecked_<rustc_interface[d1db228e7199bcd9]::util::run_in_thread_with_globals<rustc_interface[d1db228e7199bcd9]::util::run_in_thread_pool_with_globals<rustc_interface[d1db228e7199bcd9]::interface::run_compiler<(), rustc_driver_impl[b3715a2fa479255b]::run_compiler::{closure#0}>::{closure#1}, ()>::{closure#0}, ()>::{closure#0}::{closure#0}, ()>::{closure#1} as core[49ae705414b57eee]::ops::function::FnOnce<()>>::call_once::{shim:vtable#0}
  88:        0x10c535fd8 - std::sys::pal::unix::thread::Thread::new::thread_start::h67ebfb0d7edd9a8d
  89:        0x19fca606c - __pthread_deallocate


rustc version: 1.86.0-nightly (99db2737c 2025-01-16)
platform: aarch64-apple-darwin

query stack during panic:
#0 [optimized_mir] optimizing MIR for `ingestor::ingestor::Ingestor::fetch_and_push_batch::{closure#0}`
#1 [layout_of] computing layout of `{async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}`
#2 [layout_of] computing layout of `core::mem::manually_drop::ManuallyDrop<{async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}>`
#3 [layout_of] computing layout of `core::mem::maybe_uninit::MaybeUninit<{async fn body of ingestor::ingestor::Ingestor::fetch_and_push_batch()}>`
#4 [layout_of] computing layout of `{async fn body of ingestor::ingestor::Ingestor::start_polling()}`
#5 [layout_of] computing layout of `core::mem::manually_drop::ManuallyDrop<{async fn body of ingestor::ingestor::Ingestor::start_polling()}>`
#6 [layout_of] computing layout of `core::mem::maybe_uninit::MaybeUninit<{async fn body of ingestor::ingestor::Ingestor::start_polling()}>`
#7 [layout_of] computing layout of `{async block@metabased-translator/tests/src/full_meta_node.rs:311:57: 311:67}`
#8 [analysis] running analysis passes on this crate
end of query stack
